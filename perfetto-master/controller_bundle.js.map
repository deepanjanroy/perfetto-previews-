{"version":3,"file":"controller_bundle.js","sources":["../../../ui/src/controller/index.ts","../../../ui/src/controller/app_controller.ts","../../../ui/src/controller/trace_controller.ts","../../../ui/src/controller/query_controller.ts","../../../ui/src/controller/permalink_controller.ts","../../../ui/node_modules/uuid/v4.js","../../../ui/node_modules/uuid/lib/bytesToUuid.js","../../../ui/node_modules/uuid/lib/rng-browser.js","../../../ui/src/base/remote.ts","../../../ui/src/tracks/chrome_slices/controller.ts","../../../ui/src/tracks/chrome_slices/common.ts","../../../ui/src/tracks/cpu_slices/controller.ts","../../../ui/src/tracks/cpu_slices/common.ts","../../../ui/src/tracks/cpu_counters/controller.ts","../../../ui/src/tracks/cpu_counters/common.ts","../../../ui/src/controller/track_controller.ts","../../../ui/src/controller/globals.ts","../../../ui/src/controller/wasm_engine_proxy.ts","../../../ui/src/controller/engine.ts","../../../ui/src/common/time.ts","../../../ui/src/common/protos.ts","../obj/ui/gen/protos.js","../../../ui/node_modules/protobufjs/minimal.js","../../../ui/node_modules/protobufjs/src/index-minimal.js","../../../ui/node_modules/protobufjs/src/roots.js","../../../ui/node_modules/protobufjs/src/rpc.js","../../../ui/node_modules/protobufjs/src/rpc/service.js","../../../ui/node_modules/protobufjs/src/reader_buffer.js","../../../ui/node_modules/protobufjs/src/reader.js","../../../ui/node_modules/protobufjs/src/writer_buffer.js","../../../ui/node_modules/protobufjs/src/writer.js","../../../ui/node_modules/protobufjs/src/util/minimal.js","../../../ui/node_modules/protobufjs/src/util/longbits.js","../../../ui/node_modules/@protobufjs/pool/index.js","../../../ui/node_modules/@protobufjs/utf8/index.js","../../../ui/node_modules/@protobufjs/inquire/index.js","../../../ui/node_modules/@protobufjs/float/index.js","../../../ui/node_modules/@protobufjs/eventemitter/index.js","../../../ui/node_modules/@protobufjs/base64/index.js","../../../ui/node_modules/@protobufjs/aspromise/index.js","../../../ui/src/base/deferred.ts","../../../ui/src/controller/reducer.ts","../../../ui/src/common/state.ts","../../../ui/node_modules/tslib/tslib.es6.js","../../../ui/src/controller/controller.ts","../../../ui/src/common/registry.ts","../../../ui/src/common/actions.ts","../../../ui/src/base/logging.ts"],"sourcesContent":["// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport '../tracks/all_controller';\n\nimport {Remote} from '../base/remote';\n\nimport {AppController} from './app_controller';\nimport {globals} from './globals';\n\nfunction main(port: MessagePort) {\n  let receivedFrontendPort = false;\n  port.onmessage = ({data}) => {\n    if (!receivedFrontendPort) {\n      const frontendPort = data as MessagePort;\n      const frontend = new Remote(frontendPort);\n      globals.initialize(new AppController(), frontend);\n      receivedFrontendPort = true;\n    } else {\n      globals.dispatch(data);\n    }\n  };\n}\n\nmain(self as {} as MessagePort);\n","// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {globals} from '../controller/globals';\nimport {Child, Controller, ControllerInitializerAny} from './controller';\nimport {PermalinkController} from './permalink_controller';\nimport {TraceController} from './trace_controller';\n\n// The root controller for the entire app. It handles the lifetime of all\n// the other controllers (e.g., track and query controllers) according to the\n// global state.\nexport class AppController extends Controller<'main'> {\n  constructor() {\n    super('main');\n  }\n\n  // This is the root method that is called every time the controller tree is\n  // re-triggered. This can happen due to:\n  // - An action received from the frontend.\n  // - An internal promise of a nested controller being resolved and manually\n  //   re-triggering the controllers.\n  run() {\n    const engineKeys = Object.keys(globals.state.engines);\n    const childControllers: ControllerInitializerAny[] = [\n      Child('permalink', PermalinkController, {}),\n    ];\n    if (engineKeys.length > 0) {\n      const cfg = globals.state.engines[engineKeys[0]];\n      childControllers.push(Child(cfg.id, TraceController, cfg.id));\n    }\n    return childControllers;\n  }\n}\n","// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport '../tracks/all_controller';\n\nimport {assertExists, assertTrue} from '../base/logging';\nimport {\n  Action,\n  addChromeSliceTrack,\n  addTrack,\n  navigate,\n  setEngineReady,\n  setTraceTime,\n  setVisibleTraceTime,\n  updateStatus\n} from '../common/actions';\nimport {TimeSpan} from '../common/time';\nimport {QuantizedLoad, ThreadDesc} from '../frontend/globals';\nimport {SLICE_TRACK_KIND} from '../tracks/chrome_slices/common';\nimport {CPU_SLICE_TRACK_KIND} from '../tracks/cpu_slices/common';\n\nimport {Child, Children, Controller} from './controller';\nimport {Engine} from './engine';\nimport {globals} from './globals';\nimport {QueryController, QueryControllerArgs} from './query_controller';\nimport {TrackControllerArgs, trackControllerRegistry} from './track_controller';\n\ntype States = 'init'|'loading_trace'|'ready';\n\n\ndeclare interface FileReaderSync { readAsArrayBuffer(blob: Blob): ArrayBuffer; }\n\ndeclare var FileReaderSync:\n    {prototype: FileReaderSync; new (): FileReaderSync;};\n\n// TraceController handles handshakes with the frontend for everything that\n// concerns a single trace. It owns the WASM trace processor engine, handles\n// tracks data and SQL queries. There is one TraceController instance for each\n// trace opened in the UI (for now only one trace is supported).\nexport class TraceController extends Controller<States> {\n  private readonly engineId: string;\n  private engine?: Engine;\n\n  constructor(engineId: string) {\n    super('init');\n    this.engineId = engineId;\n  }\n\n  onDestroy() {\n    if (this.engine !== undefined) globals.destroyEngine(this.engine.id);\n  }\n\n  run() {\n    const engineCfg = assertExists(globals.state.engines[this.engineId]);\n    switch (this.state) {\n      case 'init':\n        globals.dispatch(setEngineReady(this.engineId, false));\n        this.loadTrace().then(() => {\n          globals.dispatch(setEngineReady(this.engineId, true));\n        });\n        globals.dispatch(updateStatus('Opening trace'));\n        this.setState('loading_trace');\n        break;\n\n      case 'loading_trace':\n        // Stay in this state until loadTrace() returns and marks the engine as\n        // ready.\n        if (this.engine === undefined || !engineCfg.ready) return;\n        this.setState('ready');\n        break;\n\n      case 'ready':\n        // At this point we are ready to serve queries and handle tracks.\n        const engine = assertExists(this.engine);\n        assertTrue(engineCfg.ready);\n        const childControllers: Children = [];\n\n        // Create a TrackController for each track.\n        for (const trackId of Object.keys(globals.state.tracks)) {\n          const trackCfg = globals.state.tracks[trackId];\n          if (trackCfg.engineId !== this.engineId) continue;\n          if (!trackControllerRegistry.has(trackCfg.kind)) continue;\n          const trackCtlFactory = trackControllerRegistry.get(trackCfg.kind);\n          const trackArgs: TrackControllerArgs = {trackId, engine};\n          childControllers.push(Child(trackId, trackCtlFactory, trackArgs));\n        }\n\n        // Create a QueryController for each query.\n        for (const queryId of Object.keys(globals.state.queries)) {\n          const queryArgs: QueryControllerArgs = {queryId, engine};\n          childControllers.push(Child(queryId, QueryController, queryArgs));\n        }\n\n        return childControllers;\n\n      default:\n        throw new Error(`unknown state ${this.state}`);\n    }\n    return;\n  }\n\n  private async loadTrace() {\n    globals.dispatch(updateStatus('Creating trace processor'));\n    const engineCfg = assertExists(globals.state.engines[this.engineId]);\n    this.engine = await globals.createEngine();\n\n    const statusHeader = 'Opening trace';\n    if (engineCfg.source instanceof File) {\n      const blob = engineCfg.source as Blob;\n      const reader = new FileReaderSync();\n      const SLICE_SIZE = 1024 * 1024;\n      for (let off = 0; off < blob.size; off += SLICE_SIZE) {\n        const slice = blob.slice(off, off + SLICE_SIZE);\n        const arrBuf = reader.readAsArrayBuffer(slice);\n        await this.engine.parse(new Uint8Array(arrBuf));\n        const progress = Math.round((off + slice.size) / blob.size * 100);\n        globals.dispatch(updateStatus(`${statusHeader} ${progress} %`));\n      }\n    } else {\n      const resp = await fetch(engineCfg.source);\n      if (resp.status !== 200) {\n        globals.dispatch(updateStatus(`HTTP error ${resp.status}`));\n        throw new Error(`fetch() failed with HTTP error ${resp.status}`);\n      }\n      // tslint:disable-next-line no-any\n      const rd = (resp.body as any).getReader() as ReadableStreamReader;\n      const tStartMs = performance.now();\n      let tLastUpdateMs = 0;\n      for (let off = 0;;) {\n        const readRes = await rd.read() as {value: Uint8Array, done: boolean};\n        if (readRes.value !== undefined) {\n          off += readRes.value.length;\n          await this.engine.parse(readRes.value);\n        }\n        // For traces loaded from the network there doesn't seem to be a\n        // reliable way to compute the %. The content-length exposed by GCS is\n        // before compression (which is handled transparently by the browser).\n        const nowMs = performance.now();\n        if (nowMs - tLastUpdateMs > 100) {\n          tLastUpdateMs = nowMs;\n          const mb = off / 1e6;\n          const tElapsed = (nowMs - tStartMs) / 1e3;\n          let status = `${statusHeader} ${mb.toFixed(1)} MB `;\n          status += `(${(mb / tElapsed).toFixed(1)} MB/s)`;\n          globals.dispatch(updateStatus(status));\n        }\n        if (readRes.done) break;\n      }\n    }\n\n    await this.engine.notifyEof();\n\n    const traceTime = await this.engine.getTraceTimeBounds();\n    const actions = [\n      setTraceTime(traceTime),\n      navigate('/viewer'),\n    ];\n\n    if (globals.state.visibleTraceTime.lastUpdate === 0) {\n      actions.push(setVisibleTraceTime(traceTime));\n    }\n\n    globals.dispatchMultiple(actions);\n\n    await this.listTracks();\n    await this.listThreads();\n    await this.loadTimelineOverview(traceTime);\n  }\n\n  private async listTracks() {\n    globals.dispatch(updateStatus('Loading tracks'));\n    const engine = assertExists<Engine>(this.engine);\n    const addToTrackActions: Action[] = [];\n    const numCpus = await engine.getNumberOfCpus();\n    for (let cpu = 0; cpu < numCpus; cpu++) {\n      addToTrackActions.push(\n          addTrack(this.engineId, CPU_SLICE_TRACK_KIND, cpu));\n    }\n\n    const threadQuery = await engine.rawQuery({\n      sqlQuery: 'select upid, utid, tid, thread.name, max(slices.depth) ' +\n          'from thread inner join slices using(utid) group by utid'\n    });\n    for (let i = 0; i < threadQuery.numRecords; i++) {\n      const upid = threadQuery.columns[0].longValues![i];\n      const utid = threadQuery.columns[1].longValues![i];\n      const threadId = threadQuery.columns[2].longValues![i];\n      let threadName = threadQuery.columns[3].stringValues![i];\n      threadName += `[${threadId}]`;\n      const maxDepth = threadQuery.columns[4].longValues![i];\n      addToTrackActions.push(addChromeSliceTrack(\n          this.engineId,\n          SLICE_TRACK_KIND,\n          upid as number,\n          utid as number,\n          threadName,\n          maxDepth as number));\n    }\n    globals.dispatchMultiple(addToTrackActions);\n  }\n\n  private async listThreads() {\n    globals.dispatch(updateStatus('Reading thread list'));\n    const sqlQuery = 'select utid, tid, pid, thread.name, process.name ' +\n        'from thread inner join process using(upid)';\n    const threadRows = await assertExists(this.engine).rawQuery({sqlQuery});\n    const threads: ThreadDesc[] = [];\n    for (let i = 0; i < threadRows.numRecords; i++) {\n      const utid = threadRows.columns[0].longValues![i] as number;\n      const tid = threadRows.columns[1].longValues![i] as number;\n      const pid = threadRows.columns[2].longValues![i] as number;\n      const threadName = threadRows.columns[3].stringValues![i];\n      const procName = threadRows.columns[4].stringValues![i];\n      threads.push({utid, tid, threadName, pid, procName});\n    }  // for (record ...)\n    globals.publish('Threads', threads);\n  }\n\n  private async loadTimelineOverview(traceTime: TimeSpan) {\n    const engine = assertExists<Engine>(this.engine);\n    const numSteps = 100;\n    const stepSec = traceTime.duration / numSteps;\n    for (let step = 0; step < numSteps; step++) {\n      globals.dispatch(updateStatus(\n          'Loading overview ' +\n          `${Math.round((step + 1) / numSteps * 1000) / 10}%`));\n      const startSec = traceTime.start + step * stepSec;\n      const startNs = Math.floor(startSec * 1e9);\n      const endSec = startSec + stepSec;\n      const endNs = Math.ceil(endSec * 1e9);\n\n      // Sched overview.\n      const schedRows = await engine.rawQuery({\n        sqlQuery: `select sum(dur)/${stepSec}/1e9, cpu from sched ` +\n            `where ts >= ${startNs} and ts < ${endNs} ` +\n            'group by cpu order by cpu'\n      });\n      const schedData: {[key: string]: QuantizedLoad} = {};\n      for (let i = 0; i < schedRows.numRecords; i++) {\n        const load = schedRows.columns[0].doubleValues![i];\n        const cpu = schedRows.columns[1].longValues![i] as number;\n        schedData[cpu] = {startSec, endSec, load};\n      }  // for (record ...)\n      globals.publish('OverviewData', schedData);\n\n      // Slices overview.\n      const slicesRows = await engine.rawQuery({\n        sqlQuery:\n            `select sum(dur)/${stepSec}/1e9, process.name, process.pid, upid ` +\n            'from slices inner join thread using(utid) ' +\n            'inner join process using(upid) where depth = 0 ' +\n            `and ts >= ${startNs} and ts < ${endNs} ` +\n            'group by upid'\n      });\n      const slicesData: {[key: string]: QuantizedLoad} = {};\n      for (let i = 0; i < slicesRows.numRecords; i++) {\n        const load = slicesRows.columns[0].doubleValues![i];\n        let procName = slicesRows.columns[1].stringValues![i];\n        const pid = slicesRows.columns[2].longValues![i];\n        procName += ` [${pid}]`;\n        slicesData[procName] = {startSec, endSec, load};\n      }\n      globals.publish('OverviewData', slicesData);\n    }  // for (step ...)\n  }\n}\n","// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {assertExists} from '../base/logging';\nimport {deleteQuery} from '../common/actions';\nimport {rawQueryResultColumns, rawQueryResultIter, Row} from '../common/protos';\nimport {QueryResponse} from '../common/queries';\nimport {Controller} from './controller';\nimport {Engine} from './engine';\nimport {globals} from './globals';\n\nexport interface QueryControllerArgs {\n  queryId: string;\n  engine: Engine;\n}\n\nexport class QueryController extends Controller<'init'|'querying'> {\n  constructor(private args: QueryControllerArgs) {\n    super('init');\n  }\n\n  run() {\n    switch (this.state) {\n      case 'init':\n        const config = assertExists(globals.state.queries[this.args.queryId]);\n        this.runQuery(config.query).then(result => {\n          console.log(`Query ${config.query} took ${result.durationMs} ms`);\n          globals.publish('QueryResult', {id: this.args.queryId, data: result});\n          globals.dispatch(deleteQuery(this.args.queryId));\n        });\n        this.setState('querying');\n        break;\n\n      case 'querying':\n        // Nothing to do here, as soon as the deleteQuery is dispatched this\n        // controller will be destroyed (by the TraceController).\n        break;\n\n      default:\n        throw new Error(`Unexpected state ${this.state}`);\n    }\n  }\n\n  private async runQuery(sqlQuery: string) {\n    const startMs = performance.now();\n    const rawResult = await this.args.engine.rawQuery({sqlQuery});\n    const durationMs = performance.now() - startMs;\n    const columns = rawQueryResultColumns(rawResult);\n    const rows =\n        QueryController.firstN<Row>(10000, rawQueryResultIter(rawResult));\n    const result: QueryResponse = {\n      id: this.args.queryId,\n      query: sqlQuery,\n      durationMs,\n      error: rawResult.error,\n      totalRowCount: +rawResult.numRecords,\n      columns,\n      rows,\n    };\n    return result;\n  }\n\n  private static firstN<T>(n: number, iter: IterableIterator<T>): T[] {\n    const list = [];\n    for (let i = 0; i < n; i++) {\n      const {done, value} = iter.next();\n      if (done) break;\n      list.push(value);\n    }\n    return list;\n  }\n}\n","// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport * as uuidv4 from 'uuid/v4';\n\nimport {assertExists} from '../base/logging';\nimport {setPermalink, setState} from '../common/actions';\nimport {EngineConfig, State} from '../common/state';\n\nimport {Controller} from './controller';\nimport {globals} from './globals';\n\nexport const BUCKET_NAME = 'perfetto-ui-data';\n\nexport class PermalinkController extends Controller<'main'> {\n  private lastRequestId?: string;\n  constructor() {\n    super('main');\n  }\n\n  run() {\n    if (globals.state.permalink.requestId === undefined ||\n        globals.state.permalink.requestId === this.lastRequestId) {\n      return;\n    }\n    const requestId = assertExists(globals.state.permalink.requestId);\n    this.lastRequestId = requestId;\n\n    // if the |link| is not set, this is a request to create a permalink.\n    if (globals.state.permalink.hash === undefined) {\n      PermalinkController.createPermalink().then(hash => {\n        globals.dispatch(setPermalink(requestId, hash));\n      });\n      return;\n    }\n\n    // Otherwise, this is a request to load the permalink.\n    PermalinkController.loadState(globals.state.permalink.hash).then(state => {\n      globals.dispatch(setState(state));\n      this.lastRequestId = state.permalink.requestId;\n    });\n  }\n\n  private static async createPermalink() {\n    const state = {...globals.state};\n    state.engines = {...state.engines};\n    for (const engine of Object.values<EngineConfig>(state.engines)) {\n      // If the trace was opened from a local file, upload it and store the\n      // url of the uploaded trace instead.\n      if (engine.source instanceof File) {\n        const url = await this.saveTrace(engine.source);\n        engine.source = url;\n      }\n    }\n    const hash = await this.saveState(state);\n    return hash;\n  }\n\n\n  private static async saveState(state: State): Promise<string> {\n    const text = JSON.stringify(state);\n    const hash = await this.toSha256(text);\n    const url = 'https://www.googleapis.com/upload/storage/v1/b/' +\n        `${BUCKET_NAME}/o?uploadType=media` +\n        `&name=${hash}&predefinedAcl=publicRead`;\n    const response = await fetch(url, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8',\n      },\n      body: text,\n    });\n    await response.json();\n\n    return hash;\n  }\n\n  private static async saveTrace(trace: File): Promise<string> {\n    // TODO(hjd): This should probably also be a hash but that requires\n    // trace processor support.\n    const name = uuidv4();\n    const url = 'https://www.googleapis.com/upload/storage/v1/b/' +\n        `${BUCKET_NAME}/o?uploadType=media` +\n        `&name=${name}&predefinedAcl=publicRead`;\n    const response = await fetch(url, {\n      method: 'post',\n      headers: {'Content-Type': 'application/octet-stream;'},\n      body: trace,\n    });\n    await response.json();\n    return `https://storage.googleapis.com/${BUCKET_NAME}/${name}`;\n  }\n\n\n  private static async loadState(id: string): Promise<State> {\n    const url = `https://storage.googleapis.com/${BUCKET_NAME}/${id}`;\n    const response = await fetch(url);\n    const text = await response.text();\n    const stateHash = await this.toSha256(text);\n    const state = JSON.parse(text);\n    if (stateHash !== id) {\n      throw new Error(`State hash does not match ${id} vs. ${stateHash}`);\n    }\n    return state;\n  }\n\n  private static async toSha256(str: string): Promise<string> {\n    // TODO(hjd): TypeScript bug with definition of TextEncoder.\n    // tslint:disable-next-line no-any\n    const buffer = new (TextEncoder as any)('utf-8').encode(str);\n    const digest = await crypto.subtle.digest('SHA-256', buffer);\n    return Array.from(new Uint8Array(digest)).map(x => x.toString(16)).join('');\n  }\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {defer, Deferred} from './deferred';\n\ninterface RemoteResponse {\n  id: number;\n  result: {};\n}\n\n/**\n * A proxy for an object that lives on another thread.\n */\nexport class Remote {\n  private nextRequestId: number;\n  private port: MessagePort;\n  // tslint:disable-next-line no-any\n  private deferredRequests: Map<number, Deferred<any>>;\n\n  constructor(port: MessagePort) {\n    this.nextRequestId = 0;\n    this.deferredRequests = new Map();\n    this.port = port;\n    this.port.onmessage = (event: MessageEvent) => {\n      this.receive(event.data);\n    };\n  }\n\n  /**\n   * Invoke method with name |method| with |args| on the remote object.\n   * Optionally set |transferList| to transfer those objects.\n   */\n  // tslint:disable-next-line no-any\n  send<T extends any>(\n      method: string, args: Array<{}>, transferList?: Array<{}>): Promise<T> {\n    const d = defer<T>();\n    this.deferredRequests.set(this.nextRequestId, d);\n    this.port.postMessage(\n        {\n          responseId: this.nextRequestId,\n          method,\n          args,\n        },\n        transferList);\n    this.nextRequestId += 1;\n    return d;\n  }\n\n  private receive(response: RemoteResponse): void {\n    const d = this.deferredRequests.get(response.id);\n    if (!d) throw new Error(`No deferred response with ID ${response.id}`);\n    this.deferredRequests.delete(response.id);\n    d.resolve(response.result);\n  }\n}\n\n/**\n * Given a MessagePort |port| where the other end is owned by a Remote\n * (see above) turn each incoming MessageEvent into a call on |handler|\n * and post the result back to the calling thread.\n */\nexport function forwardRemoteCalls(\n    port: MessagePort,\n    // tslint:disable-next-line no-any\n    handler: {[key: string]: any}) {\n  port.onmessage = (msg: MessageEvent) => {\n    const method = msg.data.method;\n    const id = msg.data.responseId;\n    const args = msg.data.args || [];\n    if (method === undefined || id === undefined) {\n      throw new Error(`Invalid call method: ${method} id: ${id}`);\n    }\n\n    if (!(handler[method] instanceof Function)) {\n      throw new Error(`Method not known: ${method}(${args})`);\n    }\n\n    const result = handler[method].apply(handler, args);\n    const transferList = [];\n\n    if (result !== undefined && result.port instanceof MessagePort) {\n      transferList.push(result.port);\n    }\n\n    port.postMessage(\n        {\n          id,\n          result,\n        },\n        transferList);\n  };\n}\n","// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {fromNs} from '../../common/time';\nimport {globals} from '../../controller/globals';\nimport {\n  TrackController,\n  trackControllerRegistry\n} from '../../controller/track_controller';\n\nimport {ChromeSliceTrackData, SLICE_TRACK_KIND} from './common';\n\nclass ChromeSliceTrackController extends TrackController {\n  static readonly kind = SLICE_TRACK_KIND;\n  private busy = false;\n\n  onBoundsChange(start: number, end: number, resolution: number) {\n    // TODO: we should really call TraceProcessor.Interrupt() at this point.\n    if (this.busy) return;\n    const LIMIT = 10000;\n\n    // TODO: \"ts >= x - dur\" below is inefficient because doesn't allow to use\n    // any index. We need to introduce ts_lower_bound also for the slices table\n    // (see sched table).\n    const query = `select ts,dur,depth,cat,name from slices ` +\n        `where utid = ${this.trackState.utid} ` +\n        `and ts >= ${Math.round(start * 1e9)} - dur ` +\n        `and ts <= ${Math.round(end * 1e9)} ` +\n        `and dur >= ${Math.round(resolution * 1e9)} ` +\n        `order by ts ` +\n        `limit ${LIMIT};`;\n\n    this.busy = true;\n    console.log(query);\n    this.engine.rawQuery({'sqlQuery': query}).then(rawResult => {\n      this.busy = false;\n      if (rawResult.error) {\n        throw new Error(`Query error \"${query}\": ${rawResult.error}`);\n      }\n\n      const numRows = +rawResult.numRecords;\n\n      const slices: ChromeSliceTrackData = {\n        start,\n        end,\n        resolution,\n        strings: [],\n        starts: new Float64Array(numRows),\n        ends: new Float64Array(numRows),\n        depths: new Uint16Array(numRows),\n        titles: new Uint16Array(numRows),\n        categories: new Uint16Array(numRows),\n      };\n\n      const stringIndexes = new Map<string, number>();\n      function internString(str: string) {\n        let idx = stringIndexes.get(str);\n        if (idx !== undefined) return idx;\n        idx = slices.strings.length;\n        slices.strings.push(str);\n        stringIndexes.set(str, idx);\n        return idx;\n      }\n\n      for (let row = 0; row < numRows; row++) {\n        const cols = rawResult.columns;\n        const startSec = fromNs(+cols[0].longValues![row]);\n        slices.starts[row] = startSec;\n        slices.ends[row] = startSec + fromNs(+cols[1].longValues![row]);\n        slices.depths[row] = +cols[2].longValues![row];\n        slices.categories[row] = internString(cols[3].stringValues![row]);\n        slices.titles[row] = internString(cols[4].stringValues![row]);\n      }\n      if (numRows === LIMIT) {\n        slices.end = slices.ends[slices.ends.length - 1];\n      }\n      globals.publish('TrackData', {id: this.trackId, data: slices});\n    });\n  }\n}\n\ntrackControllerRegistry.register(ChromeSliceTrackController);\n","// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport const SLICE_TRACK_KIND = 'ChromeSliceTrack';\n\nexport interface ChromeSliceTrackData {\n  start: number;\n  end: number;\n  resolution: number;\n\n  // Slices are stored in a columnar fashion. All fields have the same length.\n  strings: string[];\n  starts: Float64Array;\n  ends: Float64Array;\n  depths: Uint16Array;\n  titles: Uint16Array;      // Index in |strings|.\n  categories: Uint16Array;  // Index in |strings|.\n}\n","// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {fromNs} from '../../common/time';\nimport {globals} from '../../controller/globals';\nimport {\n  TrackController,\n  trackControllerRegistry\n} from '../../controller/track_controller';\n\nimport {CPU_SLICE_TRACK_KIND, CpuSliceTrackData} from './common';\n\nclass CpuSliceTrackController extends TrackController {\n  static readonly kind = CPU_SLICE_TRACK_KIND;\n  private busy = false;\n\n  onBoundsChange(start: number, end: number, resolution: number) {\n    // TODO: we should really call TraceProcessor.Interrupt() at this point.\n    if (this.busy) return;\n    const LIMIT = 10000;\n    const query = 'select ts,dur,utid from sched ' +\n        `where cpu = ${this.trackState.cpu} ` +\n        `and ts_lower_bound = ${Math.round(start * 1e9)} ` +\n        `and ts <= ${Math.round(end * 1e9)} ` +\n        `and dur >= ${Math.round(resolution * 1e9)} ` +\n        `order by ts ` +\n        `limit ${LIMIT};`;\n\n    if (this.trackState.cpu === 0) console.log('QUERY', query);\n\n    this.busy = true;\n    this.engine.rawQuery({'sqlQuery': query}).then(rawResult => {\n      this.busy = false;\n      if (rawResult.error) {\n        throw new Error(`Query error \"${query}\": ${rawResult.error}`);\n      }\n      if (this.trackState.cpu === 0) console.log('QUERY DONE', query);\n\n      const numRows = +rawResult.numRecords;\n\n      const slices: CpuSliceTrackData = {\n        start,\n        end,\n        resolution,\n        starts: new Float64Array(numRows),\n        ends: new Float64Array(numRows),\n        utids: new Uint32Array(numRows),\n      };\n\n      for (let row = 0; row < numRows; row++) {\n        const cols = rawResult.columns;\n        const startSec = fromNs(+cols[0].longValues![row]);\n        slices.starts[row] = startSec;\n        slices.ends[row] = startSec + fromNs(+cols[1].longValues![row]);\n        slices.utids[row] = +cols[2].longValues![row];\n      }\n      if (numRows === LIMIT) {\n        slices.end = slices.ends[slices.ends.length - 1];\n      }\n      globals.publish('TrackData', {id: this.trackId, data: slices});\n    });\n  }\n}\n\ntrackControllerRegistry.register(CpuSliceTrackController);\n","// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport const CPU_SLICE_TRACK_KIND = 'CpuSliceTrack';\n\nexport interface CpuSliceTrackData {\n  start: number;\n  end: number;\n  resolution: number;\n\n  // Slices are stored in a columnar fashion. All fields have the same length.\n  starts: Float64Array;\n  ends: Float64Array;\n  utids: Uint32Array;\n}\n","// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n  TrackController,\n  trackControllerRegistry\n} from '../../controller/track_controller';\n\nimport {CPU_COUNTER_TRACK_KIND} from './common';\n\nclass CpuCounterTrackController extends TrackController {\n  static readonly kind = CPU_COUNTER_TRACK_KIND;\n  onBoundsChange(): void {}\n}\n\ntrackControllerRegistry.register(CpuCounterTrackController);\n","// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport const CPU_COUNTER_TRACK_KIND = 'CpuCounterTrack';\n","// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {assertExists} from '../base/logging';\nimport {clearTrackDataRequest} from '../common/actions';\nimport {Registry} from '../common/registry';\nimport {Controller} from './controller';\nimport {ControllerFactory} from './controller';\nimport {Engine} from './engine';\nimport {globals} from './globals';\n\n// TrackController is a base class overridden by track implementations (e.g.,\n// sched slices, nestable slices, counters).\nexport abstract class TrackController extends Controller<'main'> {\n  readonly trackId: string;\n  readonly engine: Engine;\n\n  constructor(args: TrackControllerArgs) {\n    super('main');\n    this.trackId = args.trackId;\n    this.engine = args.engine;\n  }\n\n  // Must be overridden by the track implementation. Is invoked when the track\n  // frontend runs out of cached data. The derived track controller is expected\n  // to publish new track data in response to this call.\n  abstract onBoundsChange(start: number, end: number, resolution: number): void;\n\n  get trackState() {\n    return assertExists(globals.state.tracks[this.trackId]);\n  }\n\n  run() {\n    const dataReq = this.trackState.dataReq;\n    if (dataReq === undefined) return;\n    globals.dispatch(clearTrackDataRequest(this.trackId));\n    this.onBoundsChange(dataReq.start, dataReq.end, dataReq.resolution);\n  }\n}\n\nexport interface TrackControllerArgs {\n  trackId: string;\n  engine: Engine;\n}\n\nexport interface TrackControllerFactory extends\n    ControllerFactory<TrackControllerArgs> {\n  kind: string;\n}\n\nexport const trackControllerRegistry = new Registry<TrackControllerFactory>();\n","// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {assertExists} from '../base/logging';\nimport {Remote} from '../base/remote';\nimport {Action} from '../common/actions';\nimport {createEmptyState, State} from '../common/state';\nimport {ControllerAny} from './controller';\nimport {Engine, EnginePortAndId} from './engine';\nimport {rootReducer} from './reducer';\nimport {WasmEngineProxy} from './wasm_engine_proxy';\n\n/**\n * Global accessors for state/dispatch in the controller.\n */\nclass Globals {\n  private _state?: State;\n  private _rootController?: ControllerAny;\n  private _frontend?: Remote;\n  private _runningControllers = false;\n  private _queuedActions = new Array<Action>();\n\n  initialize(rootController: ControllerAny, frontendProxy: Remote) {\n    this._state = createEmptyState();\n    this._rootController = rootController;\n    this._frontend = frontendProxy;\n  }\n\n  dispatch(action: Action): void {\n    this.dispatchMultiple([action]);\n  }\n\n  dispatchMultiple(actions: Action[]): void {\n    this._queuedActions = this._queuedActions.concat(actions);\n\n    // If we are in the middle of running the controllers, queue the actions\n    // and run them at the end of the run, so the state is atomically updated\n    // only at the end and all controllers see the same state.\n    if (this._runningControllers) return;\n\n    this.runControllers();\n  }\n\n  private runControllers() {\n    if (this._runningControllers) throw new Error('Re-entrant call detected');\n\n    // Run controllers locally until all state machines reach quiescence.\n    let runAgain = false;\n    let summary = this._queuedActions.map(action => action.type).join(', ');\n    summary = `Controllers loop (${summary})`;\n    console.time(summary);\n    for (let iter = 0; runAgain || this._queuedActions.length > 0; iter++) {\n      if (iter > 100) throw new Error('Controllers are stuck in a livelock');\n      const actions = this._queuedActions;\n      this._queuedActions = new Array<Action>();\n      for (const action of actions) {\n        console.debug('Applying action', action);\n        this._state = rootReducer(this.state, action);\n      }\n      this._runningControllers = true;\n      try {\n        runAgain = assertExists(this._rootController).invoke();\n      } finally {\n        this._runningControllers = false;\n      }\n    }\n    assertExists(this._frontend).send<void>('updateState', [this.state]);\n    console.timeEnd(summary);\n  }\n\n  async createEngine(): Promise<Engine> {\n    const portAndId = await assertExists(this._frontend)\n                          .send<EnginePortAndId>('createEngine', []);\n    return WasmEngineProxy.create(portAndId);\n  }\n\n  async destroyEngine(id: string): Promise<void> {\n    await assertExists(this._frontend).send<void>('destroyEngine', [id]);\n  }\n\n  // TODO: this needs to be cleaned up.\n  publish(what: 'OverviewData'|'TrackData'|'Threads'|'QueryResult', data: {}) {\n    assertExists(this._frontend).send<void>(`publish${what}`, [data]);\n  }\n\n  get state(): State {\n    return assertExists(this._state);\n  }\n\n  set state(state: State) {\n    this._state = state;\n  }\n\n  resetForTesting() {\n    this._state = undefined;\n    this._rootController = undefined;\n  }\n}\n\nexport const globals = new Globals();\n","// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport * as protobufjs from 'protobufjs/light';\n\nimport {defer} from '../base/deferred';\nimport {TraceProcessor} from '../common/protos';\nimport {WasmBridgeRequest, WasmBridgeResponse} from '../engine/wasm_bridge';\n\nimport {Engine, EnginePortAndId} from './engine';\n\ninterface WorkerAndPort {\n  worker: Worker;\n  port: MessagePort;\n}\n\nconst activeWorkers = new Map<string, WorkerAndPort>();\nlet warmWorker: null|WorkerAndPort = null;\n\nfunction createWorker(): WorkerAndPort {\n  const channel = new MessageChannel();\n  const worker = new Worker('engine_bundle.js');\n  // tslint:disable-next-line deprecation\n  worker.postMessage(channel.port1, [channel.port1]);\n  return {worker, port: channel.port2};\n}\n\n// Take the warm engine and start creating a new WASM engine in the background\n// for the next call.\nexport function createWasmEngine(id: string): MessagePort {\n  if (warmWorker === null) {\n    throw new Error('warmupWasmEngine() not called');\n  }\n  if (activeWorkers.has(id)) {\n    throw new Error(`Duplicate worker ID ${id}`);\n  }\n  const activeWorker = warmWorker;\n  warmWorker = createWorker();\n  activeWorkers.set(id, activeWorker);\n  return activeWorker.port;\n}\n\nexport function destroyWasmEngine(id: string) {\n  if (!activeWorkers.has(id)) {\n    throw new Error(`Cannot find worker ID ${id}`);\n  }\n  activeWorkers.get(id)!.worker.terminate();\n  activeWorkers.delete(id);\n}\n\n/**\n * It's quite slow to compile WASM and (in Chrome) this happens every time\n * a worker thread attempts to load a WASM module since there is no way to\n * cache the compiled code currently. To mitigate this we can always keep a\n * WASM backend 'ready to go' just waiting to be provided with a trace file.\n * warmupWasmEngineWorker (together with getWasmEngineWorker)\n * implement this behaviour.\n */\nexport function warmupWasmEngine(): void {\n  if (warmWorker !== null) {\n    throw new Error('warmupWasmEngine() already called');\n  }\n  warmWorker = createWorker();\n}\n\n/**\n * This implementation of Engine uses a WASM backend hosted in a seperate\n * worker thread.\n */\nexport class WasmEngineProxy extends Engine {\n  private readonly port: MessagePort;\n  private readonly traceProcessor_: TraceProcessor;\n  private pendingCallbacks: Map<number, protobufjs.RPCImplCallback>;\n  private nextRequestId: number;\n  readonly id: string;\n\n  static create(args: EnginePortAndId): Engine {\n    return new WasmEngineProxy(args);\n  }\n\n  constructor(args: EnginePortAndId) {\n    super();\n    this.nextRequestId = 0;\n    this.pendingCallbacks = new Map();\n    this.port = args.port;\n    this.id = args.id;\n    this.port.onmessage = this.onMessage.bind(this);\n    this.traceProcessor_ =\n        TraceProcessor.create(this.rpcImpl.bind(this, 'trace_processor'));\n  }\n\n  get rpc(): TraceProcessor {\n    return this.traceProcessor_;\n  }\n\n  parse(data: Uint8Array): Promise<void> {\n    const id = this.nextRequestId++;\n    const request: WasmBridgeRequest =\n        {id, serviceName: 'trace_processor', methodName: 'parse', data};\n    const promise = defer<void>();\n    this.pendingCallbacks.set(id, () => promise.resolve());\n    this.port.postMessage(request);\n    return promise;\n  }\n\n  notifyEof(): Promise<void> {\n    const id = this.nextRequestId++;\n    const data = Uint8Array.from([]);\n    const request: WasmBridgeRequest =\n        {id, serviceName: 'trace_processor', methodName: 'notifyEof', data};\n    const promise = defer<void>();\n    this.pendingCallbacks.set(id, () => promise.resolve());\n    this.port.postMessage(request);\n    return promise;\n  }\n\n  onMessage(m: MessageEvent) {\n    const response = m.data as WasmBridgeResponse;\n    const callback = this.pendingCallbacks.get(response.id);\n    if (callback === undefined) {\n      throw new Error(`No such request: ${response.id}`);\n    }\n    this.pendingCallbacks.delete(response.id);\n    callback(null, response.data);\n  }\n\n  rpcImpl(\n      serviceName: string, method: Function, requestData: Uint8Array,\n      callback: protobufjs.RPCImplCallback): void {\n    const methodName = method.name;\n    const id = this.nextRequestId++;\n    this.pendingCallbacks.set(id, callback);\n    const request: WasmBridgeRequest = {\n      id,\n      serviceName,\n      methodName,\n      data: requestData,\n    };\n    this.port.postMessage(request);\n  }\n}\n","// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {IRawQueryArgs, RawQueryResult, TraceProcessor} from '../common/protos';\nimport {TimeSpan} from '../common/time';\n\n/**\n * Abstract interface of a trace proccessor.\n * This class is wrapper for multiple proto services defined in:\n * //protos/perfetto/trace_processor/*\n * For each service (\"FooService\") Engine will have abstract getter\n * (\"fooService\") which returns a protobufjs rpc.Service object for\n * the given service.\n *\n * Engine also defines helpers for the most common service methods\n * (e.g. rawQuery).\n */\nexport abstract class Engine {\n  abstract readonly id: string;\n\n  /**\n   * Push trace data into the engine. The engine is supposed to automatically\n   * figure out the type of the trace (JSON vs Protobuf).\n   */\n  abstract parse(data: Uint8Array): void;\n\n  /**\n   * Notify the engine no more data is coming.\n   */\n  abstract notifyEof(): void;\n\n  /*\n   * The RCP interface to call service methods defined in trace_processor.proto.\n   */\n  abstract get rpc(): TraceProcessor;\n\n  /**\n   * Send a raw SQL query to the engine.\n   */\n  rawQuery(args: IRawQueryArgs): Promise<RawQueryResult> {\n    return this.rpc.rawQuery(args);\n  }\n\n  async rawQueryOneRow(sqlQuery: string): Promise<number[]> {\n    const result = await this.rawQuery({sqlQuery});\n    const res: number[] = [];\n    result.columns.map(c => res.push(+c.longValues![0]));\n    return res;\n  }\n\n  // TODO(hjd): Maybe we should cache result? But then Engine must be\n  // streaming aware.\n  async getNumberOfCpus(): Promise<number> {\n    const result = await this.rawQuery({\n      sqlQuery: 'select count(distinct(cpu)) as cpuCount from sched;',\n    });\n    return +result.columns[0].longValues![0];\n  }\n\n  // TODO: This should live in code that's more specific to chrome, instead of\n  // in engine.\n  async getNumberOfProcesses(): Promise<number> {\n    const result = await this.rawQuery({\n      sqlQuery: 'select count(distinct(upid)) from thread;',\n    });\n    return +result.columns[0].longValues![0];\n  }\n\n  async getTraceTimeBounds(): Promise<TimeSpan> {\n    const maxQuery = 'select max(ts) from (select max(ts) as ts from sched ' +\n        'union all select max(ts) as ts from slices)';\n    const minQuery = 'select min(ts) from (select min(ts) as ts from sched ' +\n        'union all select min(ts) as ts from slices)';\n    const start = (await this.rawQueryOneRow(minQuery))[0];\n    const end = (await this.rawQueryOneRow(maxQuery))[0];\n    return new TimeSpan(start / 1e9, end / 1e9);\n  }\n}\n\nexport interface EnginePortAndId {\n  id: string;\n  port: MessagePort;\n}\n","// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {assertTrue} from '../base/logging';\n\nexport function timeToString(sec: number) {\n  const units = ['s', 'ms', 'us', 'ns'];\n  const sign = Math.sign(sec);\n  let n = Math.abs(sec);\n  let u = 0;\n  while (n < 1 && n !== 0 && u < units.length - 1) {\n    n *= 1000;\n    u++;\n  }\n  return `${sign < 0 ? '-' : ''}${Math.round(n * 10) / 10} ${units[u]}`;\n}\n\nexport function fromNs(ns: number) {\n  return ns / 1e9;\n}\n\nexport class TimeSpan {\n  readonly start: number;\n  readonly end: number;\n\n  constructor(start: number, end: number) {\n    assertTrue(start <= end);\n    this.start = start;\n    this.end = end;\n  }\n\n  get duration() {\n    return this.end - this.start;\n  }\n\n  add(sec: number): TimeSpan {\n    return new TimeSpan(this.start + sec, this.end + sec);\n  }\n}\n","// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport * as protos from '../gen/protos';\n\n// Aliases protos to avoid the super nested namespaces.\n// See https://www.typescriptlang.org/docs/handbook/namespaces.html#aliases\nimport TraceConfig = protos.perfetto.protos.TraceConfig;\nimport TraceProcessor = protos.perfetto.protos.TraceProcessor;\nimport IRawQueryArgs = protos.perfetto.protos.IRawQueryArgs;\nimport RawQueryArgs = protos.perfetto.protos.RawQueryArgs;\nimport RawQueryResult = protos.perfetto.protos.RawQueryResult;\n\n// TODO(hjd): Maybe these should go in their own file.\nexport interface Row { [key: string]: number|string; }\n\nfunction getCell(result: RawQueryResult, column: number, row: number): number|\n    string {\n  const values = result.columns[column];\n  switch (result.columnDescriptors[column].type) {\n    case RawQueryResult.ColumnDesc.Type.LONG:\n      return +values.longValues![row];\n    case RawQueryResult.ColumnDesc.Type.DOUBLE:\n      return +values.doubleValues![row];\n    case RawQueryResult.ColumnDesc.Type.STRING:\n      return values.stringValues![row];\n    default:\n      throw new Error('Unhandled type!');\n  }\n}\n\nexport function rawQueryResultColumns(result: RawQueryResult): string[] {\n  return result.columnDescriptors.map(d => d.name || '');\n}\n\nexport function* rawQueryResultIter(result: RawQueryResult) {\n  const columns: Array<[string, number]> = rawQueryResultColumns(result).map(\n      (name, i): [string, number] => [name, i]);\n  for (let rowNum = 0; rowNum < result.numRecords; rowNum++) {\n    const row: Row = {};\n    for (const [name, colNum] of columns) {\n      row[name] = getCell(result, colNum, rowNum);\n    }\n    yield row;\n  }\n}\n\nexport {\n  TraceConfig,\n  TraceProcessor,\n  IRawQueryArgs,\n  RawQueryArgs,\n  RawQueryResult,\n};\n","/*eslint-disable block-scoped-var, no-redeclare, no-control-regex, no-prototype-builtins*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.perfetto = (function() {\n\n    /**\n     * Namespace perfetto.\n     * @exports perfetto\n     * @namespace\n     */\n    var perfetto = {};\n\n    perfetto.protos = (function() {\n\n        /**\n         * Namespace protos.\n         * @memberof perfetto\n         * @namespace\n         */\n        var protos = {};\n\n        protos.Sched = (function() {\n\n            /**\n             * Properties of a Sched.\n             * @memberof perfetto.protos\n             * @interface ISched\n             * @property {string|null} [test] Sched test\n             */\n\n            /**\n             * Constructs a new Sched.\n             * @memberof perfetto.protos\n             * @classdesc Represents a Sched.\n             * @implements ISched\n             * @constructor\n             * @param {perfetto.protos.ISched=} [properties] Properties to set\n             */\n            function Sched(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Sched test.\n             * @member {string} test\n             * @memberof perfetto.protos.Sched\n             * @instance\n             */\n            Sched.prototype.test = \"\";\n\n            /**\n             * Creates a new Sched instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.Sched\n             * @static\n             * @param {perfetto.protos.ISched=} [properties] Properties to set\n             * @returns {perfetto.protos.Sched} Sched instance\n             */\n            Sched.create = function create(properties) {\n                return new Sched(properties);\n            };\n\n            /**\n             * Encodes the specified Sched message. Does not implicitly {@link perfetto.protos.Sched.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.Sched\n             * @static\n             * @param {perfetto.protos.ISched} message Sched message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Sched.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.test != null && message.hasOwnProperty(\"test\"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.test);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Sched message, length delimited. Does not implicitly {@link perfetto.protos.Sched.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.Sched\n             * @static\n             * @param {perfetto.protos.ISched} message Sched message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Sched.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Sched message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.Sched\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.Sched} Sched\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Sched.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.Sched();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.test = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Sched message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.Sched\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.Sched} Sched\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Sched.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Sched message.\n             * @function verify\n             * @memberof perfetto.protos.Sched\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Sched.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.test != null && message.hasOwnProperty(\"test\"))\n                    if (!$util.isString(message.test))\n                        return \"test: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Sched message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.Sched\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.Sched} Sched\n             */\n            Sched.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.Sched)\n                    return object;\n                var message = new $root.perfetto.protos.Sched();\n                if (object.test != null)\n                    message.test = String(object.test);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Sched message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.Sched\n             * @static\n             * @param {perfetto.protos.Sched} message Sched\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Sched.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.test = \"\";\n                if (message.test != null && message.hasOwnProperty(\"test\"))\n                    object.test = message.test;\n                return object;\n            };\n\n            /**\n             * Converts this Sched to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.Sched\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Sched.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Sched;\n        })();\n\n        protos.RawQueryArgs = (function() {\n\n            /**\n             * Properties of a RawQueryArgs.\n             * @memberof perfetto.protos\n             * @interface IRawQueryArgs\n             * @property {string|null} [sqlQuery] RawQueryArgs sqlQuery\n             */\n\n            /**\n             * Constructs a new RawQueryArgs.\n             * @memberof perfetto.protos\n             * @classdesc Represents a RawQueryArgs.\n             * @implements IRawQueryArgs\n             * @constructor\n             * @param {perfetto.protos.IRawQueryArgs=} [properties] Properties to set\n             */\n            function RawQueryArgs(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * RawQueryArgs sqlQuery.\n             * @member {string} sqlQuery\n             * @memberof perfetto.protos.RawQueryArgs\n             * @instance\n             */\n            RawQueryArgs.prototype.sqlQuery = \"\";\n\n            /**\n             * Creates a new RawQueryArgs instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.RawQueryArgs\n             * @static\n             * @param {perfetto.protos.IRawQueryArgs=} [properties] Properties to set\n             * @returns {perfetto.protos.RawQueryArgs} RawQueryArgs instance\n             */\n            RawQueryArgs.create = function create(properties) {\n                return new RawQueryArgs(properties);\n            };\n\n            /**\n             * Encodes the specified RawQueryArgs message. Does not implicitly {@link perfetto.protos.RawQueryArgs.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.RawQueryArgs\n             * @static\n             * @param {perfetto.protos.IRawQueryArgs} message RawQueryArgs message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RawQueryArgs.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.sqlQuery != null && message.hasOwnProperty(\"sqlQuery\"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.sqlQuery);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified RawQueryArgs message, length delimited. Does not implicitly {@link perfetto.protos.RawQueryArgs.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.RawQueryArgs\n             * @static\n             * @param {perfetto.protos.IRawQueryArgs} message RawQueryArgs message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RawQueryArgs.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a RawQueryArgs message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.RawQueryArgs\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.RawQueryArgs} RawQueryArgs\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RawQueryArgs.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.RawQueryArgs();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.sqlQuery = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a RawQueryArgs message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.RawQueryArgs\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.RawQueryArgs} RawQueryArgs\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RawQueryArgs.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a RawQueryArgs message.\n             * @function verify\n             * @memberof perfetto.protos.RawQueryArgs\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            RawQueryArgs.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.sqlQuery != null && message.hasOwnProperty(\"sqlQuery\"))\n                    if (!$util.isString(message.sqlQuery))\n                        return \"sqlQuery: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a RawQueryArgs message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.RawQueryArgs\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.RawQueryArgs} RawQueryArgs\n             */\n            RawQueryArgs.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.RawQueryArgs)\n                    return object;\n                var message = new $root.perfetto.protos.RawQueryArgs();\n                if (object.sqlQuery != null)\n                    message.sqlQuery = String(object.sqlQuery);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a RawQueryArgs message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.RawQueryArgs\n             * @static\n             * @param {perfetto.protos.RawQueryArgs} message RawQueryArgs\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            RawQueryArgs.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.sqlQuery = \"\";\n                if (message.sqlQuery != null && message.hasOwnProperty(\"sqlQuery\"))\n                    object.sqlQuery = message.sqlQuery;\n                return object;\n            };\n\n            /**\n             * Converts this RawQueryArgs to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.RawQueryArgs\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            RawQueryArgs.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return RawQueryArgs;\n        })();\n\n        protos.RawQueryResult = (function() {\n\n            /**\n             * Properties of a RawQueryResult.\n             * @memberof perfetto.protos\n             * @interface IRawQueryResult\n             * @property {Array.<perfetto.protos.RawQueryResult.IColumnDesc>|null} [columnDescriptors] RawQueryResult columnDescriptors\n             * @property {number|Long|null} [numRecords] RawQueryResult numRecords\n             * @property {Array.<perfetto.protos.RawQueryResult.IColumnValues>|null} [columns] RawQueryResult columns\n             * @property {string|null} [error] RawQueryResult error\n             */\n\n            /**\n             * Constructs a new RawQueryResult.\n             * @memberof perfetto.protos\n             * @classdesc Represents a RawQueryResult.\n             * @implements IRawQueryResult\n             * @constructor\n             * @param {perfetto.protos.IRawQueryResult=} [properties] Properties to set\n             */\n            function RawQueryResult(properties) {\n                this.columnDescriptors = [];\n                this.columns = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * RawQueryResult columnDescriptors.\n             * @member {Array.<perfetto.protos.RawQueryResult.IColumnDesc>} columnDescriptors\n             * @memberof perfetto.protos.RawQueryResult\n             * @instance\n             */\n            RawQueryResult.prototype.columnDescriptors = $util.emptyArray;\n\n            /**\n             * RawQueryResult numRecords.\n             * @member {number|Long} numRecords\n             * @memberof perfetto.protos.RawQueryResult\n             * @instance\n             */\n            RawQueryResult.prototype.numRecords = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * RawQueryResult columns.\n             * @member {Array.<perfetto.protos.RawQueryResult.IColumnValues>} columns\n             * @memberof perfetto.protos.RawQueryResult\n             * @instance\n             */\n            RawQueryResult.prototype.columns = $util.emptyArray;\n\n            /**\n             * RawQueryResult error.\n             * @member {string} error\n             * @memberof perfetto.protos.RawQueryResult\n             * @instance\n             */\n            RawQueryResult.prototype.error = \"\";\n\n            /**\n             * Creates a new RawQueryResult instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.RawQueryResult\n             * @static\n             * @param {perfetto.protos.IRawQueryResult=} [properties] Properties to set\n             * @returns {perfetto.protos.RawQueryResult} RawQueryResult instance\n             */\n            RawQueryResult.create = function create(properties) {\n                return new RawQueryResult(properties);\n            };\n\n            /**\n             * Encodes the specified RawQueryResult message. Does not implicitly {@link perfetto.protos.RawQueryResult.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.RawQueryResult\n             * @static\n             * @param {perfetto.protos.IRawQueryResult} message RawQueryResult message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RawQueryResult.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.columnDescriptors != null && message.columnDescriptors.length)\n                    for (var i = 0; i < message.columnDescriptors.length; ++i)\n                        $root.perfetto.protos.RawQueryResult.ColumnDesc.encode(message.columnDescriptors[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.numRecords != null && message.hasOwnProperty(\"numRecords\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.numRecords);\n                if (message.columns != null && message.columns.length)\n                    for (var i = 0; i < message.columns.length; ++i)\n                        $root.perfetto.protos.RawQueryResult.ColumnValues.encode(message.columns[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                if (message.error != null && message.hasOwnProperty(\"error\"))\n                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.error);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified RawQueryResult message, length delimited. Does not implicitly {@link perfetto.protos.RawQueryResult.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.RawQueryResult\n             * @static\n             * @param {perfetto.protos.IRawQueryResult} message RawQueryResult message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RawQueryResult.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a RawQueryResult message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.RawQueryResult\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.RawQueryResult} RawQueryResult\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RawQueryResult.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.RawQueryResult();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.columnDescriptors && message.columnDescriptors.length))\n                            message.columnDescriptors = [];\n                        message.columnDescriptors.push($root.perfetto.protos.RawQueryResult.ColumnDesc.decode(reader, reader.uint32()));\n                        break;\n                    case 2:\n                        message.numRecords = reader.uint64();\n                        break;\n                    case 3:\n                        if (!(message.columns && message.columns.length))\n                            message.columns = [];\n                        message.columns.push($root.perfetto.protos.RawQueryResult.ColumnValues.decode(reader, reader.uint32()));\n                        break;\n                    case 4:\n                        message.error = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a RawQueryResult message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.RawQueryResult\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.RawQueryResult} RawQueryResult\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RawQueryResult.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a RawQueryResult message.\n             * @function verify\n             * @memberof perfetto.protos.RawQueryResult\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            RawQueryResult.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.columnDescriptors != null && message.hasOwnProperty(\"columnDescriptors\")) {\n                    if (!Array.isArray(message.columnDescriptors))\n                        return \"columnDescriptors: array expected\";\n                    for (var i = 0; i < message.columnDescriptors.length; ++i) {\n                        var error = $root.perfetto.protos.RawQueryResult.ColumnDesc.verify(message.columnDescriptors[i]);\n                        if (error)\n                            return \"columnDescriptors.\" + error;\n                    }\n                }\n                if (message.numRecords != null && message.hasOwnProperty(\"numRecords\"))\n                    if (!$util.isInteger(message.numRecords) && !(message.numRecords && $util.isInteger(message.numRecords.low) && $util.isInteger(message.numRecords.high)))\n                        return \"numRecords: integer|Long expected\";\n                if (message.columns != null && message.hasOwnProperty(\"columns\")) {\n                    if (!Array.isArray(message.columns))\n                        return \"columns: array expected\";\n                    for (var i = 0; i < message.columns.length; ++i) {\n                        var error = $root.perfetto.protos.RawQueryResult.ColumnValues.verify(message.columns[i]);\n                        if (error)\n                            return \"columns.\" + error;\n                    }\n                }\n                if (message.error != null && message.hasOwnProperty(\"error\"))\n                    if (!$util.isString(message.error))\n                        return \"error: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a RawQueryResult message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.RawQueryResult\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.RawQueryResult} RawQueryResult\n             */\n            RawQueryResult.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.RawQueryResult)\n                    return object;\n                var message = new $root.perfetto.protos.RawQueryResult();\n                if (object.columnDescriptors) {\n                    if (!Array.isArray(object.columnDescriptors))\n                        throw TypeError(\".perfetto.protos.RawQueryResult.columnDescriptors: array expected\");\n                    message.columnDescriptors = [];\n                    for (var i = 0; i < object.columnDescriptors.length; ++i) {\n                        if (typeof object.columnDescriptors[i] !== \"object\")\n                            throw TypeError(\".perfetto.protos.RawQueryResult.columnDescriptors: object expected\");\n                        message.columnDescriptors[i] = $root.perfetto.protos.RawQueryResult.ColumnDesc.fromObject(object.columnDescriptors[i]);\n                    }\n                }\n                if (object.numRecords != null)\n                    if ($util.Long)\n                        (message.numRecords = $util.Long.fromValue(object.numRecords)).unsigned = true;\n                    else if (typeof object.numRecords === \"string\")\n                        message.numRecords = parseInt(object.numRecords, 10);\n                    else if (typeof object.numRecords === \"number\")\n                        message.numRecords = object.numRecords;\n                    else if (typeof object.numRecords === \"object\")\n                        message.numRecords = new $util.LongBits(object.numRecords.low >>> 0, object.numRecords.high >>> 0).toNumber(true);\n                if (object.columns) {\n                    if (!Array.isArray(object.columns))\n                        throw TypeError(\".perfetto.protos.RawQueryResult.columns: array expected\");\n                    message.columns = [];\n                    for (var i = 0; i < object.columns.length; ++i) {\n                        if (typeof object.columns[i] !== \"object\")\n                            throw TypeError(\".perfetto.protos.RawQueryResult.columns: object expected\");\n                        message.columns[i] = $root.perfetto.protos.RawQueryResult.ColumnValues.fromObject(object.columns[i]);\n                    }\n                }\n                if (object.error != null)\n                    message.error = String(object.error);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a RawQueryResult message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.RawQueryResult\n             * @static\n             * @param {perfetto.protos.RawQueryResult} message RawQueryResult\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            RawQueryResult.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.columnDescriptors = [];\n                    object.columns = [];\n                }\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.numRecords = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.numRecords = options.longs === String ? \"0\" : 0;\n                    object.error = \"\";\n                }\n                if (message.columnDescriptors && message.columnDescriptors.length) {\n                    object.columnDescriptors = [];\n                    for (var j = 0; j < message.columnDescriptors.length; ++j)\n                        object.columnDescriptors[j] = $root.perfetto.protos.RawQueryResult.ColumnDesc.toObject(message.columnDescriptors[j], options);\n                }\n                if (message.numRecords != null && message.hasOwnProperty(\"numRecords\"))\n                    if (typeof message.numRecords === \"number\")\n                        object.numRecords = options.longs === String ? String(message.numRecords) : message.numRecords;\n                    else\n                        object.numRecords = options.longs === String ? $util.Long.prototype.toString.call(message.numRecords) : options.longs === Number ? new $util.LongBits(message.numRecords.low >>> 0, message.numRecords.high >>> 0).toNumber(true) : message.numRecords;\n                if (message.columns && message.columns.length) {\n                    object.columns = [];\n                    for (var j = 0; j < message.columns.length; ++j)\n                        object.columns[j] = $root.perfetto.protos.RawQueryResult.ColumnValues.toObject(message.columns[j], options);\n                }\n                if (message.error != null && message.hasOwnProperty(\"error\"))\n                    object.error = message.error;\n                return object;\n            };\n\n            /**\n             * Converts this RawQueryResult to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.RawQueryResult\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            RawQueryResult.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            RawQueryResult.ColumnDesc = (function() {\n\n                /**\n                 * Properties of a ColumnDesc.\n                 * @memberof perfetto.protos.RawQueryResult\n                 * @interface IColumnDesc\n                 * @property {string|null} [name] ColumnDesc name\n                 * @property {perfetto.protos.RawQueryResult.ColumnDesc.Type|null} [type] ColumnDesc type\n                 */\n\n                /**\n                 * Constructs a new ColumnDesc.\n                 * @memberof perfetto.protos.RawQueryResult\n                 * @classdesc Represents a ColumnDesc.\n                 * @implements IColumnDesc\n                 * @constructor\n                 * @param {perfetto.protos.RawQueryResult.IColumnDesc=} [properties] Properties to set\n                 */\n                function ColumnDesc(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * ColumnDesc name.\n                 * @member {string} name\n                 * @memberof perfetto.protos.RawQueryResult.ColumnDesc\n                 * @instance\n                 */\n                ColumnDesc.prototype.name = \"\";\n\n                /**\n                 * ColumnDesc type.\n                 * @member {perfetto.protos.RawQueryResult.ColumnDesc.Type} type\n                 * @memberof perfetto.protos.RawQueryResult.ColumnDesc\n                 * @instance\n                 */\n                ColumnDesc.prototype.type = 1;\n\n                /**\n                 * Creates a new ColumnDesc instance using the specified properties.\n                 * @function create\n                 * @memberof perfetto.protos.RawQueryResult.ColumnDesc\n                 * @static\n                 * @param {perfetto.protos.RawQueryResult.IColumnDesc=} [properties] Properties to set\n                 * @returns {perfetto.protos.RawQueryResult.ColumnDesc} ColumnDesc instance\n                 */\n                ColumnDesc.create = function create(properties) {\n                    return new ColumnDesc(properties);\n                };\n\n                /**\n                 * Encodes the specified ColumnDesc message. Does not implicitly {@link perfetto.protos.RawQueryResult.ColumnDesc.verify|verify} messages.\n                 * @function encode\n                 * @memberof perfetto.protos.RawQueryResult.ColumnDesc\n                 * @static\n                 * @param {perfetto.protos.RawQueryResult.IColumnDesc} message ColumnDesc message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ColumnDesc.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                    if (message.type != null && message.hasOwnProperty(\"type\"))\n                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified ColumnDesc message, length delimited. Does not implicitly {@link perfetto.protos.RawQueryResult.ColumnDesc.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof perfetto.protos.RawQueryResult.ColumnDesc\n                 * @static\n                 * @param {perfetto.protos.RawQueryResult.IColumnDesc} message ColumnDesc message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ColumnDesc.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a ColumnDesc message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof perfetto.protos.RawQueryResult.ColumnDesc\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {perfetto.protos.RawQueryResult.ColumnDesc} ColumnDesc\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ColumnDesc.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.RawQueryResult.ColumnDesc();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.name = reader.string();\n                            break;\n                        case 2:\n                            message.type = reader.int32();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a ColumnDesc message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof perfetto.protos.RawQueryResult.ColumnDesc\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {perfetto.protos.RawQueryResult.ColumnDesc} ColumnDesc\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ColumnDesc.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a ColumnDesc message.\n                 * @function verify\n                 * @memberof perfetto.protos.RawQueryResult.ColumnDesc\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                ColumnDesc.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        if (!$util.isString(message.name))\n                            return \"name: string expected\";\n                    if (message.type != null && message.hasOwnProperty(\"type\"))\n                        switch (message.type) {\n                        default:\n                            return \"type: enum value expected\";\n                        case 1:\n                        case 2:\n                        case 3:\n                            break;\n                        }\n                    return null;\n                };\n\n                /**\n                 * Creates a ColumnDesc message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof perfetto.protos.RawQueryResult.ColumnDesc\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {perfetto.protos.RawQueryResult.ColumnDesc} ColumnDesc\n                 */\n                ColumnDesc.fromObject = function fromObject(object) {\n                    if (object instanceof $root.perfetto.protos.RawQueryResult.ColumnDesc)\n                        return object;\n                    var message = new $root.perfetto.protos.RawQueryResult.ColumnDesc();\n                    if (object.name != null)\n                        message.name = String(object.name);\n                    switch (object.type) {\n                    case \"LONG\":\n                    case 1:\n                        message.type = 1;\n                        break;\n                    case \"DOUBLE\":\n                    case 2:\n                        message.type = 2;\n                        break;\n                    case \"STRING\":\n                    case 3:\n                        message.type = 3;\n                        break;\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a ColumnDesc message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof perfetto.protos.RawQueryResult.ColumnDesc\n                 * @static\n                 * @param {perfetto.protos.RawQueryResult.ColumnDesc} message ColumnDesc\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                ColumnDesc.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.defaults) {\n                        object.name = \"\";\n                        object.type = options.enums === String ? \"LONG\" : 1;\n                    }\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        object.name = message.name;\n                    if (message.type != null && message.hasOwnProperty(\"type\"))\n                        object.type = options.enums === String ? $root.perfetto.protos.RawQueryResult.ColumnDesc.Type[message.type] : message.type;\n                    return object;\n                };\n\n                /**\n                 * Converts this ColumnDesc to JSON.\n                 * @function toJSON\n                 * @memberof perfetto.protos.RawQueryResult.ColumnDesc\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                ColumnDesc.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                /**\n                 * Type enum.\n                 * @name perfetto.protos.RawQueryResult.ColumnDesc.Type\n                 * @enum {string}\n                 * @property {number} LONG=1 LONG value\n                 * @property {number} DOUBLE=2 DOUBLE value\n                 * @property {number} STRING=3 STRING value\n                 */\n                ColumnDesc.Type = (function() {\n                    var valuesById = {}, values = Object.create(valuesById);\n                    values[valuesById[1] = \"LONG\"] = 1;\n                    values[valuesById[2] = \"DOUBLE\"] = 2;\n                    values[valuesById[3] = \"STRING\"] = 3;\n                    return values;\n                })();\n\n                return ColumnDesc;\n            })();\n\n            RawQueryResult.ColumnValues = (function() {\n\n                /**\n                 * Properties of a ColumnValues.\n                 * @memberof perfetto.protos.RawQueryResult\n                 * @interface IColumnValues\n                 * @property {Array.<number|Long>|null} [longValues] ColumnValues longValues\n                 * @property {Array.<number>|null} [doubleValues] ColumnValues doubleValues\n                 * @property {Array.<string>|null} [stringValues] ColumnValues stringValues\n                 */\n\n                /**\n                 * Constructs a new ColumnValues.\n                 * @memberof perfetto.protos.RawQueryResult\n                 * @classdesc Represents a ColumnValues.\n                 * @implements IColumnValues\n                 * @constructor\n                 * @param {perfetto.protos.RawQueryResult.IColumnValues=} [properties] Properties to set\n                 */\n                function ColumnValues(properties) {\n                    this.longValues = [];\n                    this.doubleValues = [];\n                    this.stringValues = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * ColumnValues longValues.\n                 * @member {Array.<number|Long>} longValues\n                 * @memberof perfetto.protos.RawQueryResult.ColumnValues\n                 * @instance\n                 */\n                ColumnValues.prototype.longValues = $util.emptyArray;\n\n                /**\n                 * ColumnValues doubleValues.\n                 * @member {Array.<number>} doubleValues\n                 * @memberof perfetto.protos.RawQueryResult.ColumnValues\n                 * @instance\n                 */\n                ColumnValues.prototype.doubleValues = $util.emptyArray;\n\n                /**\n                 * ColumnValues stringValues.\n                 * @member {Array.<string>} stringValues\n                 * @memberof perfetto.protos.RawQueryResult.ColumnValues\n                 * @instance\n                 */\n                ColumnValues.prototype.stringValues = $util.emptyArray;\n\n                /**\n                 * Creates a new ColumnValues instance using the specified properties.\n                 * @function create\n                 * @memberof perfetto.protos.RawQueryResult.ColumnValues\n                 * @static\n                 * @param {perfetto.protos.RawQueryResult.IColumnValues=} [properties] Properties to set\n                 * @returns {perfetto.protos.RawQueryResult.ColumnValues} ColumnValues instance\n                 */\n                ColumnValues.create = function create(properties) {\n                    return new ColumnValues(properties);\n                };\n\n                /**\n                 * Encodes the specified ColumnValues message. Does not implicitly {@link perfetto.protos.RawQueryResult.ColumnValues.verify|verify} messages.\n                 * @function encode\n                 * @memberof perfetto.protos.RawQueryResult.ColumnValues\n                 * @static\n                 * @param {perfetto.protos.RawQueryResult.IColumnValues} message ColumnValues message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ColumnValues.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.longValues != null && message.longValues.length)\n                        for (var i = 0; i < message.longValues.length; ++i)\n                            writer.uint32(/* id 1, wireType 0 =*/8).int64(message.longValues[i]);\n                    if (message.doubleValues != null && message.doubleValues.length)\n                        for (var i = 0; i < message.doubleValues.length; ++i)\n                            writer.uint32(/* id 2, wireType 1 =*/17).double(message.doubleValues[i]);\n                    if (message.stringValues != null && message.stringValues.length)\n                        for (var i = 0; i < message.stringValues.length; ++i)\n                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.stringValues[i]);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified ColumnValues message, length delimited. Does not implicitly {@link perfetto.protos.RawQueryResult.ColumnValues.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof perfetto.protos.RawQueryResult.ColumnValues\n                 * @static\n                 * @param {perfetto.protos.RawQueryResult.IColumnValues} message ColumnValues message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ColumnValues.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a ColumnValues message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof perfetto.protos.RawQueryResult.ColumnValues\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {perfetto.protos.RawQueryResult.ColumnValues} ColumnValues\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ColumnValues.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.RawQueryResult.ColumnValues();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            if (!(message.longValues && message.longValues.length))\n                                message.longValues = [];\n                            if ((tag & 7) === 2) {\n                                var end2 = reader.uint32() + reader.pos;\n                                while (reader.pos < end2)\n                                    message.longValues.push(reader.int64());\n                            } else\n                                message.longValues.push(reader.int64());\n                            break;\n                        case 2:\n                            if (!(message.doubleValues && message.doubleValues.length))\n                                message.doubleValues = [];\n                            if ((tag & 7) === 2) {\n                                var end2 = reader.uint32() + reader.pos;\n                                while (reader.pos < end2)\n                                    message.doubleValues.push(reader.double());\n                            } else\n                                message.doubleValues.push(reader.double());\n                            break;\n                        case 3:\n                            if (!(message.stringValues && message.stringValues.length))\n                                message.stringValues = [];\n                            message.stringValues.push(reader.string());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a ColumnValues message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof perfetto.protos.RawQueryResult.ColumnValues\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {perfetto.protos.RawQueryResult.ColumnValues} ColumnValues\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ColumnValues.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a ColumnValues message.\n                 * @function verify\n                 * @memberof perfetto.protos.RawQueryResult.ColumnValues\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                ColumnValues.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.longValues != null && message.hasOwnProperty(\"longValues\")) {\n                        if (!Array.isArray(message.longValues))\n                            return \"longValues: array expected\";\n                        for (var i = 0; i < message.longValues.length; ++i)\n                            if (!$util.isInteger(message.longValues[i]) && !(message.longValues[i] && $util.isInteger(message.longValues[i].low) && $util.isInteger(message.longValues[i].high)))\n                                return \"longValues: integer|Long[] expected\";\n                    }\n                    if (message.doubleValues != null && message.hasOwnProperty(\"doubleValues\")) {\n                        if (!Array.isArray(message.doubleValues))\n                            return \"doubleValues: array expected\";\n                        for (var i = 0; i < message.doubleValues.length; ++i)\n                            if (typeof message.doubleValues[i] !== \"number\")\n                                return \"doubleValues: number[] expected\";\n                    }\n                    if (message.stringValues != null && message.hasOwnProperty(\"stringValues\")) {\n                        if (!Array.isArray(message.stringValues))\n                            return \"stringValues: array expected\";\n                        for (var i = 0; i < message.stringValues.length; ++i)\n                            if (!$util.isString(message.stringValues[i]))\n                                return \"stringValues: string[] expected\";\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates a ColumnValues message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof perfetto.protos.RawQueryResult.ColumnValues\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {perfetto.protos.RawQueryResult.ColumnValues} ColumnValues\n                 */\n                ColumnValues.fromObject = function fromObject(object) {\n                    if (object instanceof $root.perfetto.protos.RawQueryResult.ColumnValues)\n                        return object;\n                    var message = new $root.perfetto.protos.RawQueryResult.ColumnValues();\n                    if (object.longValues) {\n                        if (!Array.isArray(object.longValues))\n                            throw TypeError(\".perfetto.protos.RawQueryResult.ColumnValues.longValues: array expected\");\n                        message.longValues = [];\n                        for (var i = 0; i < object.longValues.length; ++i)\n                            if ($util.Long)\n                                (message.longValues[i] = $util.Long.fromValue(object.longValues[i])).unsigned = false;\n                            else if (typeof object.longValues[i] === \"string\")\n                                message.longValues[i] = parseInt(object.longValues[i], 10);\n                            else if (typeof object.longValues[i] === \"number\")\n                                message.longValues[i] = object.longValues[i];\n                            else if (typeof object.longValues[i] === \"object\")\n                                message.longValues[i] = new $util.LongBits(object.longValues[i].low >>> 0, object.longValues[i].high >>> 0).toNumber();\n                    }\n                    if (object.doubleValues) {\n                        if (!Array.isArray(object.doubleValues))\n                            throw TypeError(\".perfetto.protos.RawQueryResult.ColumnValues.doubleValues: array expected\");\n                        message.doubleValues = [];\n                        for (var i = 0; i < object.doubleValues.length; ++i)\n                            message.doubleValues[i] = Number(object.doubleValues[i]);\n                    }\n                    if (object.stringValues) {\n                        if (!Array.isArray(object.stringValues))\n                            throw TypeError(\".perfetto.protos.RawQueryResult.ColumnValues.stringValues: array expected\");\n                        message.stringValues = [];\n                        for (var i = 0; i < object.stringValues.length; ++i)\n                            message.stringValues[i] = String(object.stringValues[i]);\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a ColumnValues message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof perfetto.protos.RawQueryResult.ColumnValues\n                 * @static\n                 * @param {perfetto.protos.RawQueryResult.ColumnValues} message ColumnValues\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                ColumnValues.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults) {\n                        object.longValues = [];\n                        object.doubleValues = [];\n                        object.stringValues = [];\n                    }\n                    if (message.longValues && message.longValues.length) {\n                        object.longValues = [];\n                        for (var j = 0; j < message.longValues.length; ++j)\n                            if (typeof message.longValues[j] === \"number\")\n                                object.longValues[j] = options.longs === String ? String(message.longValues[j]) : message.longValues[j];\n                            else\n                                object.longValues[j] = options.longs === String ? $util.Long.prototype.toString.call(message.longValues[j]) : options.longs === Number ? new $util.LongBits(message.longValues[j].low >>> 0, message.longValues[j].high >>> 0).toNumber() : message.longValues[j];\n                    }\n                    if (message.doubleValues && message.doubleValues.length) {\n                        object.doubleValues = [];\n                        for (var j = 0; j < message.doubleValues.length; ++j)\n                            object.doubleValues[j] = options.json && !isFinite(message.doubleValues[j]) ? String(message.doubleValues[j]) : message.doubleValues[j];\n                    }\n                    if (message.stringValues && message.stringValues.length) {\n                        object.stringValues = [];\n                        for (var j = 0; j < message.stringValues.length; ++j)\n                            object.stringValues[j] = message.stringValues[j];\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this ColumnValues to JSON.\n                 * @function toJSON\n                 * @memberof perfetto.protos.RawQueryResult.ColumnValues\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                ColumnValues.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return ColumnValues;\n            })();\n\n            return RawQueryResult;\n        })();\n\n        protos.TraceProcessor = (function() {\n\n            /**\n             * Constructs a new TraceProcessor service.\n             * @memberof perfetto.protos\n             * @classdesc Represents a TraceProcessor\n             * @extends $protobuf.rpc.Service\n             * @constructor\n             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation\n             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n             */\n            function TraceProcessor(rpcImpl, requestDelimited, responseDelimited) {\n                $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);\n            }\n\n            (TraceProcessor.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = TraceProcessor;\n\n            /**\n             * Creates new TraceProcessor service using the specified rpc implementation.\n             * @function create\n             * @memberof perfetto.protos.TraceProcessor\n             * @static\n             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation\n             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n             * @returns {TraceProcessor} RPC service. Useful where requests and/or responses are streamed.\n             */\n            TraceProcessor.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n                return new this(rpcImpl, requestDelimited, responseDelimited);\n            };\n\n            /**\n             * Callback as used by {@link perfetto.protos.TraceProcessor#rawQuery}.\n             * @memberof perfetto.protos.TraceProcessor\n             * @typedef RawQueryCallback\n             * @type {function}\n             * @param {Error|null} error Error, if any\n             * @param {perfetto.protos.RawQueryResult} [response] RawQueryResult\n             */\n\n            /**\n             * Calls RawQuery.\n             * @function rawQuery\n             * @memberof perfetto.protos.TraceProcessor\n             * @instance\n             * @param {perfetto.protos.IRawQueryArgs} request RawQueryArgs message or plain object\n             * @param {perfetto.protos.TraceProcessor.RawQueryCallback} callback Node-style callback called with the error, if any, and RawQueryResult\n             * @returns {undefined}\n             * @variation 1\n             */\n            TraceProcessor.prototype.rawQuery = function rawQuery(request, callback) {\n                return this.rpcCall(rawQuery, $root.perfetto.protos.RawQueryArgs, $root.perfetto.protos.RawQueryResult, request, callback);\n            };\n\n            /**\n             * Calls RawQuery.\n             * @function rawQuery\n             * @memberof perfetto.protos.TraceProcessor\n             * @instance\n             * @param {perfetto.protos.IRawQueryArgs} request RawQueryArgs message or plain object\n             * @returns {Promise<perfetto.protos.RawQueryResult>} Promise\n             * @variation 2\n             */\n\n            return TraceProcessor;\n        })();\n\n        protos.ChromeConfig = (function() {\n\n            /**\n             * Properties of a ChromeConfig.\n             * @memberof perfetto.protos\n             * @interface IChromeConfig\n             * @property {string|null} [traceConfig] ChromeConfig traceConfig\n             */\n\n            /**\n             * Constructs a new ChromeConfig.\n             * @memberof perfetto.protos\n             * @classdesc Represents a ChromeConfig.\n             * @implements IChromeConfig\n             * @constructor\n             * @param {perfetto.protos.IChromeConfig=} [properties] Properties to set\n             */\n            function ChromeConfig(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * ChromeConfig traceConfig.\n             * @member {string} traceConfig\n             * @memberof perfetto.protos.ChromeConfig\n             * @instance\n             */\n            ChromeConfig.prototype.traceConfig = \"\";\n\n            /**\n             * Creates a new ChromeConfig instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.ChromeConfig\n             * @static\n             * @param {perfetto.protos.IChromeConfig=} [properties] Properties to set\n             * @returns {perfetto.protos.ChromeConfig} ChromeConfig instance\n             */\n            ChromeConfig.create = function create(properties) {\n                return new ChromeConfig(properties);\n            };\n\n            /**\n             * Encodes the specified ChromeConfig message. Does not implicitly {@link perfetto.protos.ChromeConfig.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.ChromeConfig\n             * @static\n             * @param {perfetto.protos.IChromeConfig} message ChromeConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ChromeConfig.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.traceConfig != null && message.hasOwnProperty(\"traceConfig\"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.traceConfig);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified ChromeConfig message, length delimited. Does not implicitly {@link perfetto.protos.ChromeConfig.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.ChromeConfig\n             * @static\n             * @param {perfetto.protos.IChromeConfig} message ChromeConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ChromeConfig.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a ChromeConfig message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.ChromeConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.ChromeConfig} ChromeConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ChromeConfig.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.ChromeConfig();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.traceConfig = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a ChromeConfig message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.ChromeConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.ChromeConfig} ChromeConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ChromeConfig.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a ChromeConfig message.\n             * @function verify\n             * @memberof perfetto.protos.ChromeConfig\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            ChromeConfig.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.traceConfig != null && message.hasOwnProperty(\"traceConfig\"))\n                    if (!$util.isString(message.traceConfig))\n                        return \"traceConfig: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a ChromeConfig message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.ChromeConfig\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.ChromeConfig} ChromeConfig\n             */\n            ChromeConfig.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.ChromeConfig)\n                    return object;\n                var message = new $root.perfetto.protos.ChromeConfig();\n                if (object.traceConfig != null)\n                    message.traceConfig = String(object.traceConfig);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a ChromeConfig message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.ChromeConfig\n             * @static\n             * @param {perfetto.protos.ChromeConfig} message ChromeConfig\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ChromeConfig.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.traceConfig = \"\";\n                if (message.traceConfig != null && message.hasOwnProperty(\"traceConfig\"))\n                    object.traceConfig = message.traceConfig;\n                return object;\n            };\n\n            /**\n             * Converts this ChromeConfig to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.ChromeConfig\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ChromeConfig.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ChromeConfig;\n        })();\n\n        protos.InodeFileConfig = (function() {\n\n            /**\n             * Properties of an InodeFileConfig.\n             * @memberof perfetto.protos\n             * @interface IInodeFileConfig\n             * @property {number|null} [scanIntervalMs] InodeFileConfig scanIntervalMs\n             * @property {number|null} [scanDelayMs] InodeFileConfig scanDelayMs\n             * @property {number|null} [scanBatchSize] InodeFileConfig scanBatchSize\n             * @property {boolean|null} [doNotScan] InodeFileConfig doNotScan\n             * @property {Array.<string>|null} [scanMountPoints] InodeFileConfig scanMountPoints\n             * @property {Array.<perfetto.protos.InodeFileConfig.IMountPointMappingEntry>|null} [mountPointMapping] InodeFileConfig mountPointMapping\n             */\n\n            /**\n             * Constructs a new InodeFileConfig.\n             * @memberof perfetto.protos\n             * @classdesc Represents an InodeFileConfig.\n             * @implements IInodeFileConfig\n             * @constructor\n             * @param {perfetto.protos.IInodeFileConfig=} [properties] Properties to set\n             */\n            function InodeFileConfig(properties) {\n                this.scanMountPoints = [];\n                this.mountPointMapping = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * InodeFileConfig scanIntervalMs.\n             * @member {number} scanIntervalMs\n             * @memberof perfetto.protos.InodeFileConfig\n             * @instance\n             */\n            InodeFileConfig.prototype.scanIntervalMs = 0;\n\n            /**\n             * InodeFileConfig scanDelayMs.\n             * @member {number} scanDelayMs\n             * @memberof perfetto.protos.InodeFileConfig\n             * @instance\n             */\n            InodeFileConfig.prototype.scanDelayMs = 0;\n\n            /**\n             * InodeFileConfig scanBatchSize.\n             * @member {number} scanBatchSize\n             * @memberof perfetto.protos.InodeFileConfig\n             * @instance\n             */\n            InodeFileConfig.prototype.scanBatchSize = 0;\n\n            /**\n             * InodeFileConfig doNotScan.\n             * @member {boolean} doNotScan\n             * @memberof perfetto.protos.InodeFileConfig\n             * @instance\n             */\n            InodeFileConfig.prototype.doNotScan = false;\n\n            /**\n             * InodeFileConfig scanMountPoints.\n             * @member {Array.<string>} scanMountPoints\n             * @memberof perfetto.protos.InodeFileConfig\n             * @instance\n             */\n            InodeFileConfig.prototype.scanMountPoints = $util.emptyArray;\n\n            /**\n             * InodeFileConfig mountPointMapping.\n             * @member {Array.<perfetto.protos.InodeFileConfig.IMountPointMappingEntry>} mountPointMapping\n             * @memberof perfetto.protos.InodeFileConfig\n             * @instance\n             */\n            InodeFileConfig.prototype.mountPointMapping = $util.emptyArray;\n\n            /**\n             * Creates a new InodeFileConfig instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.InodeFileConfig\n             * @static\n             * @param {perfetto.protos.IInodeFileConfig=} [properties] Properties to set\n             * @returns {perfetto.protos.InodeFileConfig} InodeFileConfig instance\n             */\n            InodeFileConfig.create = function create(properties) {\n                return new InodeFileConfig(properties);\n            };\n\n            /**\n             * Encodes the specified InodeFileConfig message. Does not implicitly {@link perfetto.protos.InodeFileConfig.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.InodeFileConfig\n             * @static\n             * @param {perfetto.protos.IInodeFileConfig} message InodeFileConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            InodeFileConfig.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.scanIntervalMs != null && message.hasOwnProperty(\"scanIntervalMs\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.scanIntervalMs);\n                if (message.scanDelayMs != null && message.hasOwnProperty(\"scanDelayMs\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.scanDelayMs);\n                if (message.scanBatchSize != null && message.hasOwnProperty(\"scanBatchSize\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.scanBatchSize);\n                if (message.doNotScan != null && message.hasOwnProperty(\"doNotScan\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).bool(message.doNotScan);\n                if (message.scanMountPoints != null && message.scanMountPoints.length)\n                    for (var i = 0; i < message.scanMountPoints.length; ++i)\n                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.scanMountPoints[i]);\n                if (message.mountPointMapping != null && message.mountPointMapping.length)\n                    for (var i = 0; i < message.mountPointMapping.length; ++i)\n                        $root.perfetto.protos.InodeFileConfig.MountPointMappingEntry.encode(message.mountPointMapping[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified InodeFileConfig message, length delimited. Does not implicitly {@link perfetto.protos.InodeFileConfig.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.InodeFileConfig\n             * @static\n             * @param {perfetto.protos.IInodeFileConfig} message InodeFileConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            InodeFileConfig.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes an InodeFileConfig message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.InodeFileConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.InodeFileConfig} InodeFileConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            InodeFileConfig.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.InodeFileConfig();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.scanIntervalMs = reader.uint32();\n                        break;\n                    case 2:\n                        message.scanDelayMs = reader.uint32();\n                        break;\n                    case 3:\n                        message.scanBatchSize = reader.uint32();\n                        break;\n                    case 4:\n                        message.doNotScan = reader.bool();\n                        break;\n                    case 5:\n                        if (!(message.scanMountPoints && message.scanMountPoints.length))\n                            message.scanMountPoints = [];\n                        message.scanMountPoints.push(reader.string());\n                        break;\n                    case 6:\n                        if (!(message.mountPointMapping && message.mountPointMapping.length))\n                            message.mountPointMapping = [];\n                        message.mountPointMapping.push($root.perfetto.protos.InodeFileConfig.MountPointMappingEntry.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes an InodeFileConfig message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.InodeFileConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.InodeFileConfig} InodeFileConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            InodeFileConfig.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies an InodeFileConfig message.\n             * @function verify\n             * @memberof perfetto.protos.InodeFileConfig\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            InodeFileConfig.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.scanIntervalMs != null && message.hasOwnProperty(\"scanIntervalMs\"))\n                    if (!$util.isInteger(message.scanIntervalMs))\n                        return \"scanIntervalMs: integer expected\";\n                if (message.scanDelayMs != null && message.hasOwnProperty(\"scanDelayMs\"))\n                    if (!$util.isInteger(message.scanDelayMs))\n                        return \"scanDelayMs: integer expected\";\n                if (message.scanBatchSize != null && message.hasOwnProperty(\"scanBatchSize\"))\n                    if (!$util.isInteger(message.scanBatchSize))\n                        return \"scanBatchSize: integer expected\";\n                if (message.doNotScan != null && message.hasOwnProperty(\"doNotScan\"))\n                    if (typeof message.doNotScan !== \"boolean\")\n                        return \"doNotScan: boolean expected\";\n                if (message.scanMountPoints != null && message.hasOwnProperty(\"scanMountPoints\")) {\n                    if (!Array.isArray(message.scanMountPoints))\n                        return \"scanMountPoints: array expected\";\n                    for (var i = 0; i < message.scanMountPoints.length; ++i)\n                        if (!$util.isString(message.scanMountPoints[i]))\n                            return \"scanMountPoints: string[] expected\";\n                }\n                if (message.mountPointMapping != null && message.hasOwnProperty(\"mountPointMapping\")) {\n                    if (!Array.isArray(message.mountPointMapping))\n                        return \"mountPointMapping: array expected\";\n                    for (var i = 0; i < message.mountPointMapping.length; ++i) {\n                        var error = $root.perfetto.protos.InodeFileConfig.MountPointMappingEntry.verify(message.mountPointMapping[i]);\n                        if (error)\n                            return \"mountPointMapping.\" + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates an InodeFileConfig message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.InodeFileConfig\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.InodeFileConfig} InodeFileConfig\n             */\n            InodeFileConfig.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.InodeFileConfig)\n                    return object;\n                var message = new $root.perfetto.protos.InodeFileConfig();\n                if (object.scanIntervalMs != null)\n                    message.scanIntervalMs = object.scanIntervalMs >>> 0;\n                if (object.scanDelayMs != null)\n                    message.scanDelayMs = object.scanDelayMs >>> 0;\n                if (object.scanBatchSize != null)\n                    message.scanBatchSize = object.scanBatchSize >>> 0;\n                if (object.doNotScan != null)\n                    message.doNotScan = Boolean(object.doNotScan);\n                if (object.scanMountPoints) {\n                    if (!Array.isArray(object.scanMountPoints))\n                        throw TypeError(\".perfetto.protos.InodeFileConfig.scanMountPoints: array expected\");\n                    message.scanMountPoints = [];\n                    for (var i = 0; i < object.scanMountPoints.length; ++i)\n                        message.scanMountPoints[i] = String(object.scanMountPoints[i]);\n                }\n                if (object.mountPointMapping) {\n                    if (!Array.isArray(object.mountPointMapping))\n                        throw TypeError(\".perfetto.protos.InodeFileConfig.mountPointMapping: array expected\");\n                    message.mountPointMapping = [];\n                    for (var i = 0; i < object.mountPointMapping.length; ++i) {\n                        if (typeof object.mountPointMapping[i] !== \"object\")\n                            throw TypeError(\".perfetto.protos.InodeFileConfig.mountPointMapping: object expected\");\n                        message.mountPointMapping[i] = $root.perfetto.protos.InodeFileConfig.MountPointMappingEntry.fromObject(object.mountPointMapping[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from an InodeFileConfig message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.InodeFileConfig\n             * @static\n             * @param {perfetto.protos.InodeFileConfig} message InodeFileConfig\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            InodeFileConfig.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.scanMountPoints = [];\n                    object.mountPointMapping = [];\n                }\n                if (options.defaults) {\n                    object.scanIntervalMs = 0;\n                    object.scanDelayMs = 0;\n                    object.scanBatchSize = 0;\n                    object.doNotScan = false;\n                }\n                if (message.scanIntervalMs != null && message.hasOwnProperty(\"scanIntervalMs\"))\n                    object.scanIntervalMs = message.scanIntervalMs;\n                if (message.scanDelayMs != null && message.hasOwnProperty(\"scanDelayMs\"))\n                    object.scanDelayMs = message.scanDelayMs;\n                if (message.scanBatchSize != null && message.hasOwnProperty(\"scanBatchSize\"))\n                    object.scanBatchSize = message.scanBatchSize;\n                if (message.doNotScan != null && message.hasOwnProperty(\"doNotScan\"))\n                    object.doNotScan = message.doNotScan;\n                if (message.scanMountPoints && message.scanMountPoints.length) {\n                    object.scanMountPoints = [];\n                    for (var j = 0; j < message.scanMountPoints.length; ++j)\n                        object.scanMountPoints[j] = message.scanMountPoints[j];\n                }\n                if (message.mountPointMapping && message.mountPointMapping.length) {\n                    object.mountPointMapping = [];\n                    for (var j = 0; j < message.mountPointMapping.length; ++j)\n                        object.mountPointMapping[j] = $root.perfetto.protos.InodeFileConfig.MountPointMappingEntry.toObject(message.mountPointMapping[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this InodeFileConfig to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.InodeFileConfig\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            InodeFileConfig.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            InodeFileConfig.MountPointMappingEntry = (function() {\n\n                /**\n                 * Properties of a MountPointMappingEntry.\n                 * @memberof perfetto.protos.InodeFileConfig\n                 * @interface IMountPointMappingEntry\n                 * @property {string|null} [mountpoint] MountPointMappingEntry mountpoint\n                 * @property {Array.<string>|null} [scanRoots] MountPointMappingEntry scanRoots\n                 */\n\n                /**\n                 * Constructs a new MountPointMappingEntry.\n                 * @memberof perfetto.protos.InodeFileConfig\n                 * @classdesc Represents a MountPointMappingEntry.\n                 * @implements IMountPointMappingEntry\n                 * @constructor\n                 * @param {perfetto.protos.InodeFileConfig.IMountPointMappingEntry=} [properties] Properties to set\n                 */\n                function MountPointMappingEntry(properties) {\n                    this.scanRoots = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * MountPointMappingEntry mountpoint.\n                 * @member {string} mountpoint\n                 * @memberof perfetto.protos.InodeFileConfig.MountPointMappingEntry\n                 * @instance\n                 */\n                MountPointMappingEntry.prototype.mountpoint = \"\";\n\n                /**\n                 * MountPointMappingEntry scanRoots.\n                 * @member {Array.<string>} scanRoots\n                 * @memberof perfetto.protos.InodeFileConfig.MountPointMappingEntry\n                 * @instance\n                 */\n                MountPointMappingEntry.prototype.scanRoots = $util.emptyArray;\n\n                /**\n                 * Creates a new MountPointMappingEntry instance using the specified properties.\n                 * @function create\n                 * @memberof perfetto.protos.InodeFileConfig.MountPointMappingEntry\n                 * @static\n                 * @param {perfetto.protos.InodeFileConfig.IMountPointMappingEntry=} [properties] Properties to set\n                 * @returns {perfetto.protos.InodeFileConfig.MountPointMappingEntry} MountPointMappingEntry instance\n                 */\n                MountPointMappingEntry.create = function create(properties) {\n                    return new MountPointMappingEntry(properties);\n                };\n\n                /**\n                 * Encodes the specified MountPointMappingEntry message. Does not implicitly {@link perfetto.protos.InodeFileConfig.MountPointMappingEntry.verify|verify} messages.\n                 * @function encode\n                 * @memberof perfetto.protos.InodeFileConfig.MountPointMappingEntry\n                 * @static\n                 * @param {perfetto.protos.InodeFileConfig.IMountPointMappingEntry} message MountPointMappingEntry message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                MountPointMappingEntry.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.mountpoint != null && message.hasOwnProperty(\"mountpoint\"))\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.mountpoint);\n                    if (message.scanRoots != null && message.scanRoots.length)\n                        for (var i = 0; i < message.scanRoots.length; ++i)\n                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.scanRoots[i]);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified MountPointMappingEntry message, length delimited. Does not implicitly {@link perfetto.protos.InodeFileConfig.MountPointMappingEntry.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof perfetto.protos.InodeFileConfig.MountPointMappingEntry\n                 * @static\n                 * @param {perfetto.protos.InodeFileConfig.IMountPointMappingEntry} message MountPointMappingEntry message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                MountPointMappingEntry.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a MountPointMappingEntry message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof perfetto.protos.InodeFileConfig.MountPointMappingEntry\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {perfetto.protos.InodeFileConfig.MountPointMappingEntry} MountPointMappingEntry\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                MountPointMappingEntry.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.InodeFileConfig.MountPointMappingEntry();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.mountpoint = reader.string();\n                            break;\n                        case 2:\n                            if (!(message.scanRoots && message.scanRoots.length))\n                                message.scanRoots = [];\n                            message.scanRoots.push(reader.string());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a MountPointMappingEntry message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof perfetto.protos.InodeFileConfig.MountPointMappingEntry\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {perfetto.protos.InodeFileConfig.MountPointMappingEntry} MountPointMappingEntry\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                MountPointMappingEntry.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a MountPointMappingEntry message.\n                 * @function verify\n                 * @memberof perfetto.protos.InodeFileConfig.MountPointMappingEntry\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                MountPointMappingEntry.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.mountpoint != null && message.hasOwnProperty(\"mountpoint\"))\n                        if (!$util.isString(message.mountpoint))\n                            return \"mountpoint: string expected\";\n                    if (message.scanRoots != null && message.hasOwnProperty(\"scanRoots\")) {\n                        if (!Array.isArray(message.scanRoots))\n                            return \"scanRoots: array expected\";\n                        for (var i = 0; i < message.scanRoots.length; ++i)\n                            if (!$util.isString(message.scanRoots[i]))\n                                return \"scanRoots: string[] expected\";\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates a MountPointMappingEntry message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof perfetto.protos.InodeFileConfig.MountPointMappingEntry\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {perfetto.protos.InodeFileConfig.MountPointMappingEntry} MountPointMappingEntry\n                 */\n                MountPointMappingEntry.fromObject = function fromObject(object) {\n                    if (object instanceof $root.perfetto.protos.InodeFileConfig.MountPointMappingEntry)\n                        return object;\n                    var message = new $root.perfetto.protos.InodeFileConfig.MountPointMappingEntry();\n                    if (object.mountpoint != null)\n                        message.mountpoint = String(object.mountpoint);\n                    if (object.scanRoots) {\n                        if (!Array.isArray(object.scanRoots))\n                            throw TypeError(\".perfetto.protos.InodeFileConfig.MountPointMappingEntry.scanRoots: array expected\");\n                        message.scanRoots = [];\n                        for (var i = 0; i < object.scanRoots.length; ++i)\n                            message.scanRoots[i] = String(object.scanRoots[i]);\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a MountPointMappingEntry message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof perfetto.protos.InodeFileConfig.MountPointMappingEntry\n                 * @static\n                 * @param {perfetto.protos.InodeFileConfig.MountPointMappingEntry} message MountPointMappingEntry\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                MountPointMappingEntry.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.scanRoots = [];\n                    if (options.defaults)\n                        object.mountpoint = \"\";\n                    if (message.mountpoint != null && message.hasOwnProperty(\"mountpoint\"))\n                        object.mountpoint = message.mountpoint;\n                    if (message.scanRoots && message.scanRoots.length) {\n                        object.scanRoots = [];\n                        for (var j = 0; j < message.scanRoots.length; ++j)\n                            object.scanRoots[j] = message.scanRoots[j];\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this MountPointMappingEntry to JSON.\n                 * @function toJSON\n                 * @memberof perfetto.protos.InodeFileConfig.MountPointMappingEntry\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                MountPointMappingEntry.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return MountPointMappingEntry;\n            })();\n\n            return InodeFileConfig;\n        })();\n\n        protos.ProcessStatsConfig = (function() {\n\n            /**\n             * Properties of a ProcessStatsConfig.\n             * @memberof perfetto.protos\n             * @interface IProcessStatsConfig\n             * @property {Array.<perfetto.protos.ProcessStatsConfig.Quirks>|null} [quirks] ProcessStatsConfig quirks\n             * @property {boolean|null} [scanAllProcessesOnStart] ProcessStatsConfig scanAllProcessesOnStart\n             * @property {boolean|null} [recordThreadNames] ProcessStatsConfig recordThreadNames\n             */\n\n            /**\n             * Constructs a new ProcessStatsConfig.\n             * @memberof perfetto.protos\n             * @classdesc Represents a ProcessStatsConfig.\n             * @implements IProcessStatsConfig\n             * @constructor\n             * @param {perfetto.protos.IProcessStatsConfig=} [properties] Properties to set\n             */\n            function ProcessStatsConfig(properties) {\n                this.quirks = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * ProcessStatsConfig quirks.\n             * @member {Array.<perfetto.protos.ProcessStatsConfig.Quirks>} quirks\n             * @memberof perfetto.protos.ProcessStatsConfig\n             * @instance\n             */\n            ProcessStatsConfig.prototype.quirks = $util.emptyArray;\n\n            /**\n             * ProcessStatsConfig scanAllProcessesOnStart.\n             * @member {boolean} scanAllProcessesOnStart\n             * @memberof perfetto.protos.ProcessStatsConfig\n             * @instance\n             */\n            ProcessStatsConfig.prototype.scanAllProcessesOnStart = false;\n\n            /**\n             * ProcessStatsConfig recordThreadNames.\n             * @member {boolean} recordThreadNames\n             * @memberof perfetto.protos.ProcessStatsConfig\n             * @instance\n             */\n            ProcessStatsConfig.prototype.recordThreadNames = false;\n\n            /**\n             * Creates a new ProcessStatsConfig instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.ProcessStatsConfig\n             * @static\n             * @param {perfetto.protos.IProcessStatsConfig=} [properties] Properties to set\n             * @returns {perfetto.protos.ProcessStatsConfig} ProcessStatsConfig instance\n             */\n            ProcessStatsConfig.create = function create(properties) {\n                return new ProcessStatsConfig(properties);\n            };\n\n            /**\n             * Encodes the specified ProcessStatsConfig message. Does not implicitly {@link perfetto.protos.ProcessStatsConfig.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.ProcessStatsConfig\n             * @static\n             * @param {perfetto.protos.IProcessStatsConfig} message ProcessStatsConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ProcessStatsConfig.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.quirks != null && message.quirks.length)\n                    for (var i = 0; i < message.quirks.length; ++i)\n                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.quirks[i]);\n                if (message.scanAllProcessesOnStart != null && message.hasOwnProperty(\"scanAllProcessesOnStart\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.scanAllProcessesOnStart);\n                if (message.recordThreadNames != null && message.hasOwnProperty(\"recordThreadNames\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.recordThreadNames);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified ProcessStatsConfig message, length delimited. Does not implicitly {@link perfetto.protos.ProcessStatsConfig.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.ProcessStatsConfig\n             * @static\n             * @param {perfetto.protos.IProcessStatsConfig} message ProcessStatsConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ProcessStatsConfig.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a ProcessStatsConfig message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.ProcessStatsConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.ProcessStatsConfig} ProcessStatsConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ProcessStatsConfig.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.ProcessStatsConfig();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.quirks && message.quirks.length))\n                            message.quirks = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.quirks.push(reader.int32());\n                        } else\n                            message.quirks.push(reader.int32());\n                        break;\n                    case 2:\n                        message.scanAllProcessesOnStart = reader.bool();\n                        break;\n                    case 3:\n                        message.recordThreadNames = reader.bool();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a ProcessStatsConfig message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.ProcessStatsConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.ProcessStatsConfig} ProcessStatsConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ProcessStatsConfig.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a ProcessStatsConfig message.\n             * @function verify\n             * @memberof perfetto.protos.ProcessStatsConfig\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            ProcessStatsConfig.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.quirks != null && message.hasOwnProperty(\"quirks\")) {\n                    if (!Array.isArray(message.quirks))\n                        return \"quirks: array expected\";\n                    for (var i = 0; i < message.quirks.length; ++i)\n                        switch (message.quirks[i]) {\n                        default:\n                            return \"quirks: enum value[] expected\";\n                        case 0:\n                        case 1:\n                        case 2:\n                            break;\n                        }\n                }\n                if (message.scanAllProcessesOnStart != null && message.hasOwnProperty(\"scanAllProcessesOnStart\"))\n                    if (typeof message.scanAllProcessesOnStart !== \"boolean\")\n                        return \"scanAllProcessesOnStart: boolean expected\";\n                if (message.recordThreadNames != null && message.hasOwnProperty(\"recordThreadNames\"))\n                    if (typeof message.recordThreadNames !== \"boolean\")\n                        return \"recordThreadNames: boolean expected\";\n                return null;\n            };\n\n            /**\n             * Creates a ProcessStatsConfig message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.ProcessStatsConfig\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.ProcessStatsConfig} ProcessStatsConfig\n             */\n            ProcessStatsConfig.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.ProcessStatsConfig)\n                    return object;\n                var message = new $root.perfetto.protos.ProcessStatsConfig();\n                if (object.quirks) {\n                    if (!Array.isArray(object.quirks))\n                        throw TypeError(\".perfetto.protos.ProcessStatsConfig.quirks: array expected\");\n                    message.quirks = [];\n                    for (var i = 0; i < object.quirks.length; ++i)\n                        switch (object.quirks[i]) {\n                        default:\n                        case \"QUIRKS_UNSPECIFIED\":\n                        case 0:\n                            message.quirks[i] = 0;\n                            break;\n                        case \"DISABLE_INITIAL_DUMP\":\n                        case 1:\n                            message.quirks[i] = 1;\n                            break;\n                        case \"DISABLE_ON_DEMAND\":\n                        case 2:\n                            message.quirks[i] = 2;\n                            break;\n                        }\n                }\n                if (object.scanAllProcessesOnStart != null)\n                    message.scanAllProcessesOnStart = Boolean(object.scanAllProcessesOnStart);\n                if (object.recordThreadNames != null)\n                    message.recordThreadNames = Boolean(object.recordThreadNames);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a ProcessStatsConfig message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.ProcessStatsConfig\n             * @static\n             * @param {perfetto.protos.ProcessStatsConfig} message ProcessStatsConfig\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ProcessStatsConfig.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.quirks = [];\n                if (options.defaults) {\n                    object.scanAllProcessesOnStart = false;\n                    object.recordThreadNames = false;\n                }\n                if (message.quirks && message.quirks.length) {\n                    object.quirks = [];\n                    for (var j = 0; j < message.quirks.length; ++j)\n                        object.quirks[j] = options.enums === String ? $root.perfetto.protos.ProcessStatsConfig.Quirks[message.quirks[j]] : message.quirks[j];\n                }\n                if (message.scanAllProcessesOnStart != null && message.hasOwnProperty(\"scanAllProcessesOnStart\"))\n                    object.scanAllProcessesOnStart = message.scanAllProcessesOnStart;\n                if (message.recordThreadNames != null && message.hasOwnProperty(\"recordThreadNames\"))\n                    object.recordThreadNames = message.recordThreadNames;\n                return object;\n            };\n\n            /**\n             * Converts this ProcessStatsConfig to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.ProcessStatsConfig\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ProcessStatsConfig.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Quirks enum.\n             * @name perfetto.protos.ProcessStatsConfig.Quirks\n             * @enum {string}\n             * @property {number} QUIRKS_UNSPECIFIED=0 QUIRKS_UNSPECIFIED value\n             * @property {number} DISABLE_INITIAL_DUMP=1 DISABLE_INITIAL_DUMP value\n             * @property {number} DISABLE_ON_DEMAND=2 DISABLE_ON_DEMAND value\n             */\n            ProcessStatsConfig.Quirks = (function() {\n                var valuesById = {}, values = Object.create(valuesById);\n                values[valuesById[0] = \"QUIRKS_UNSPECIFIED\"] = 0;\n                values[valuesById[1] = \"DISABLE_INITIAL_DUMP\"] = 1;\n                values[valuesById[2] = \"DISABLE_ON_DEMAND\"] = 2;\n                return values;\n            })();\n\n            return ProcessStatsConfig;\n        })();\n\n        protos.DataSourceConfig = (function() {\n\n            /**\n             * Properties of a DataSourceConfig.\n             * @memberof perfetto.protos\n             * @interface IDataSourceConfig\n             * @property {string|null} [name] DataSourceConfig name\n             * @property {number|null} [targetBuffer] DataSourceConfig targetBuffer\n             * @property {number|null} [traceDurationMs] DataSourceConfig traceDurationMs\n             * @property {number|Long|null} [tracingSessionId] DataSourceConfig tracingSessionId\n             * @property {perfetto.protos.IFtraceConfig|null} [ftraceConfig] DataSourceConfig ftraceConfig\n             * @property {perfetto.protos.IChromeConfig|null} [chromeConfig] DataSourceConfig chromeConfig\n             * @property {perfetto.protos.IInodeFileConfig|null} [inodeFileConfig] DataSourceConfig inodeFileConfig\n             * @property {perfetto.protos.IProcessStatsConfig|null} [processStatsConfig] DataSourceConfig processStatsConfig\n             * @property {string|null} [legacyConfig] DataSourceConfig legacyConfig\n             * @property {perfetto.protos.ITestConfig|null} [forTesting] DataSourceConfig forTesting\n             */\n\n            /**\n             * Constructs a new DataSourceConfig.\n             * @memberof perfetto.protos\n             * @classdesc Represents a DataSourceConfig.\n             * @implements IDataSourceConfig\n             * @constructor\n             * @param {perfetto.protos.IDataSourceConfig=} [properties] Properties to set\n             */\n            function DataSourceConfig(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * DataSourceConfig name.\n             * @member {string} name\n             * @memberof perfetto.protos.DataSourceConfig\n             * @instance\n             */\n            DataSourceConfig.prototype.name = \"\";\n\n            /**\n             * DataSourceConfig targetBuffer.\n             * @member {number} targetBuffer\n             * @memberof perfetto.protos.DataSourceConfig\n             * @instance\n             */\n            DataSourceConfig.prototype.targetBuffer = 0;\n\n            /**\n             * DataSourceConfig traceDurationMs.\n             * @member {number} traceDurationMs\n             * @memberof perfetto.protos.DataSourceConfig\n             * @instance\n             */\n            DataSourceConfig.prototype.traceDurationMs = 0;\n\n            /**\n             * DataSourceConfig tracingSessionId.\n             * @member {number|Long} tracingSessionId\n             * @memberof perfetto.protos.DataSourceConfig\n             * @instance\n             */\n            DataSourceConfig.prototype.tracingSessionId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * DataSourceConfig ftraceConfig.\n             * @member {perfetto.protos.IFtraceConfig|null|undefined} ftraceConfig\n             * @memberof perfetto.protos.DataSourceConfig\n             * @instance\n             */\n            DataSourceConfig.prototype.ftraceConfig = null;\n\n            /**\n             * DataSourceConfig chromeConfig.\n             * @member {perfetto.protos.IChromeConfig|null|undefined} chromeConfig\n             * @memberof perfetto.protos.DataSourceConfig\n             * @instance\n             */\n            DataSourceConfig.prototype.chromeConfig = null;\n\n            /**\n             * DataSourceConfig inodeFileConfig.\n             * @member {perfetto.protos.IInodeFileConfig|null|undefined} inodeFileConfig\n             * @memberof perfetto.protos.DataSourceConfig\n             * @instance\n             */\n            DataSourceConfig.prototype.inodeFileConfig = null;\n\n            /**\n             * DataSourceConfig processStatsConfig.\n             * @member {perfetto.protos.IProcessStatsConfig|null|undefined} processStatsConfig\n             * @memberof perfetto.protos.DataSourceConfig\n             * @instance\n             */\n            DataSourceConfig.prototype.processStatsConfig = null;\n\n            /**\n             * DataSourceConfig legacyConfig.\n             * @member {string} legacyConfig\n             * @memberof perfetto.protos.DataSourceConfig\n             * @instance\n             */\n            DataSourceConfig.prototype.legacyConfig = \"\";\n\n            /**\n             * DataSourceConfig forTesting.\n             * @member {perfetto.protos.ITestConfig|null|undefined} forTesting\n             * @memberof perfetto.protos.DataSourceConfig\n             * @instance\n             */\n            DataSourceConfig.prototype.forTesting = null;\n\n            /**\n             * Creates a new DataSourceConfig instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.DataSourceConfig\n             * @static\n             * @param {perfetto.protos.IDataSourceConfig=} [properties] Properties to set\n             * @returns {perfetto.protos.DataSourceConfig} DataSourceConfig instance\n             */\n            DataSourceConfig.create = function create(properties) {\n                return new DataSourceConfig(properties);\n            };\n\n            /**\n             * Encodes the specified DataSourceConfig message. Does not implicitly {@link perfetto.protos.DataSourceConfig.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.DataSourceConfig\n             * @static\n             * @param {perfetto.protos.IDataSourceConfig} message DataSourceConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            DataSourceConfig.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.name != null && message.hasOwnProperty(\"name\"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                if (message.targetBuffer != null && message.hasOwnProperty(\"targetBuffer\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetBuffer);\n                if (message.traceDurationMs != null && message.hasOwnProperty(\"traceDurationMs\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.traceDurationMs);\n                if (message.tracingSessionId != null && message.hasOwnProperty(\"tracingSessionId\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.tracingSessionId);\n                if (message.ftraceConfig != null && message.hasOwnProperty(\"ftraceConfig\"))\n                    $root.perfetto.protos.FtraceConfig.encode(message.ftraceConfig, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();\n                if (message.chromeConfig != null && message.hasOwnProperty(\"chromeConfig\"))\n                    $root.perfetto.protos.ChromeConfig.encode(message.chromeConfig, writer.uint32(/* id 101, wireType 2 =*/810).fork()).ldelim();\n                if (message.inodeFileConfig != null && message.hasOwnProperty(\"inodeFileConfig\"))\n                    $root.perfetto.protos.InodeFileConfig.encode(message.inodeFileConfig, writer.uint32(/* id 102, wireType 2 =*/818).fork()).ldelim();\n                if (message.processStatsConfig != null && message.hasOwnProperty(\"processStatsConfig\"))\n                    $root.perfetto.protos.ProcessStatsConfig.encode(message.processStatsConfig, writer.uint32(/* id 103, wireType 2 =*/826).fork()).ldelim();\n                if (message.legacyConfig != null && message.hasOwnProperty(\"legacyConfig\"))\n                    writer.uint32(/* id 1000, wireType 2 =*/8002).string(message.legacyConfig);\n                if (message.forTesting != null && message.hasOwnProperty(\"forTesting\"))\n                    $root.perfetto.protos.TestConfig.encode(message.forTesting, writer.uint32(/* id 536870911, wireType 2 =*/4294967290).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified DataSourceConfig message, length delimited. Does not implicitly {@link perfetto.protos.DataSourceConfig.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.DataSourceConfig\n             * @static\n             * @param {perfetto.protos.IDataSourceConfig} message DataSourceConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            DataSourceConfig.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a DataSourceConfig message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.DataSourceConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.DataSourceConfig} DataSourceConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            DataSourceConfig.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.DataSourceConfig();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.name = reader.string();\n                        break;\n                    case 2:\n                        message.targetBuffer = reader.uint32();\n                        break;\n                    case 3:\n                        message.traceDurationMs = reader.uint32();\n                        break;\n                    case 4:\n                        message.tracingSessionId = reader.uint64();\n                        break;\n                    case 100:\n                        message.ftraceConfig = $root.perfetto.protos.FtraceConfig.decode(reader, reader.uint32());\n                        break;\n                    case 101:\n                        message.chromeConfig = $root.perfetto.protos.ChromeConfig.decode(reader, reader.uint32());\n                        break;\n                    case 102:\n                        message.inodeFileConfig = $root.perfetto.protos.InodeFileConfig.decode(reader, reader.uint32());\n                        break;\n                    case 103:\n                        message.processStatsConfig = $root.perfetto.protos.ProcessStatsConfig.decode(reader, reader.uint32());\n                        break;\n                    case 1000:\n                        message.legacyConfig = reader.string();\n                        break;\n                    case 536870911:\n                        message.forTesting = $root.perfetto.protos.TestConfig.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a DataSourceConfig message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.DataSourceConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.DataSourceConfig} DataSourceConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            DataSourceConfig.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a DataSourceConfig message.\n             * @function verify\n             * @memberof perfetto.protos.DataSourceConfig\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            DataSourceConfig.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.name != null && message.hasOwnProperty(\"name\"))\n                    if (!$util.isString(message.name))\n                        return \"name: string expected\";\n                if (message.targetBuffer != null && message.hasOwnProperty(\"targetBuffer\"))\n                    if (!$util.isInteger(message.targetBuffer))\n                        return \"targetBuffer: integer expected\";\n                if (message.traceDurationMs != null && message.hasOwnProperty(\"traceDurationMs\"))\n                    if (!$util.isInteger(message.traceDurationMs))\n                        return \"traceDurationMs: integer expected\";\n                if (message.tracingSessionId != null && message.hasOwnProperty(\"tracingSessionId\"))\n                    if (!$util.isInteger(message.tracingSessionId) && !(message.tracingSessionId && $util.isInteger(message.tracingSessionId.low) && $util.isInteger(message.tracingSessionId.high)))\n                        return \"tracingSessionId: integer|Long expected\";\n                if (message.ftraceConfig != null && message.hasOwnProperty(\"ftraceConfig\")) {\n                    var error = $root.perfetto.protos.FtraceConfig.verify(message.ftraceConfig);\n                    if (error)\n                        return \"ftraceConfig.\" + error;\n                }\n                if (message.chromeConfig != null && message.hasOwnProperty(\"chromeConfig\")) {\n                    var error = $root.perfetto.protos.ChromeConfig.verify(message.chromeConfig);\n                    if (error)\n                        return \"chromeConfig.\" + error;\n                }\n                if (message.inodeFileConfig != null && message.hasOwnProperty(\"inodeFileConfig\")) {\n                    var error = $root.perfetto.protos.InodeFileConfig.verify(message.inodeFileConfig);\n                    if (error)\n                        return \"inodeFileConfig.\" + error;\n                }\n                if (message.processStatsConfig != null && message.hasOwnProperty(\"processStatsConfig\")) {\n                    var error = $root.perfetto.protos.ProcessStatsConfig.verify(message.processStatsConfig);\n                    if (error)\n                        return \"processStatsConfig.\" + error;\n                }\n                if (message.legacyConfig != null && message.hasOwnProperty(\"legacyConfig\"))\n                    if (!$util.isString(message.legacyConfig))\n                        return \"legacyConfig: string expected\";\n                if (message.forTesting != null && message.hasOwnProperty(\"forTesting\")) {\n                    var error = $root.perfetto.protos.TestConfig.verify(message.forTesting);\n                    if (error)\n                        return \"forTesting.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a DataSourceConfig message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.DataSourceConfig\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.DataSourceConfig} DataSourceConfig\n             */\n            DataSourceConfig.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.DataSourceConfig)\n                    return object;\n                var message = new $root.perfetto.protos.DataSourceConfig();\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.targetBuffer != null)\n                    message.targetBuffer = object.targetBuffer >>> 0;\n                if (object.traceDurationMs != null)\n                    message.traceDurationMs = object.traceDurationMs >>> 0;\n                if (object.tracingSessionId != null)\n                    if ($util.Long)\n                        (message.tracingSessionId = $util.Long.fromValue(object.tracingSessionId)).unsigned = true;\n                    else if (typeof object.tracingSessionId === \"string\")\n                        message.tracingSessionId = parseInt(object.tracingSessionId, 10);\n                    else if (typeof object.tracingSessionId === \"number\")\n                        message.tracingSessionId = object.tracingSessionId;\n                    else if (typeof object.tracingSessionId === \"object\")\n                        message.tracingSessionId = new $util.LongBits(object.tracingSessionId.low >>> 0, object.tracingSessionId.high >>> 0).toNumber(true);\n                if (object.ftraceConfig != null) {\n                    if (typeof object.ftraceConfig !== \"object\")\n                        throw TypeError(\".perfetto.protos.DataSourceConfig.ftraceConfig: object expected\");\n                    message.ftraceConfig = $root.perfetto.protos.FtraceConfig.fromObject(object.ftraceConfig);\n                }\n                if (object.chromeConfig != null) {\n                    if (typeof object.chromeConfig !== \"object\")\n                        throw TypeError(\".perfetto.protos.DataSourceConfig.chromeConfig: object expected\");\n                    message.chromeConfig = $root.perfetto.protos.ChromeConfig.fromObject(object.chromeConfig);\n                }\n                if (object.inodeFileConfig != null) {\n                    if (typeof object.inodeFileConfig !== \"object\")\n                        throw TypeError(\".perfetto.protos.DataSourceConfig.inodeFileConfig: object expected\");\n                    message.inodeFileConfig = $root.perfetto.protos.InodeFileConfig.fromObject(object.inodeFileConfig);\n                }\n                if (object.processStatsConfig != null) {\n                    if (typeof object.processStatsConfig !== \"object\")\n                        throw TypeError(\".perfetto.protos.DataSourceConfig.processStatsConfig: object expected\");\n                    message.processStatsConfig = $root.perfetto.protos.ProcessStatsConfig.fromObject(object.processStatsConfig);\n                }\n                if (object.legacyConfig != null)\n                    message.legacyConfig = String(object.legacyConfig);\n                if (object.forTesting != null) {\n                    if (typeof object.forTesting !== \"object\")\n                        throw TypeError(\".perfetto.protos.DataSourceConfig.forTesting: object expected\");\n                    message.forTesting = $root.perfetto.protos.TestConfig.fromObject(object.forTesting);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a DataSourceConfig message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.DataSourceConfig\n             * @static\n             * @param {perfetto.protos.DataSourceConfig} message DataSourceConfig\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            DataSourceConfig.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.name = \"\";\n                    object.targetBuffer = 0;\n                    object.traceDurationMs = 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.tracingSessionId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.tracingSessionId = options.longs === String ? \"0\" : 0;\n                    object.ftraceConfig = null;\n                    object.chromeConfig = null;\n                    object.inodeFileConfig = null;\n                    object.processStatsConfig = null;\n                    object.legacyConfig = \"\";\n                    object.forTesting = null;\n                }\n                if (message.name != null && message.hasOwnProperty(\"name\"))\n                    object.name = message.name;\n                if (message.targetBuffer != null && message.hasOwnProperty(\"targetBuffer\"))\n                    object.targetBuffer = message.targetBuffer;\n                if (message.traceDurationMs != null && message.hasOwnProperty(\"traceDurationMs\"))\n                    object.traceDurationMs = message.traceDurationMs;\n                if (message.tracingSessionId != null && message.hasOwnProperty(\"tracingSessionId\"))\n                    if (typeof message.tracingSessionId === \"number\")\n                        object.tracingSessionId = options.longs === String ? String(message.tracingSessionId) : message.tracingSessionId;\n                    else\n                        object.tracingSessionId = options.longs === String ? $util.Long.prototype.toString.call(message.tracingSessionId) : options.longs === Number ? new $util.LongBits(message.tracingSessionId.low >>> 0, message.tracingSessionId.high >>> 0).toNumber(true) : message.tracingSessionId;\n                if (message.ftraceConfig != null && message.hasOwnProperty(\"ftraceConfig\"))\n                    object.ftraceConfig = $root.perfetto.protos.FtraceConfig.toObject(message.ftraceConfig, options);\n                if (message.chromeConfig != null && message.hasOwnProperty(\"chromeConfig\"))\n                    object.chromeConfig = $root.perfetto.protos.ChromeConfig.toObject(message.chromeConfig, options);\n                if (message.inodeFileConfig != null && message.hasOwnProperty(\"inodeFileConfig\"))\n                    object.inodeFileConfig = $root.perfetto.protos.InodeFileConfig.toObject(message.inodeFileConfig, options);\n                if (message.processStatsConfig != null && message.hasOwnProperty(\"processStatsConfig\"))\n                    object.processStatsConfig = $root.perfetto.protos.ProcessStatsConfig.toObject(message.processStatsConfig, options);\n                if (message.legacyConfig != null && message.hasOwnProperty(\"legacyConfig\"))\n                    object.legacyConfig = message.legacyConfig;\n                if (message.forTesting != null && message.hasOwnProperty(\"forTesting\"))\n                    object.forTesting = $root.perfetto.protos.TestConfig.toObject(message.forTesting, options);\n                return object;\n            };\n\n            /**\n             * Converts this DataSourceConfig to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.DataSourceConfig\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            DataSourceConfig.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return DataSourceConfig;\n        })();\n\n        protos.FtraceConfig = (function() {\n\n            /**\n             * Properties of a FtraceConfig.\n             * @memberof perfetto.protos\n             * @interface IFtraceConfig\n             * @property {Array.<string>|null} [ftraceEvents] FtraceConfig ftraceEvents\n             * @property {Array.<string>|null} [atraceCategories] FtraceConfig atraceCategories\n             * @property {Array.<string>|null} [atraceApps] FtraceConfig atraceApps\n             * @property {number|null} [bufferSizeKb] FtraceConfig bufferSizeKb\n             * @property {number|null} [drainPeriodMs] FtraceConfig drainPeriodMs\n             */\n\n            /**\n             * Constructs a new FtraceConfig.\n             * @memberof perfetto.protos\n             * @classdesc Represents a FtraceConfig.\n             * @implements IFtraceConfig\n             * @constructor\n             * @param {perfetto.protos.IFtraceConfig=} [properties] Properties to set\n             */\n            function FtraceConfig(properties) {\n                this.ftraceEvents = [];\n                this.atraceCategories = [];\n                this.atraceApps = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * FtraceConfig ftraceEvents.\n             * @member {Array.<string>} ftraceEvents\n             * @memberof perfetto.protos.FtraceConfig\n             * @instance\n             */\n            FtraceConfig.prototype.ftraceEvents = $util.emptyArray;\n\n            /**\n             * FtraceConfig atraceCategories.\n             * @member {Array.<string>} atraceCategories\n             * @memberof perfetto.protos.FtraceConfig\n             * @instance\n             */\n            FtraceConfig.prototype.atraceCategories = $util.emptyArray;\n\n            /**\n             * FtraceConfig atraceApps.\n             * @member {Array.<string>} atraceApps\n             * @memberof perfetto.protos.FtraceConfig\n             * @instance\n             */\n            FtraceConfig.prototype.atraceApps = $util.emptyArray;\n\n            /**\n             * FtraceConfig bufferSizeKb.\n             * @member {number} bufferSizeKb\n             * @memberof perfetto.protos.FtraceConfig\n             * @instance\n             */\n            FtraceConfig.prototype.bufferSizeKb = 0;\n\n            /**\n             * FtraceConfig drainPeriodMs.\n             * @member {number} drainPeriodMs\n             * @memberof perfetto.protos.FtraceConfig\n             * @instance\n             */\n            FtraceConfig.prototype.drainPeriodMs = 0;\n\n            /**\n             * Creates a new FtraceConfig instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.FtraceConfig\n             * @static\n             * @param {perfetto.protos.IFtraceConfig=} [properties] Properties to set\n             * @returns {perfetto.protos.FtraceConfig} FtraceConfig instance\n             */\n            FtraceConfig.create = function create(properties) {\n                return new FtraceConfig(properties);\n            };\n\n            /**\n             * Encodes the specified FtraceConfig message. Does not implicitly {@link perfetto.protos.FtraceConfig.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.FtraceConfig\n             * @static\n             * @param {perfetto.protos.IFtraceConfig} message FtraceConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            FtraceConfig.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.ftraceEvents != null && message.ftraceEvents.length)\n                    for (var i = 0; i < message.ftraceEvents.length; ++i)\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.ftraceEvents[i]);\n                if (message.atraceCategories != null && message.atraceCategories.length)\n                    for (var i = 0; i < message.atraceCategories.length; ++i)\n                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.atraceCategories[i]);\n                if (message.atraceApps != null && message.atraceApps.length)\n                    for (var i = 0; i < message.atraceApps.length; ++i)\n                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.atraceApps[i]);\n                if (message.bufferSizeKb != null && message.hasOwnProperty(\"bufferSizeKb\"))\n                    writer.uint32(/* id 10, wireType 0 =*/80).uint32(message.bufferSizeKb);\n                if (message.drainPeriodMs != null && message.hasOwnProperty(\"drainPeriodMs\"))\n                    writer.uint32(/* id 11, wireType 0 =*/88).uint32(message.drainPeriodMs);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified FtraceConfig message, length delimited. Does not implicitly {@link perfetto.protos.FtraceConfig.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.FtraceConfig\n             * @static\n             * @param {perfetto.protos.IFtraceConfig} message FtraceConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            FtraceConfig.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a FtraceConfig message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.FtraceConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.FtraceConfig} FtraceConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            FtraceConfig.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.FtraceConfig();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.ftraceEvents && message.ftraceEvents.length))\n                            message.ftraceEvents = [];\n                        message.ftraceEvents.push(reader.string());\n                        break;\n                    case 2:\n                        if (!(message.atraceCategories && message.atraceCategories.length))\n                            message.atraceCategories = [];\n                        message.atraceCategories.push(reader.string());\n                        break;\n                    case 3:\n                        if (!(message.atraceApps && message.atraceApps.length))\n                            message.atraceApps = [];\n                        message.atraceApps.push(reader.string());\n                        break;\n                    case 10:\n                        message.bufferSizeKb = reader.uint32();\n                        break;\n                    case 11:\n                        message.drainPeriodMs = reader.uint32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a FtraceConfig message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.FtraceConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.FtraceConfig} FtraceConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            FtraceConfig.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a FtraceConfig message.\n             * @function verify\n             * @memberof perfetto.protos.FtraceConfig\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            FtraceConfig.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.ftraceEvents != null && message.hasOwnProperty(\"ftraceEvents\")) {\n                    if (!Array.isArray(message.ftraceEvents))\n                        return \"ftraceEvents: array expected\";\n                    for (var i = 0; i < message.ftraceEvents.length; ++i)\n                        if (!$util.isString(message.ftraceEvents[i]))\n                            return \"ftraceEvents: string[] expected\";\n                }\n                if (message.atraceCategories != null && message.hasOwnProperty(\"atraceCategories\")) {\n                    if (!Array.isArray(message.atraceCategories))\n                        return \"atraceCategories: array expected\";\n                    for (var i = 0; i < message.atraceCategories.length; ++i)\n                        if (!$util.isString(message.atraceCategories[i]))\n                            return \"atraceCategories: string[] expected\";\n                }\n                if (message.atraceApps != null && message.hasOwnProperty(\"atraceApps\")) {\n                    if (!Array.isArray(message.atraceApps))\n                        return \"atraceApps: array expected\";\n                    for (var i = 0; i < message.atraceApps.length; ++i)\n                        if (!$util.isString(message.atraceApps[i]))\n                            return \"atraceApps: string[] expected\";\n                }\n                if (message.bufferSizeKb != null && message.hasOwnProperty(\"bufferSizeKb\"))\n                    if (!$util.isInteger(message.bufferSizeKb))\n                        return \"bufferSizeKb: integer expected\";\n                if (message.drainPeriodMs != null && message.hasOwnProperty(\"drainPeriodMs\"))\n                    if (!$util.isInteger(message.drainPeriodMs))\n                        return \"drainPeriodMs: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates a FtraceConfig message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.FtraceConfig\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.FtraceConfig} FtraceConfig\n             */\n            FtraceConfig.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.FtraceConfig)\n                    return object;\n                var message = new $root.perfetto.protos.FtraceConfig();\n                if (object.ftraceEvents) {\n                    if (!Array.isArray(object.ftraceEvents))\n                        throw TypeError(\".perfetto.protos.FtraceConfig.ftraceEvents: array expected\");\n                    message.ftraceEvents = [];\n                    for (var i = 0; i < object.ftraceEvents.length; ++i)\n                        message.ftraceEvents[i] = String(object.ftraceEvents[i]);\n                }\n                if (object.atraceCategories) {\n                    if (!Array.isArray(object.atraceCategories))\n                        throw TypeError(\".perfetto.protos.FtraceConfig.atraceCategories: array expected\");\n                    message.atraceCategories = [];\n                    for (var i = 0; i < object.atraceCategories.length; ++i)\n                        message.atraceCategories[i] = String(object.atraceCategories[i]);\n                }\n                if (object.atraceApps) {\n                    if (!Array.isArray(object.atraceApps))\n                        throw TypeError(\".perfetto.protos.FtraceConfig.atraceApps: array expected\");\n                    message.atraceApps = [];\n                    for (var i = 0; i < object.atraceApps.length; ++i)\n                        message.atraceApps[i] = String(object.atraceApps[i]);\n                }\n                if (object.bufferSizeKb != null)\n                    message.bufferSizeKb = object.bufferSizeKb >>> 0;\n                if (object.drainPeriodMs != null)\n                    message.drainPeriodMs = object.drainPeriodMs >>> 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a FtraceConfig message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.FtraceConfig\n             * @static\n             * @param {perfetto.protos.FtraceConfig} message FtraceConfig\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            FtraceConfig.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.ftraceEvents = [];\n                    object.atraceCategories = [];\n                    object.atraceApps = [];\n                }\n                if (options.defaults) {\n                    object.bufferSizeKb = 0;\n                    object.drainPeriodMs = 0;\n                }\n                if (message.ftraceEvents && message.ftraceEvents.length) {\n                    object.ftraceEvents = [];\n                    for (var j = 0; j < message.ftraceEvents.length; ++j)\n                        object.ftraceEvents[j] = message.ftraceEvents[j];\n                }\n                if (message.atraceCategories && message.atraceCategories.length) {\n                    object.atraceCategories = [];\n                    for (var j = 0; j < message.atraceCategories.length; ++j)\n                        object.atraceCategories[j] = message.atraceCategories[j];\n                }\n                if (message.atraceApps && message.atraceApps.length) {\n                    object.atraceApps = [];\n                    for (var j = 0; j < message.atraceApps.length; ++j)\n                        object.atraceApps[j] = message.atraceApps[j];\n                }\n                if (message.bufferSizeKb != null && message.hasOwnProperty(\"bufferSizeKb\"))\n                    object.bufferSizeKb = message.bufferSizeKb;\n                if (message.drainPeriodMs != null && message.hasOwnProperty(\"drainPeriodMs\"))\n                    object.drainPeriodMs = message.drainPeriodMs;\n                return object;\n            };\n\n            /**\n             * Converts this FtraceConfig to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.FtraceConfig\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            FtraceConfig.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return FtraceConfig;\n        })();\n\n        protos.TestConfig = (function() {\n\n            /**\n             * Properties of a TestConfig.\n             * @memberof perfetto.protos\n             * @interface ITestConfig\n             * @property {number|null} [messageCount] TestConfig messageCount\n             * @property {number|null} [maxMessagesPerSecond] TestConfig maxMessagesPerSecond\n             * @property {number|null} [seed] TestConfig seed\n             * @property {number|null} [messageSize] TestConfig messageSize\n             * @property {boolean|null} [sendBatchOnRegister] TestConfig sendBatchOnRegister\n             */\n\n            /**\n             * Constructs a new TestConfig.\n             * @memberof perfetto.protos\n             * @classdesc Represents a TestConfig.\n             * @implements ITestConfig\n             * @constructor\n             * @param {perfetto.protos.ITestConfig=} [properties] Properties to set\n             */\n            function TestConfig(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * TestConfig messageCount.\n             * @member {number} messageCount\n             * @memberof perfetto.protos.TestConfig\n             * @instance\n             */\n            TestConfig.prototype.messageCount = 0;\n\n            /**\n             * TestConfig maxMessagesPerSecond.\n             * @member {number} maxMessagesPerSecond\n             * @memberof perfetto.protos.TestConfig\n             * @instance\n             */\n            TestConfig.prototype.maxMessagesPerSecond = 0;\n\n            /**\n             * TestConfig seed.\n             * @member {number} seed\n             * @memberof perfetto.protos.TestConfig\n             * @instance\n             */\n            TestConfig.prototype.seed = 0;\n\n            /**\n             * TestConfig messageSize.\n             * @member {number} messageSize\n             * @memberof perfetto.protos.TestConfig\n             * @instance\n             */\n            TestConfig.prototype.messageSize = 0;\n\n            /**\n             * TestConfig sendBatchOnRegister.\n             * @member {boolean} sendBatchOnRegister\n             * @memberof perfetto.protos.TestConfig\n             * @instance\n             */\n            TestConfig.prototype.sendBatchOnRegister = false;\n\n            /**\n             * Creates a new TestConfig instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.TestConfig\n             * @static\n             * @param {perfetto.protos.ITestConfig=} [properties] Properties to set\n             * @returns {perfetto.protos.TestConfig} TestConfig instance\n             */\n            TestConfig.create = function create(properties) {\n                return new TestConfig(properties);\n            };\n\n            /**\n             * Encodes the specified TestConfig message. Does not implicitly {@link perfetto.protos.TestConfig.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.TestConfig\n             * @static\n             * @param {perfetto.protos.ITestConfig} message TestConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            TestConfig.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.messageCount != null && message.hasOwnProperty(\"messageCount\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.messageCount);\n                if (message.maxMessagesPerSecond != null && message.hasOwnProperty(\"maxMessagesPerSecond\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.maxMessagesPerSecond);\n                if (message.seed != null && message.hasOwnProperty(\"seed\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seed);\n                if (message.messageSize != null && message.hasOwnProperty(\"messageSize\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.messageSize);\n                if (message.sendBatchOnRegister != null && message.hasOwnProperty(\"sendBatchOnRegister\"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.sendBatchOnRegister);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified TestConfig message, length delimited. Does not implicitly {@link perfetto.protos.TestConfig.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.TestConfig\n             * @static\n             * @param {perfetto.protos.ITestConfig} message TestConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            TestConfig.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a TestConfig message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.TestConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.TestConfig} TestConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            TestConfig.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.TestConfig();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.messageCount = reader.uint32();\n                        break;\n                    case 2:\n                        message.maxMessagesPerSecond = reader.uint32();\n                        break;\n                    case 3:\n                        message.seed = reader.uint32();\n                        break;\n                    case 4:\n                        message.messageSize = reader.uint32();\n                        break;\n                    case 5:\n                        message.sendBatchOnRegister = reader.bool();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a TestConfig message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.TestConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.TestConfig} TestConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            TestConfig.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a TestConfig message.\n             * @function verify\n             * @memberof perfetto.protos.TestConfig\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            TestConfig.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.messageCount != null && message.hasOwnProperty(\"messageCount\"))\n                    if (!$util.isInteger(message.messageCount))\n                        return \"messageCount: integer expected\";\n                if (message.maxMessagesPerSecond != null && message.hasOwnProperty(\"maxMessagesPerSecond\"))\n                    if (!$util.isInteger(message.maxMessagesPerSecond))\n                        return \"maxMessagesPerSecond: integer expected\";\n                if (message.seed != null && message.hasOwnProperty(\"seed\"))\n                    if (!$util.isInteger(message.seed))\n                        return \"seed: integer expected\";\n                if (message.messageSize != null && message.hasOwnProperty(\"messageSize\"))\n                    if (!$util.isInteger(message.messageSize))\n                        return \"messageSize: integer expected\";\n                if (message.sendBatchOnRegister != null && message.hasOwnProperty(\"sendBatchOnRegister\"))\n                    if (typeof message.sendBatchOnRegister !== \"boolean\")\n                        return \"sendBatchOnRegister: boolean expected\";\n                return null;\n            };\n\n            /**\n             * Creates a TestConfig message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.TestConfig\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.TestConfig} TestConfig\n             */\n            TestConfig.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.TestConfig)\n                    return object;\n                var message = new $root.perfetto.protos.TestConfig();\n                if (object.messageCount != null)\n                    message.messageCount = object.messageCount >>> 0;\n                if (object.maxMessagesPerSecond != null)\n                    message.maxMessagesPerSecond = object.maxMessagesPerSecond >>> 0;\n                if (object.seed != null)\n                    message.seed = object.seed >>> 0;\n                if (object.messageSize != null)\n                    message.messageSize = object.messageSize >>> 0;\n                if (object.sendBatchOnRegister != null)\n                    message.sendBatchOnRegister = Boolean(object.sendBatchOnRegister);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a TestConfig message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.TestConfig\n             * @static\n             * @param {perfetto.protos.TestConfig} message TestConfig\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            TestConfig.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.messageCount = 0;\n                    object.maxMessagesPerSecond = 0;\n                    object.seed = 0;\n                    object.messageSize = 0;\n                    object.sendBatchOnRegister = false;\n                }\n                if (message.messageCount != null && message.hasOwnProperty(\"messageCount\"))\n                    object.messageCount = message.messageCount;\n                if (message.maxMessagesPerSecond != null && message.hasOwnProperty(\"maxMessagesPerSecond\"))\n                    object.maxMessagesPerSecond = message.maxMessagesPerSecond;\n                if (message.seed != null && message.hasOwnProperty(\"seed\"))\n                    object.seed = message.seed;\n                if (message.messageSize != null && message.hasOwnProperty(\"messageSize\"))\n                    object.messageSize = message.messageSize;\n                if (message.sendBatchOnRegister != null && message.hasOwnProperty(\"sendBatchOnRegister\"))\n                    object.sendBatchOnRegister = message.sendBatchOnRegister;\n                return object;\n            };\n\n            /**\n             * Converts this TestConfig to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.TestConfig\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            TestConfig.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return TestConfig;\n        })();\n\n        protos.TraceConfig = (function() {\n\n            /**\n             * Properties of a TraceConfig.\n             * @memberof perfetto.protos\n             * @interface ITraceConfig\n             * @property {Array.<perfetto.protos.TraceConfig.IBufferConfig>|null} [buffers] TraceConfig buffers\n             * @property {Array.<perfetto.protos.TraceConfig.IDataSource>|null} [dataSources] TraceConfig dataSources\n             * @property {number|null} [durationMs] TraceConfig durationMs\n             * @property {boolean|null} [enableExtraGuardrails] TraceConfig enableExtraGuardrails\n             * @property {perfetto.protos.TraceConfig.LockdownModeOperation|null} [lockdownMode] TraceConfig lockdownMode\n             * @property {Array.<perfetto.protos.TraceConfig.IProducerConfig>|null} [producers] TraceConfig producers\n             * @property {perfetto.protos.TraceConfig.IStatsdMetadata|null} [statsdMetadata] TraceConfig statsdMetadata\n             * @property {boolean|null} [writeIntoFile] TraceConfig writeIntoFile\n             * @property {number|null} [fileWritePeriodMs] TraceConfig fileWritePeriodMs\n             * @property {number|Long|null} [maxFileSizeBytes] TraceConfig maxFileSizeBytes\n             * @property {perfetto.protos.TraceConfig.IGuardrailOverrides|null} [guardrailOverrides] TraceConfig guardrailOverrides\n             */\n\n            /**\n             * Constructs a new TraceConfig.\n             * @memberof perfetto.protos\n             * @classdesc Represents a TraceConfig.\n             * @implements ITraceConfig\n             * @constructor\n             * @param {perfetto.protos.ITraceConfig=} [properties] Properties to set\n             */\n            function TraceConfig(properties) {\n                this.buffers = [];\n                this.dataSources = [];\n                this.producers = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * TraceConfig buffers.\n             * @member {Array.<perfetto.protos.TraceConfig.IBufferConfig>} buffers\n             * @memberof perfetto.protos.TraceConfig\n             * @instance\n             */\n            TraceConfig.prototype.buffers = $util.emptyArray;\n\n            /**\n             * TraceConfig dataSources.\n             * @member {Array.<perfetto.protos.TraceConfig.IDataSource>} dataSources\n             * @memberof perfetto.protos.TraceConfig\n             * @instance\n             */\n            TraceConfig.prototype.dataSources = $util.emptyArray;\n\n            /**\n             * TraceConfig durationMs.\n             * @member {number} durationMs\n             * @memberof perfetto.protos.TraceConfig\n             * @instance\n             */\n            TraceConfig.prototype.durationMs = 0;\n\n            /**\n             * TraceConfig enableExtraGuardrails.\n             * @member {boolean} enableExtraGuardrails\n             * @memberof perfetto.protos.TraceConfig\n             * @instance\n             */\n            TraceConfig.prototype.enableExtraGuardrails = false;\n\n            /**\n             * TraceConfig lockdownMode.\n             * @member {perfetto.protos.TraceConfig.LockdownModeOperation} lockdownMode\n             * @memberof perfetto.protos.TraceConfig\n             * @instance\n             */\n            TraceConfig.prototype.lockdownMode = 0;\n\n            /**\n             * TraceConfig producers.\n             * @member {Array.<perfetto.protos.TraceConfig.IProducerConfig>} producers\n             * @memberof perfetto.protos.TraceConfig\n             * @instance\n             */\n            TraceConfig.prototype.producers = $util.emptyArray;\n\n            /**\n             * TraceConfig statsdMetadata.\n             * @member {perfetto.protos.TraceConfig.IStatsdMetadata|null|undefined} statsdMetadata\n             * @memberof perfetto.protos.TraceConfig\n             * @instance\n             */\n            TraceConfig.prototype.statsdMetadata = null;\n\n            /**\n             * TraceConfig writeIntoFile.\n             * @member {boolean} writeIntoFile\n             * @memberof perfetto.protos.TraceConfig\n             * @instance\n             */\n            TraceConfig.prototype.writeIntoFile = false;\n\n            /**\n             * TraceConfig fileWritePeriodMs.\n             * @member {number} fileWritePeriodMs\n             * @memberof perfetto.protos.TraceConfig\n             * @instance\n             */\n            TraceConfig.prototype.fileWritePeriodMs = 0;\n\n            /**\n             * TraceConfig maxFileSizeBytes.\n             * @member {number|Long} maxFileSizeBytes\n             * @memberof perfetto.protos.TraceConfig\n             * @instance\n             */\n            TraceConfig.prototype.maxFileSizeBytes = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * TraceConfig guardrailOverrides.\n             * @member {perfetto.protos.TraceConfig.IGuardrailOverrides|null|undefined} guardrailOverrides\n             * @memberof perfetto.protos.TraceConfig\n             * @instance\n             */\n            TraceConfig.prototype.guardrailOverrides = null;\n\n            /**\n             * Creates a new TraceConfig instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.TraceConfig\n             * @static\n             * @param {perfetto.protos.ITraceConfig=} [properties] Properties to set\n             * @returns {perfetto.protos.TraceConfig} TraceConfig instance\n             */\n            TraceConfig.create = function create(properties) {\n                return new TraceConfig(properties);\n            };\n\n            /**\n             * Encodes the specified TraceConfig message. Does not implicitly {@link perfetto.protos.TraceConfig.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.TraceConfig\n             * @static\n             * @param {perfetto.protos.ITraceConfig} message TraceConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            TraceConfig.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.buffers != null && message.buffers.length)\n                    for (var i = 0; i < message.buffers.length; ++i)\n                        $root.perfetto.protos.TraceConfig.BufferConfig.encode(message.buffers[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.dataSources != null && message.dataSources.length)\n                    for (var i = 0; i < message.dataSources.length; ++i)\n                        $root.perfetto.protos.TraceConfig.DataSource.encode(message.dataSources[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.durationMs != null && message.hasOwnProperty(\"durationMs\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.durationMs);\n                if (message.enableExtraGuardrails != null && message.hasOwnProperty(\"enableExtraGuardrails\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).bool(message.enableExtraGuardrails);\n                if (message.lockdownMode != null && message.hasOwnProperty(\"lockdownMode\"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).int32(message.lockdownMode);\n                if (message.producers != null && message.producers.length)\n                    for (var i = 0; i < message.producers.length; ++i)\n                        $root.perfetto.protos.TraceConfig.ProducerConfig.encode(message.producers[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                if (message.statsdMetadata != null && message.hasOwnProperty(\"statsdMetadata\"))\n                    $root.perfetto.protos.TraceConfig.StatsdMetadata.encode(message.statsdMetadata, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n                if (message.writeIntoFile != null && message.hasOwnProperty(\"writeIntoFile\"))\n                    writer.uint32(/* id 8, wireType 0 =*/64).bool(message.writeIntoFile);\n                if (message.fileWritePeriodMs != null && message.hasOwnProperty(\"fileWritePeriodMs\"))\n                    writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.fileWritePeriodMs);\n                if (message.maxFileSizeBytes != null && message.hasOwnProperty(\"maxFileSizeBytes\"))\n                    writer.uint32(/* id 10, wireType 0 =*/80).uint64(message.maxFileSizeBytes);\n                if (message.guardrailOverrides != null && message.hasOwnProperty(\"guardrailOverrides\"))\n                    $root.perfetto.protos.TraceConfig.GuardrailOverrides.encode(message.guardrailOverrides, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified TraceConfig message, length delimited. Does not implicitly {@link perfetto.protos.TraceConfig.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.TraceConfig\n             * @static\n             * @param {perfetto.protos.ITraceConfig} message TraceConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            TraceConfig.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a TraceConfig message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.TraceConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.TraceConfig} TraceConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            TraceConfig.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.TraceConfig();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.buffers && message.buffers.length))\n                            message.buffers = [];\n                        message.buffers.push($root.perfetto.protos.TraceConfig.BufferConfig.decode(reader, reader.uint32()));\n                        break;\n                    case 2:\n                        if (!(message.dataSources && message.dataSources.length))\n                            message.dataSources = [];\n                        message.dataSources.push($root.perfetto.protos.TraceConfig.DataSource.decode(reader, reader.uint32()));\n                        break;\n                    case 3:\n                        message.durationMs = reader.uint32();\n                        break;\n                    case 4:\n                        message.enableExtraGuardrails = reader.bool();\n                        break;\n                    case 5:\n                        message.lockdownMode = reader.int32();\n                        break;\n                    case 6:\n                        if (!(message.producers && message.producers.length))\n                            message.producers = [];\n                        message.producers.push($root.perfetto.protos.TraceConfig.ProducerConfig.decode(reader, reader.uint32()));\n                        break;\n                    case 7:\n                        message.statsdMetadata = $root.perfetto.protos.TraceConfig.StatsdMetadata.decode(reader, reader.uint32());\n                        break;\n                    case 8:\n                        message.writeIntoFile = reader.bool();\n                        break;\n                    case 9:\n                        message.fileWritePeriodMs = reader.uint32();\n                        break;\n                    case 10:\n                        message.maxFileSizeBytes = reader.uint64();\n                        break;\n                    case 11:\n                        message.guardrailOverrides = $root.perfetto.protos.TraceConfig.GuardrailOverrides.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a TraceConfig message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.TraceConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.TraceConfig} TraceConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            TraceConfig.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a TraceConfig message.\n             * @function verify\n             * @memberof perfetto.protos.TraceConfig\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            TraceConfig.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.buffers != null && message.hasOwnProperty(\"buffers\")) {\n                    if (!Array.isArray(message.buffers))\n                        return \"buffers: array expected\";\n                    for (var i = 0; i < message.buffers.length; ++i) {\n                        var error = $root.perfetto.protos.TraceConfig.BufferConfig.verify(message.buffers[i]);\n                        if (error)\n                            return \"buffers.\" + error;\n                    }\n                }\n                if (message.dataSources != null && message.hasOwnProperty(\"dataSources\")) {\n                    if (!Array.isArray(message.dataSources))\n                        return \"dataSources: array expected\";\n                    for (var i = 0; i < message.dataSources.length; ++i) {\n                        var error = $root.perfetto.protos.TraceConfig.DataSource.verify(message.dataSources[i]);\n                        if (error)\n                            return \"dataSources.\" + error;\n                    }\n                }\n                if (message.durationMs != null && message.hasOwnProperty(\"durationMs\"))\n                    if (!$util.isInteger(message.durationMs))\n                        return \"durationMs: integer expected\";\n                if (message.enableExtraGuardrails != null && message.hasOwnProperty(\"enableExtraGuardrails\"))\n                    if (typeof message.enableExtraGuardrails !== \"boolean\")\n                        return \"enableExtraGuardrails: boolean expected\";\n                if (message.lockdownMode != null && message.hasOwnProperty(\"lockdownMode\"))\n                    switch (message.lockdownMode) {\n                    default:\n                        return \"lockdownMode: enum value expected\";\n                    case 0:\n                    case 1:\n                    case 2:\n                        break;\n                    }\n                if (message.producers != null && message.hasOwnProperty(\"producers\")) {\n                    if (!Array.isArray(message.producers))\n                        return \"producers: array expected\";\n                    for (var i = 0; i < message.producers.length; ++i) {\n                        var error = $root.perfetto.protos.TraceConfig.ProducerConfig.verify(message.producers[i]);\n                        if (error)\n                            return \"producers.\" + error;\n                    }\n                }\n                if (message.statsdMetadata != null && message.hasOwnProperty(\"statsdMetadata\")) {\n                    var error = $root.perfetto.protos.TraceConfig.StatsdMetadata.verify(message.statsdMetadata);\n                    if (error)\n                        return \"statsdMetadata.\" + error;\n                }\n                if (message.writeIntoFile != null && message.hasOwnProperty(\"writeIntoFile\"))\n                    if (typeof message.writeIntoFile !== \"boolean\")\n                        return \"writeIntoFile: boolean expected\";\n                if (message.fileWritePeriodMs != null && message.hasOwnProperty(\"fileWritePeriodMs\"))\n                    if (!$util.isInteger(message.fileWritePeriodMs))\n                        return \"fileWritePeriodMs: integer expected\";\n                if (message.maxFileSizeBytes != null && message.hasOwnProperty(\"maxFileSizeBytes\"))\n                    if (!$util.isInteger(message.maxFileSizeBytes) && !(message.maxFileSizeBytes && $util.isInteger(message.maxFileSizeBytes.low) && $util.isInteger(message.maxFileSizeBytes.high)))\n                        return \"maxFileSizeBytes: integer|Long expected\";\n                if (message.guardrailOverrides != null && message.hasOwnProperty(\"guardrailOverrides\")) {\n                    var error = $root.perfetto.protos.TraceConfig.GuardrailOverrides.verify(message.guardrailOverrides);\n                    if (error)\n                        return \"guardrailOverrides.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a TraceConfig message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.TraceConfig\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.TraceConfig} TraceConfig\n             */\n            TraceConfig.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.TraceConfig)\n                    return object;\n                var message = new $root.perfetto.protos.TraceConfig();\n                if (object.buffers) {\n                    if (!Array.isArray(object.buffers))\n                        throw TypeError(\".perfetto.protos.TraceConfig.buffers: array expected\");\n                    message.buffers = [];\n                    for (var i = 0; i < object.buffers.length; ++i) {\n                        if (typeof object.buffers[i] !== \"object\")\n                            throw TypeError(\".perfetto.protos.TraceConfig.buffers: object expected\");\n                        message.buffers[i] = $root.perfetto.protos.TraceConfig.BufferConfig.fromObject(object.buffers[i]);\n                    }\n                }\n                if (object.dataSources) {\n                    if (!Array.isArray(object.dataSources))\n                        throw TypeError(\".perfetto.protos.TraceConfig.dataSources: array expected\");\n                    message.dataSources = [];\n                    for (var i = 0; i < object.dataSources.length; ++i) {\n                        if (typeof object.dataSources[i] !== \"object\")\n                            throw TypeError(\".perfetto.protos.TraceConfig.dataSources: object expected\");\n                        message.dataSources[i] = $root.perfetto.protos.TraceConfig.DataSource.fromObject(object.dataSources[i]);\n                    }\n                }\n                if (object.durationMs != null)\n                    message.durationMs = object.durationMs >>> 0;\n                if (object.enableExtraGuardrails != null)\n                    message.enableExtraGuardrails = Boolean(object.enableExtraGuardrails);\n                switch (object.lockdownMode) {\n                case \"LOCKDOWN_UNCHANGED\":\n                case 0:\n                    message.lockdownMode = 0;\n                    break;\n                case \"LOCKDOWN_CLEAR\":\n                case 1:\n                    message.lockdownMode = 1;\n                    break;\n                case \"LOCKDOWN_SET\":\n                case 2:\n                    message.lockdownMode = 2;\n                    break;\n                }\n                if (object.producers) {\n                    if (!Array.isArray(object.producers))\n                        throw TypeError(\".perfetto.protos.TraceConfig.producers: array expected\");\n                    message.producers = [];\n                    for (var i = 0; i < object.producers.length; ++i) {\n                        if (typeof object.producers[i] !== \"object\")\n                            throw TypeError(\".perfetto.protos.TraceConfig.producers: object expected\");\n                        message.producers[i] = $root.perfetto.protos.TraceConfig.ProducerConfig.fromObject(object.producers[i]);\n                    }\n                }\n                if (object.statsdMetadata != null) {\n                    if (typeof object.statsdMetadata !== \"object\")\n                        throw TypeError(\".perfetto.protos.TraceConfig.statsdMetadata: object expected\");\n                    message.statsdMetadata = $root.perfetto.protos.TraceConfig.StatsdMetadata.fromObject(object.statsdMetadata);\n                }\n                if (object.writeIntoFile != null)\n                    message.writeIntoFile = Boolean(object.writeIntoFile);\n                if (object.fileWritePeriodMs != null)\n                    message.fileWritePeriodMs = object.fileWritePeriodMs >>> 0;\n                if (object.maxFileSizeBytes != null)\n                    if ($util.Long)\n                        (message.maxFileSizeBytes = $util.Long.fromValue(object.maxFileSizeBytes)).unsigned = true;\n                    else if (typeof object.maxFileSizeBytes === \"string\")\n                        message.maxFileSizeBytes = parseInt(object.maxFileSizeBytes, 10);\n                    else if (typeof object.maxFileSizeBytes === \"number\")\n                        message.maxFileSizeBytes = object.maxFileSizeBytes;\n                    else if (typeof object.maxFileSizeBytes === \"object\")\n                        message.maxFileSizeBytes = new $util.LongBits(object.maxFileSizeBytes.low >>> 0, object.maxFileSizeBytes.high >>> 0).toNumber(true);\n                if (object.guardrailOverrides != null) {\n                    if (typeof object.guardrailOverrides !== \"object\")\n                        throw TypeError(\".perfetto.protos.TraceConfig.guardrailOverrides: object expected\");\n                    message.guardrailOverrides = $root.perfetto.protos.TraceConfig.GuardrailOverrides.fromObject(object.guardrailOverrides);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a TraceConfig message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.TraceConfig\n             * @static\n             * @param {perfetto.protos.TraceConfig} message TraceConfig\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            TraceConfig.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.buffers = [];\n                    object.dataSources = [];\n                    object.producers = [];\n                }\n                if (options.defaults) {\n                    object.durationMs = 0;\n                    object.enableExtraGuardrails = false;\n                    object.lockdownMode = options.enums === String ? \"LOCKDOWN_UNCHANGED\" : 0;\n                    object.statsdMetadata = null;\n                    object.writeIntoFile = false;\n                    object.fileWritePeriodMs = 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.maxFileSizeBytes = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.maxFileSizeBytes = options.longs === String ? \"0\" : 0;\n                    object.guardrailOverrides = null;\n                }\n                if (message.buffers && message.buffers.length) {\n                    object.buffers = [];\n                    for (var j = 0; j < message.buffers.length; ++j)\n                        object.buffers[j] = $root.perfetto.protos.TraceConfig.BufferConfig.toObject(message.buffers[j], options);\n                }\n                if (message.dataSources && message.dataSources.length) {\n                    object.dataSources = [];\n                    for (var j = 0; j < message.dataSources.length; ++j)\n                        object.dataSources[j] = $root.perfetto.protos.TraceConfig.DataSource.toObject(message.dataSources[j], options);\n                }\n                if (message.durationMs != null && message.hasOwnProperty(\"durationMs\"))\n                    object.durationMs = message.durationMs;\n                if (message.enableExtraGuardrails != null && message.hasOwnProperty(\"enableExtraGuardrails\"))\n                    object.enableExtraGuardrails = message.enableExtraGuardrails;\n                if (message.lockdownMode != null && message.hasOwnProperty(\"lockdownMode\"))\n                    object.lockdownMode = options.enums === String ? $root.perfetto.protos.TraceConfig.LockdownModeOperation[message.lockdownMode] : message.lockdownMode;\n                if (message.producers && message.producers.length) {\n                    object.producers = [];\n                    for (var j = 0; j < message.producers.length; ++j)\n                        object.producers[j] = $root.perfetto.protos.TraceConfig.ProducerConfig.toObject(message.producers[j], options);\n                }\n                if (message.statsdMetadata != null && message.hasOwnProperty(\"statsdMetadata\"))\n                    object.statsdMetadata = $root.perfetto.protos.TraceConfig.StatsdMetadata.toObject(message.statsdMetadata, options);\n                if (message.writeIntoFile != null && message.hasOwnProperty(\"writeIntoFile\"))\n                    object.writeIntoFile = message.writeIntoFile;\n                if (message.fileWritePeriodMs != null && message.hasOwnProperty(\"fileWritePeriodMs\"))\n                    object.fileWritePeriodMs = message.fileWritePeriodMs;\n                if (message.maxFileSizeBytes != null && message.hasOwnProperty(\"maxFileSizeBytes\"))\n                    if (typeof message.maxFileSizeBytes === \"number\")\n                        object.maxFileSizeBytes = options.longs === String ? String(message.maxFileSizeBytes) : message.maxFileSizeBytes;\n                    else\n                        object.maxFileSizeBytes = options.longs === String ? $util.Long.prototype.toString.call(message.maxFileSizeBytes) : options.longs === Number ? new $util.LongBits(message.maxFileSizeBytes.low >>> 0, message.maxFileSizeBytes.high >>> 0).toNumber(true) : message.maxFileSizeBytes;\n                if (message.guardrailOverrides != null && message.hasOwnProperty(\"guardrailOverrides\"))\n                    object.guardrailOverrides = $root.perfetto.protos.TraceConfig.GuardrailOverrides.toObject(message.guardrailOverrides, options);\n                return object;\n            };\n\n            /**\n             * Converts this TraceConfig to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.TraceConfig\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            TraceConfig.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            TraceConfig.BufferConfig = (function() {\n\n                /**\n                 * Properties of a BufferConfig.\n                 * @memberof perfetto.protos.TraceConfig\n                 * @interface IBufferConfig\n                 * @property {number|null} [sizeKb] BufferConfig sizeKb\n                 * @property {perfetto.protos.TraceConfig.BufferConfig.FillPolicy|null} [fillPolicy] BufferConfig fillPolicy\n                 */\n\n                /**\n                 * Constructs a new BufferConfig.\n                 * @memberof perfetto.protos.TraceConfig\n                 * @classdesc Represents a BufferConfig.\n                 * @implements IBufferConfig\n                 * @constructor\n                 * @param {perfetto.protos.TraceConfig.IBufferConfig=} [properties] Properties to set\n                 */\n                function BufferConfig(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * BufferConfig sizeKb.\n                 * @member {number} sizeKb\n                 * @memberof perfetto.protos.TraceConfig.BufferConfig\n                 * @instance\n                 */\n                BufferConfig.prototype.sizeKb = 0;\n\n                /**\n                 * BufferConfig fillPolicy.\n                 * @member {perfetto.protos.TraceConfig.BufferConfig.FillPolicy} fillPolicy\n                 * @memberof perfetto.protos.TraceConfig.BufferConfig\n                 * @instance\n                 */\n                BufferConfig.prototype.fillPolicy = 0;\n\n                /**\n                 * Creates a new BufferConfig instance using the specified properties.\n                 * @function create\n                 * @memberof perfetto.protos.TraceConfig.BufferConfig\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IBufferConfig=} [properties] Properties to set\n                 * @returns {perfetto.protos.TraceConfig.BufferConfig} BufferConfig instance\n                 */\n                BufferConfig.create = function create(properties) {\n                    return new BufferConfig(properties);\n                };\n\n                /**\n                 * Encodes the specified BufferConfig message. Does not implicitly {@link perfetto.protos.TraceConfig.BufferConfig.verify|verify} messages.\n                 * @function encode\n                 * @memberof perfetto.protos.TraceConfig.BufferConfig\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IBufferConfig} message BufferConfig message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                BufferConfig.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.sizeKb != null && message.hasOwnProperty(\"sizeKb\"))\n                        writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.sizeKb);\n                    if (message.fillPolicy != null && message.hasOwnProperty(\"fillPolicy\"))\n                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.fillPolicy);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified BufferConfig message, length delimited. Does not implicitly {@link perfetto.protos.TraceConfig.BufferConfig.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof perfetto.protos.TraceConfig.BufferConfig\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IBufferConfig} message BufferConfig message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                BufferConfig.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a BufferConfig message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof perfetto.protos.TraceConfig.BufferConfig\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {perfetto.protos.TraceConfig.BufferConfig} BufferConfig\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                BufferConfig.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.TraceConfig.BufferConfig();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.sizeKb = reader.uint32();\n                            break;\n                        case 4:\n                            message.fillPolicy = reader.int32();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a BufferConfig message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof perfetto.protos.TraceConfig.BufferConfig\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {perfetto.protos.TraceConfig.BufferConfig} BufferConfig\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                BufferConfig.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a BufferConfig message.\n                 * @function verify\n                 * @memberof perfetto.protos.TraceConfig.BufferConfig\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                BufferConfig.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.sizeKb != null && message.hasOwnProperty(\"sizeKb\"))\n                        if (!$util.isInteger(message.sizeKb))\n                            return \"sizeKb: integer expected\";\n                    if (message.fillPolicy != null && message.hasOwnProperty(\"fillPolicy\"))\n                        switch (message.fillPolicy) {\n                        default:\n                            return \"fillPolicy: enum value expected\";\n                        case 0:\n                        case 1:\n                            break;\n                        }\n                    return null;\n                };\n\n                /**\n                 * Creates a BufferConfig message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof perfetto.protos.TraceConfig.BufferConfig\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {perfetto.protos.TraceConfig.BufferConfig} BufferConfig\n                 */\n                BufferConfig.fromObject = function fromObject(object) {\n                    if (object instanceof $root.perfetto.protos.TraceConfig.BufferConfig)\n                        return object;\n                    var message = new $root.perfetto.protos.TraceConfig.BufferConfig();\n                    if (object.sizeKb != null)\n                        message.sizeKb = object.sizeKb >>> 0;\n                    switch (object.fillPolicy) {\n                    case \"UNSPECIFIED\":\n                    case 0:\n                        message.fillPolicy = 0;\n                        break;\n                    case \"RING_BUFFER\":\n                    case 1:\n                        message.fillPolicy = 1;\n                        break;\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a BufferConfig message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof perfetto.protos.TraceConfig.BufferConfig\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.BufferConfig} message BufferConfig\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                BufferConfig.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.defaults) {\n                        object.sizeKb = 0;\n                        object.fillPolicy = options.enums === String ? \"UNSPECIFIED\" : 0;\n                    }\n                    if (message.sizeKb != null && message.hasOwnProperty(\"sizeKb\"))\n                        object.sizeKb = message.sizeKb;\n                    if (message.fillPolicy != null && message.hasOwnProperty(\"fillPolicy\"))\n                        object.fillPolicy = options.enums === String ? $root.perfetto.protos.TraceConfig.BufferConfig.FillPolicy[message.fillPolicy] : message.fillPolicy;\n                    return object;\n                };\n\n                /**\n                 * Converts this BufferConfig to JSON.\n                 * @function toJSON\n                 * @memberof perfetto.protos.TraceConfig.BufferConfig\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                BufferConfig.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                /**\n                 * FillPolicy enum.\n                 * @name perfetto.protos.TraceConfig.BufferConfig.FillPolicy\n                 * @enum {string}\n                 * @property {number} UNSPECIFIED=0 UNSPECIFIED value\n                 * @property {number} RING_BUFFER=1 RING_BUFFER value\n                 */\n                BufferConfig.FillPolicy = (function() {\n                    var valuesById = {}, values = Object.create(valuesById);\n                    values[valuesById[0] = \"UNSPECIFIED\"] = 0;\n                    values[valuesById[1] = \"RING_BUFFER\"] = 1;\n                    return values;\n                })();\n\n                return BufferConfig;\n            })();\n\n            TraceConfig.DataSource = (function() {\n\n                /**\n                 * Properties of a DataSource.\n                 * @memberof perfetto.protos.TraceConfig\n                 * @interface IDataSource\n                 * @property {perfetto.protos.IDataSourceConfig|null} [config] DataSource config\n                 * @property {Array.<string>|null} [producerNameFilter] DataSource producerNameFilter\n                 */\n\n                /**\n                 * Constructs a new DataSource.\n                 * @memberof perfetto.protos.TraceConfig\n                 * @classdesc Represents a DataSource.\n                 * @implements IDataSource\n                 * @constructor\n                 * @param {perfetto.protos.TraceConfig.IDataSource=} [properties] Properties to set\n                 */\n                function DataSource(properties) {\n                    this.producerNameFilter = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * DataSource config.\n                 * @member {perfetto.protos.IDataSourceConfig|null|undefined} config\n                 * @memberof perfetto.protos.TraceConfig.DataSource\n                 * @instance\n                 */\n                DataSource.prototype.config = null;\n\n                /**\n                 * DataSource producerNameFilter.\n                 * @member {Array.<string>} producerNameFilter\n                 * @memberof perfetto.protos.TraceConfig.DataSource\n                 * @instance\n                 */\n                DataSource.prototype.producerNameFilter = $util.emptyArray;\n\n                /**\n                 * Creates a new DataSource instance using the specified properties.\n                 * @function create\n                 * @memberof perfetto.protos.TraceConfig.DataSource\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IDataSource=} [properties] Properties to set\n                 * @returns {perfetto.protos.TraceConfig.DataSource} DataSource instance\n                 */\n                DataSource.create = function create(properties) {\n                    return new DataSource(properties);\n                };\n\n                /**\n                 * Encodes the specified DataSource message. Does not implicitly {@link perfetto.protos.TraceConfig.DataSource.verify|verify} messages.\n                 * @function encode\n                 * @memberof perfetto.protos.TraceConfig.DataSource\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IDataSource} message DataSource message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                DataSource.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.config != null && message.hasOwnProperty(\"config\"))\n                        $root.perfetto.protos.DataSourceConfig.encode(message.config, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                    if (message.producerNameFilter != null && message.producerNameFilter.length)\n                        for (var i = 0; i < message.producerNameFilter.length; ++i)\n                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.producerNameFilter[i]);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified DataSource message, length delimited. Does not implicitly {@link perfetto.protos.TraceConfig.DataSource.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof perfetto.protos.TraceConfig.DataSource\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IDataSource} message DataSource message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                DataSource.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a DataSource message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof perfetto.protos.TraceConfig.DataSource\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {perfetto.protos.TraceConfig.DataSource} DataSource\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                DataSource.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.TraceConfig.DataSource();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.config = $root.perfetto.protos.DataSourceConfig.decode(reader, reader.uint32());\n                            break;\n                        case 2:\n                            if (!(message.producerNameFilter && message.producerNameFilter.length))\n                                message.producerNameFilter = [];\n                            message.producerNameFilter.push(reader.string());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a DataSource message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof perfetto.protos.TraceConfig.DataSource\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {perfetto.protos.TraceConfig.DataSource} DataSource\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                DataSource.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a DataSource message.\n                 * @function verify\n                 * @memberof perfetto.protos.TraceConfig.DataSource\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                DataSource.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.config != null && message.hasOwnProperty(\"config\")) {\n                        var error = $root.perfetto.protos.DataSourceConfig.verify(message.config);\n                        if (error)\n                            return \"config.\" + error;\n                    }\n                    if (message.producerNameFilter != null && message.hasOwnProperty(\"producerNameFilter\")) {\n                        if (!Array.isArray(message.producerNameFilter))\n                            return \"producerNameFilter: array expected\";\n                        for (var i = 0; i < message.producerNameFilter.length; ++i)\n                            if (!$util.isString(message.producerNameFilter[i]))\n                                return \"producerNameFilter: string[] expected\";\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates a DataSource message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof perfetto.protos.TraceConfig.DataSource\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {perfetto.protos.TraceConfig.DataSource} DataSource\n                 */\n                DataSource.fromObject = function fromObject(object) {\n                    if (object instanceof $root.perfetto.protos.TraceConfig.DataSource)\n                        return object;\n                    var message = new $root.perfetto.protos.TraceConfig.DataSource();\n                    if (object.config != null) {\n                        if (typeof object.config !== \"object\")\n                            throw TypeError(\".perfetto.protos.TraceConfig.DataSource.config: object expected\");\n                        message.config = $root.perfetto.protos.DataSourceConfig.fromObject(object.config);\n                    }\n                    if (object.producerNameFilter) {\n                        if (!Array.isArray(object.producerNameFilter))\n                            throw TypeError(\".perfetto.protos.TraceConfig.DataSource.producerNameFilter: array expected\");\n                        message.producerNameFilter = [];\n                        for (var i = 0; i < object.producerNameFilter.length; ++i)\n                            message.producerNameFilter[i] = String(object.producerNameFilter[i]);\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a DataSource message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof perfetto.protos.TraceConfig.DataSource\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.DataSource} message DataSource\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                DataSource.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.producerNameFilter = [];\n                    if (options.defaults)\n                        object.config = null;\n                    if (message.config != null && message.hasOwnProperty(\"config\"))\n                        object.config = $root.perfetto.protos.DataSourceConfig.toObject(message.config, options);\n                    if (message.producerNameFilter && message.producerNameFilter.length) {\n                        object.producerNameFilter = [];\n                        for (var j = 0; j < message.producerNameFilter.length; ++j)\n                            object.producerNameFilter[j] = message.producerNameFilter[j];\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this DataSource to JSON.\n                 * @function toJSON\n                 * @memberof perfetto.protos.TraceConfig.DataSource\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                DataSource.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return DataSource;\n            })();\n\n            /**\n             * LockdownModeOperation enum.\n             * @name perfetto.protos.TraceConfig.LockdownModeOperation\n             * @enum {string}\n             * @property {number} LOCKDOWN_UNCHANGED=0 LOCKDOWN_UNCHANGED value\n             * @property {number} LOCKDOWN_CLEAR=1 LOCKDOWN_CLEAR value\n             * @property {number} LOCKDOWN_SET=2 LOCKDOWN_SET value\n             */\n            TraceConfig.LockdownModeOperation = (function() {\n                var valuesById = {}, values = Object.create(valuesById);\n                values[valuesById[0] = \"LOCKDOWN_UNCHANGED\"] = 0;\n                values[valuesById[1] = \"LOCKDOWN_CLEAR\"] = 1;\n                values[valuesById[2] = \"LOCKDOWN_SET\"] = 2;\n                return values;\n            })();\n\n            TraceConfig.ProducerConfig = (function() {\n\n                /**\n                 * Properties of a ProducerConfig.\n                 * @memberof perfetto.protos.TraceConfig\n                 * @interface IProducerConfig\n                 * @property {string|null} [producerName] ProducerConfig producerName\n                 * @property {number|null} [shmSizeKb] ProducerConfig shmSizeKb\n                 * @property {number|null} [pageSizeKb] ProducerConfig pageSizeKb\n                 */\n\n                /**\n                 * Constructs a new ProducerConfig.\n                 * @memberof perfetto.protos.TraceConfig\n                 * @classdesc Represents a ProducerConfig.\n                 * @implements IProducerConfig\n                 * @constructor\n                 * @param {perfetto.protos.TraceConfig.IProducerConfig=} [properties] Properties to set\n                 */\n                function ProducerConfig(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * ProducerConfig producerName.\n                 * @member {string} producerName\n                 * @memberof perfetto.protos.TraceConfig.ProducerConfig\n                 * @instance\n                 */\n                ProducerConfig.prototype.producerName = \"\";\n\n                /**\n                 * ProducerConfig shmSizeKb.\n                 * @member {number} shmSizeKb\n                 * @memberof perfetto.protos.TraceConfig.ProducerConfig\n                 * @instance\n                 */\n                ProducerConfig.prototype.shmSizeKb = 0;\n\n                /**\n                 * ProducerConfig pageSizeKb.\n                 * @member {number} pageSizeKb\n                 * @memberof perfetto.protos.TraceConfig.ProducerConfig\n                 * @instance\n                 */\n                ProducerConfig.prototype.pageSizeKb = 0;\n\n                /**\n                 * Creates a new ProducerConfig instance using the specified properties.\n                 * @function create\n                 * @memberof perfetto.protos.TraceConfig.ProducerConfig\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IProducerConfig=} [properties] Properties to set\n                 * @returns {perfetto.protos.TraceConfig.ProducerConfig} ProducerConfig instance\n                 */\n                ProducerConfig.create = function create(properties) {\n                    return new ProducerConfig(properties);\n                };\n\n                /**\n                 * Encodes the specified ProducerConfig message. Does not implicitly {@link perfetto.protos.TraceConfig.ProducerConfig.verify|verify} messages.\n                 * @function encode\n                 * @memberof perfetto.protos.TraceConfig.ProducerConfig\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IProducerConfig} message ProducerConfig message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ProducerConfig.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.producerName);\n                    if (message.shmSizeKb != null && message.hasOwnProperty(\"shmSizeKb\"))\n                        writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.shmSizeKb);\n                    if (message.pageSizeKb != null && message.hasOwnProperty(\"pageSizeKb\"))\n                        writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.pageSizeKb);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified ProducerConfig message, length delimited. Does not implicitly {@link perfetto.protos.TraceConfig.ProducerConfig.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof perfetto.protos.TraceConfig.ProducerConfig\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IProducerConfig} message ProducerConfig message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ProducerConfig.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a ProducerConfig message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof perfetto.protos.TraceConfig.ProducerConfig\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {perfetto.protos.TraceConfig.ProducerConfig} ProducerConfig\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ProducerConfig.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.TraceConfig.ProducerConfig();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.producerName = reader.string();\n                            break;\n                        case 2:\n                            message.shmSizeKb = reader.uint32();\n                            break;\n                        case 3:\n                            message.pageSizeKb = reader.uint32();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a ProducerConfig message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof perfetto.protos.TraceConfig.ProducerConfig\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {perfetto.protos.TraceConfig.ProducerConfig} ProducerConfig\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ProducerConfig.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a ProducerConfig message.\n                 * @function verify\n                 * @memberof perfetto.protos.TraceConfig.ProducerConfig\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                ProducerConfig.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                        if (!$util.isString(message.producerName))\n                            return \"producerName: string expected\";\n                    if (message.shmSizeKb != null && message.hasOwnProperty(\"shmSizeKb\"))\n                        if (!$util.isInteger(message.shmSizeKb))\n                            return \"shmSizeKb: integer expected\";\n                    if (message.pageSizeKb != null && message.hasOwnProperty(\"pageSizeKb\"))\n                        if (!$util.isInteger(message.pageSizeKb))\n                            return \"pageSizeKb: integer expected\";\n                    return null;\n                };\n\n                /**\n                 * Creates a ProducerConfig message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof perfetto.protos.TraceConfig.ProducerConfig\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {perfetto.protos.TraceConfig.ProducerConfig} ProducerConfig\n                 */\n                ProducerConfig.fromObject = function fromObject(object) {\n                    if (object instanceof $root.perfetto.protos.TraceConfig.ProducerConfig)\n                        return object;\n                    var message = new $root.perfetto.protos.TraceConfig.ProducerConfig();\n                    if (object.producerName != null)\n                        message.producerName = String(object.producerName);\n                    if (object.shmSizeKb != null)\n                        message.shmSizeKb = object.shmSizeKb >>> 0;\n                    if (object.pageSizeKb != null)\n                        message.pageSizeKb = object.pageSizeKb >>> 0;\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a ProducerConfig message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof perfetto.protos.TraceConfig.ProducerConfig\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.ProducerConfig} message ProducerConfig\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                ProducerConfig.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.defaults) {\n                        object.producerName = \"\";\n                        object.shmSizeKb = 0;\n                        object.pageSizeKb = 0;\n                    }\n                    if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                        object.producerName = message.producerName;\n                    if (message.shmSizeKb != null && message.hasOwnProperty(\"shmSizeKb\"))\n                        object.shmSizeKb = message.shmSizeKb;\n                    if (message.pageSizeKb != null && message.hasOwnProperty(\"pageSizeKb\"))\n                        object.pageSizeKb = message.pageSizeKb;\n                    return object;\n                };\n\n                /**\n                 * Converts this ProducerConfig to JSON.\n                 * @function toJSON\n                 * @memberof perfetto.protos.TraceConfig.ProducerConfig\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                ProducerConfig.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return ProducerConfig;\n            })();\n\n            TraceConfig.StatsdMetadata = (function() {\n\n                /**\n                 * Properties of a StatsdMetadata.\n                 * @memberof perfetto.protos.TraceConfig\n                 * @interface IStatsdMetadata\n                 * @property {number|Long|null} [triggeringAlertId] StatsdMetadata triggeringAlertId\n                 * @property {number|null} [triggeringConfigUid] StatsdMetadata triggeringConfigUid\n                 * @property {number|Long|null} [triggeringConfigId] StatsdMetadata triggeringConfigId\n                 */\n\n                /**\n                 * Constructs a new StatsdMetadata.\n                 * @memberof perfetto.protos.TraceConfig\n                 * @classdesc Represents a StatsdMetadata.\n                 * @implements IStatsdMetadata\n                 * @constructor\n                 * @param {perfetto.protos.TraceConfig.IStatsdMetadata=} [properties] Properties to set\n                 */\n                function StatsdMetadata(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * StatsdMetadata triggeringAlertId.\n                 * @member {number|Long} triggeringAlertId\n                 * @memberof perfetto.protos.TraceConfig.StatsdMetadata\n                 * @instance\n                 */\n                StatsdMetadata.prototype.triggeringAlertId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n                /**\n                 * StatsdMetadata triggeringConfigUid.\n                 * @member {number} triggeringConfigUid\n                 * @memberof perfetto.protos.TraceConfig.StatsdMetadata\n                 * @instance\n                 */\n                StatsdMetadata.prototype.triggeringConfigUid = 0;\n\n                /**\n                 * StatsdMetadata triggeringConfigId.\n                 * @member {number|Long} triggeringConfigId\n                 * @memberof perfetto.protos.TraceConfig.StatsdMetadata\n                 * @instance\n                 */\n                StatsdMetadata.prototype.triggeringConfigId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n                /**\n                 * Creates a new StatsdMetadata instance using the specified properties.\n                 * @function create\n                 * @memberof perfetto.protos.TraceConfig.StatsdMetadata\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IStatsdMetadata=} [properties] Properties to set\n                 * @returns {perfetto.protos.TraceConfig.StatsdMetadata} StatsdMetadata instance\n                 */\n                StatsdMetadata.create = function create(properties) {\n                    return new StatsdMetadata(properties);\n                };\n\n                /**\n                 * Encodes the specified StatsdMetadata message. Does not implicitly {@link perfetto.protos.TraceConfig.StatsdMetadata.verify|verify} messages.\n                 * @function encode\n                 * @memberof perfetto.protos.TraceConfig.StatsdMetadata\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IStatsdMetadata} message StatsdMetadata message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                StatsdMetadata.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.triggeringAlertId != null && message.hasOwnProperty(\"triggeringAlertId\"))\n                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.triggeringAlertId);\n                    if (message.triggeringConfigUid != null && message.hasOwnProperty(\"triggeringConfigUid\"))\n                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.triggeringConfigUid);\n                    if (message.triggeringConfigId != null && message.hasOwnProperty(\"triggeringConfigId\"))\n                        writer.uint32(/* id 3, wireType 0 =*/24).int64(message.triggeringConfigId);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified StatsdMetadata message, length delimited. Does not implicitly {@link perfetto.protos.TraceConfig.StatsdMetadata.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof perfetto.protos.TraceConfig.StatsdMetadata\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IStatsdMetadata} message StatsdMetadata message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                StatsdMetadata.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a StatsdMetadata message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof perfetto.protos.TraceConfig.StatsdMetadata\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {perfetto.protos.TraceConfig.StatsdMetadata} StatsdMetadata\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                StatsdMetadata.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.TraceConfig.StatsdMetadata();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.triggeringAlertId = reader.int64();\n                            break;\n                        case 2:\n                            message.triggeringConfigUid = reader.int32();\n                            break;\n                        case 3:\n                            message.triggeringConfigId = reader.int64();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a StatsdMetadata message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof perfetto.protos.TraceConfig.StatsdMetadata\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {perfetto.protos.TraceConfig.StatsdMetadata} StatsdMetadata\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                StatsdMetadata.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a StatsdMetadata message.\n                 * @function verify\n                 * @memberof perfetto.protos.TraceConfig.StatsdMetadata\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                StatsdMetadata.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.triggeringAlertId != null && message.hasOwnProperty(\"triggeringAlertId\"))\n                        if (!$util.isInteger(message.triggeringAlertId) && !(message.triggeringAlertId && $util.isInteger(message.triggeringAlertId.low) && $util.isInteger(message.triggeringAlertId.high)))\n                            return \"triggeringAlertId: integer|Long expected\";\n                    if (message.triggeringConfigUid != null && message.hasOwnProperty(\"triggeringConfigUid\"))\n                        if (!$util.isInteger(message.triggeringConfigUid))\n                            return \"triggeringConfigUid: integer expected\";\n                    if (message.triggeringConfigId != null && message.hasOwnProperty(\"triggeringConfigId\"))\n                        if (!$util.isInteger(message.triggeringConfigId) && !(message.triggeringConfigId && $util.isInteger(message.triggeringConfigId.low) && $util.isInteger(message.triggeringConfigId.high)))\n                            return \"triggeringConfigId: integer|Long expected\";\n                    return null;\n                };\n\n                /**\n                 * Creates a StatsdMetadata message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof perfetto.protos.TraceConfig.StatsdMetadata\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {perfetto.protos.TraceConfig.StatsdMetadata} StatsdMetadata\n                 */\n                StatsdMetadata.fromObject = function fromObject(object) {\n                    if (object instanceof $root.perfetto.protos.TraceConfig.StatsdMetadata)\n                        return object;\n                    var message = new $root.perfetto.protos.TraceConfig.StatsdMetadata();\n                    if (object.triggeringAlertId != null)\n                        if ($util.Long)\n                            (message.triggeringAlertId = $util.Long.fromValue(object.triggeringAlertId)).unsigned = false;\n                        else if (typeof object.triggeringAlertId === \"string\")\n                            message.triggeringAlertId = parseInt(object.triggeringAlertId, 10);\n                        else if (typeof object.triggeringAlertId === \"number\")\n                            message.triggeringAlertId = object.triggeringAlertId;\n                        else if (typeof object.triggeringAlertId === \"object\")\n                            message.triggeringAlertId = new $util.LongBits(object.triggeringAlertId.low >>> 0, object.triggeringAlertId.high >>> 0).toNumber();\n                    if (object.triggeringConfigUid != null)\n                        message.triggeringConfigUid = object.triggeringConfigUid | 0;\n                    if (object.triggeringConfigId != null)\n                        if ($util.Long)\n                            (message.triggeringConfigId = $util.Long.fromValue(object.triggeringConfigId)).unsigned = false;\n                        else if (typeof object.triggeringConfigId === \"string\")\n                            message.triggeringConfigId = parseInt(object.triggeringConfigId, 10);\n                        else if (typeof object.triggeringConfigId === \"number\")\n                            message.triggeringConfigId = object.triggeringConfigId;\n                        else if (typeof object.triggeringConfigId === \"object\")\n                            message.triggeringConfigId = new $util.LongBits(object.triggeringConfigId.low >>> 0, object.triggeringConfigId.high >>> 0).toNumber();\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a StatsdMetadata message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof perfetto.protos.TraceConfig.StatsdMetadata\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.StatsdMetadata} message StatsdMetadata\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                StatsdMetadata.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.defaults) {\n                        if ($util.Long) {\n                            var long = new $util.Long(0, 0, false);\n                            object.triggeringAlertId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                        } else\n                            object.triggeringAlertId = options.longs === String ? \"0\" : 0;\n                        object.triggeringConfigUid = 0;\n                        if ($util.Long) {\n                            var long = new $util.Long(0, 0, false);\n                            object.triggeringConfigId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                        } else\n                            object.triggeringConfigId = options.longs === String ? \"0\" : 0;\n                    }\n                    if (message.triggeringAlertId != null && message.hasOwnProperty(\"triggeringAlertId\"))\n                        if (typeof message.triggeringAlertId === \"number\")\n                            object.triggeringAlertId = options.longs === String ? String(message.triggeringAlertId) : message.triggeringAlertId;\n                        else\n                            object.triggeringAlertId = options.longs === String ? $util.Long.prototype.toString.call(message.triggeringAlertId) : options.longs === Number ? new $util.LongBits(message.triggeringAlertId.low >>> 0, message.triggeringAlertId.high >>> 0).toNumber() : message.triggeringAlertId;\n                    if (message.triggeringConfigUid != null && message.hasOwnProperty(\"triggeringConfigUid\"))\n                        object.triggeringConfigUid = message.triggeringConfigUid;\n                    if (message.triggeringConfigId != null && message.hasOwnProperty(\"triggeringConfigId\"))\n                        if (typeof message.triggeringConfigId === \"number\")\n                            object.triggeringConfigId = options.longs === String ? String(message.triggeringConfigId) : message.triggeringConfigId;\n                        else\n                            object.triggeringConfigId = options.longs === String ? $util.Long.prototype.toString.call(message.triggeringConfigId) : options.longs === Number ? new $util.LongBits(message.triggeringConfigId.low >>> 0, message.triggeringConfigId.high >>> 0).toNumber() : message.triggeringConfigId;\n                    return object;\n                };\n\n                /**\n                 * Converts this StatsdMetadata to JSON.\n                 * @function toJSON\n                 * @memberof perfetto.protos.TraceConfig.StatsdMetadata\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                StatsdMetadata.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return StatsdMetadata;\n            })();\n\n            TraceConfig.GuardrailOverrides = (function() {\n\n                /**\n                 * Properties of a GuardrailOverrides.\n                 * @memberof perfetto.protos.TraceConfig\n                 * @interface IGuardrailOverrides\n                 * @property {number|Long|null} [maxUploadPerDayBytes] GuardrailOverrides maxUploadPerDayBytes\n                 */\n\n                /**\n                 * Constructs a new GuardrailOverrides.\n                 * @memberof perfetto.protos.TraceConfig\n                 * @classdesc Represents a GuardrailOverrides.\n                 * @implements IGuardrailOverrides\n                 * @constructor\n                 * @param {perfetto.protos.TraceConfig.IGuardrailOverrides=} [properties] Properties to set\n                 */\n                function GuardrailOverrides(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * GuardrailOverrides maxUploadPerDayBytes.\n                 * @member {number|Long} maxUploadPerDayBytes\n                 * @memberof perfetto.protos.TraceConfig.GuardrailOverrides\n                 * @instance\n                 */\n                GuardrailOverrides.prototype.maxUploadPerDayBytes = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n                /**\n                 * Creates a new GuardrailOverrides instance using the specified properties.\n                 * @function create\n                 * @memberof perfetto.protos.TraceConfig.GuardrailOverrides\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IGuardrailOverrides=} [properties] Properties to set\n                 * @returns {perfetto.protos.TraceConfig.GuardrailOverrides} GuardrailOverrides instance\n                 */\n                GuardrailOverrides.create = function create(properties) {\n                    return new GuardrailOverrides(properties);\n                };\n\n                /**\n                 * Encodes the specified GuardrailOverrides message. Does not implicitly {@link perfetto.protos.TraceConfig.GuardrailOverrides.verify|verify} messages.\n                 * @function encode\n                 * @memberof perfetto.protos.TraceConfig.GuardrailOverrides\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IGuardrailOverrides} message GuardrailOverrides message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                GuardrailOverrides.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.maxUploadPerDayBytes != null && message.hasOwnProperty(\"maxUploadPerDayBytes\"))\n                        writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.maxUploadPerDayBytes);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified GuardrailOverrides message, length delimited. Does not implicitly {@link perfetto.protos.TraceConfig.GuardrailOverrides.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof perfetto.protos.TraceConfig.GuardrailOverrides\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IGuardrailOverrides} message GuardrailOverrides message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                GuardrailOverrides.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a GuardrailOverrides message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof perfetto.protos.TraceConfig.GuardrailOverrides\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {perfetto.protos.TraceConfig.GuardrailOverrides} GuardrailOverrides\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                GuardrailOverrides.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.TraceConfig.GuardrailOverrides();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.maxUploadPerDayBytes = reader.uint64();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a GuardrailOverrides message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof perfetto.protos.TraceConfig.GuardrailOverrides\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {perfetto.protos.TraceConfig.GuardrailOverrides} GuardrailOverrides\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                GuardrailOverrides.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a GuardrailOverrides message.\n                 * @function verify\n                 * @memberof perfetto.protos.TraceConfig.GuardrailOverrides\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                GuardrailOverrides.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.maxUploadPerDayBytes != null && message.hasOwnProperty(\"maxUploadPerDayBytes\"))\n                        if (!$util.isInteger(message.maxUploadPerDayBytes) && !(message.maxUploadPerDayBytes && $util.isInteger(message.maxUploadPerDayBytes.low) && $util.isInteger(message.maxUploadPerDayBytes.high)))\n                            return \"maxUploadPerDayBytes: integer|Long expected\";\n                    return null;\n                };\n\n                /**\n                 * Creates a GuardrailOverrides message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof perfetto.protos.TraceConfig.GuardrailOverrides\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {perfetto.protos.TraceConfig.GuardrailOverrides} GuardrailOverrides\n                 */\n                GuardrailOverrides.fromObject = function fromObject(object) {\n                    if (object instanceof $root.perfetto.protos.TraceConfig.GuardrailOverrides)\n                        return object;\n                    var message = new $root.perfetto.protos.TraceConfig.GuardrailOverrides();\n                    if (object.maxUploadPerDayBytes != null)\n                        if ($util.Long)\n                            (message.maxUploadPerDayBytes = $util.Long.fromValue(object.maxUploadPerDayBytes)).unsigned = true;\n                        else if (typeof object.maxUploadPerDayBytes === \"string\")\n                            message.maxUploadPerDayBytes = parseInt(object.maxUploadPerDayBytes, 10);\n                        else if (typeof object.maxUploadPerDayBytes === \"number\")\n                            message.maxUploadPerDayBytes = object.maxUploadPerDayBytes;\n                        else if (typeof object.maxUploadPerDayBytes === \"object\")\n                            message.maxUploadPerDayBytes = new $util.LongBits(object.maxUploadPerDayBytes.low >>> 0, object.maxUploadPerDayBytes.high >>> 0).toNumber(true);\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a GuardrailOverrides message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof perfetto.protos.TraceConfig.GuardrailOverrides\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.GuardrailOverrides} message GuardrailOverrides\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                GuardrailOverrides.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.defaults)\n                        if ($util.Long) {\n                            var long = new $util.Long(0, 0, true);\n                            object.maxUploadPerDayBytes = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                        } else\n                            object.maxUploadPerDayBytes = options.longs === String ? \"0\" : 0;\n                    if (message.maxUploadPerDayBytes != null && message.hasOwnProperty(\"maxUploadPerDayBytes\"))\n                        if (typeof message.maxUploadPerDayBytes === \"number\")\n                            object.maxUploadPerDayBytes = options.longs === String ? String(message.maxUploadPerDayBytes) : message.maxUploadPerDayBytes;\n                        else\n                            object.maxUploadPerDayBytes = options.longs === String ? $util.Long.prototype.toString.call(message.maxUploadPerDayBytes) : options.longs === Number ? new $util.LongBits(message.maxUploadPerDayBytes.low >>> 0, message.maxUploadPerDayBytes.high >>> 0).toNumber(true) : message.maxUploadPerDayBytes;\n                    return object;\n                };\n\n                /**\n                 * Converts this GuardrailOverrides to JSON.\n                 * @function toJSON\n                 * @memberof perfetto.protos.TraceConfig.GuardrailOverrides\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                GuardrailOverrides.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return GuardrailOverrides;\n            })();\n\n            return TraceConfig;\n        })();\n\n        return protos;\n    })();\n\n    return perfetto;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\r\n\r\n\"use strict\";\r\nmodule.exports = require(\"./src/index-minimal\");\r\n","\"use strict\";\r\nvar protobuf = exports;\r\n\r\n/**\r\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\r\n * @name build\r\n * @type {string}\r\n * @const\r\n */\r\nprotobuf.build = \"minimal\";\r\n\r\n// Serialization\r\nprotobuf.Writer       = require(\"./writer\");\r\nprotobuf.BufferWriter = require(\"./writer_buffer\");\r\nprotobuf.Reader       = require(\"./reader\");\r\nprotobuf.BufferReader = require(\"./reader_buffer\");\r\n\r\n// Utility\r\nprotobuf.util         = require(\"./util/minimal\");\r\nprotobuf.rpc          = require(\"./rpc\");\r\nprotobuf.roots        = require(\"./roots\");\r\nprotobuf.configure    = configure;\r\n\r\n/* istanbul ignore next */\r\n/**\r\n * Reconfigures the library according to the environment.\r\n * @returns {undefined}\r\n */\r\nfunction configure() {\r\n    protobuf.Reader._configure(protobuf.BufferReader);\r\n    protobuf.util._configure();\r\n}\r\n\r\n// Configure serialization\r\nprotobuf.Writer._configure(protobuf.BufferWriter);\r\nconfigure();\r\n","\"use strict\";\r\nmodule.exports = {};\r\n\r\n/**\r\n * Named roots.\r\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\r\n * Can also be used manually to make roots available accross modules.\r\n * @name roots\r\n * @type {Object.<string,Root>}\r\n * @example\r\n * // pbjs -r myroot -o compiled.js ...\r\n *\r\n * // in another module:\r\n * require(\"./compiled.js\");\r\n *\r\n * // in any subsequent module:\r\n * var root = protobuf.roots[\"myroot\"];\r\n */\r\n","\"use strict\";\r\n\r\n/**\r\n * Streaming RPC helpers.\r\n * @namespace\r\n */\r\nvar rpc = exports;\r\n\r\n/**\r\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\r\n * @typedef RPCImpl\r\n * @type {function}\r\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\r\n * @param {Uint8Array} requestData Request data\r\n * @param {RPCImplCallback} callback Callback function\r\n * @returns {undefined}\r\n * @example\r\n * function rpcImpl(method, requestData, callback) {\r\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\r\n *         throw Error(\"no such method\");\r\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\r\n *         callback(err, responseData);\r\n *     });\r\n * }\r\n */\r\n\r\n/**\r\n * Node-style callback as used by {@link RPCImpl}.\r\n * @typedef RPCImplCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\nrpc.Service = require(\"./rpc/service\");\r\n","\"use strict\";\r\nmodule.exports = Service;\r\n\r\nvar util = require(\"../util/minimal\");\r\n\r\n// Extends EventEmitter\r\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\r\n\r\n/**\r\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\r\n *\r\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\r\n * @typedef rpc.ServiceMethodCallback\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {TRes} [response] Response message\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\r\n * @typedef rpc.ServiceMethod\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\r\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\r\n */\r\n\r\n/**\r\n * Constructs a new RPC service instance.\r\n * @classdesc An RPC service as returned by {@link Service#create}.\r\n * @exports rpc.Service\r\n * @extends util.EventEmitter\r\n * @constructor\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n */\r\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\r\n\r\n    if (typeof rpcImpl !== \"function\")\r\n        throw TypeError(\"rpcImpl must be a function\");\r\n\r\n    util.EventEmitter.call(this);\r\n\r\n    /**\r\n     * RPC implementation. Becomes `null` once the service is ended.\r\n     * @type {RPCImpl|null}\r\n     */\r\n    this.rpcImpl = rpcImpl;\r\n\r\n    /**\r\n     * Whether requests are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.requestDelimited = Boolean(requestDelimited);\r\n\r\n    /**\r\n     * Whether responses are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.responseDelimited = Boolean(responseDelimited);\r\n}\r\n\r\n/**\r\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\r\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\r\n * @param {Constructor<TReq>} requestCtor Request constructor\r\n * @param {Constructor<TRes>} responseCtor Response constructor\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\r\n * @returns {undefined}\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n */\r\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\r\n\r\n    if (!request)\r\n        throw TypeError(\"request must be specified\");\r\n\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\r\n\r\n    if (!self.rpcImpl) {\r\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\r\n        return undefined;\r\n    }\r\n\r\n    try {\r\n        return self.rpcImpl(\r\n            method,\r\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\r\n            function rpcCallback(err, response) {\r\n\r\n                if (err) {\r\n                    self.emit(\"error\", err, method);\r\n                    return callback(err);\r\n                }\r\n\r\n                if (response === null) {\r\n                    self.end(/* endedByRPC */ true);\r\n                    return undefined;\r\n                }\r\n\r\n                if (!(response instanceof responseCtor)) {\r\n                    try {\r\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\r\n                    } catch (err) {\r\n                        self.emit(\"error\", err, method);\r\n                        return callback(err);\r\n                    }\r\n                }\r\n\r\n                self.emit(\"data\", response, method);\r\n                return callback(null, response);\r\n            }\r\n        );\r\n    } catch (err) {\r\n        self.emit(\"error\", err, method);\r\n        setTimeout(function() { callback(err); }, 0);\r\n        return undefined;\r\n    }\r\n};\r\n\r\n/**\r\n * Ends this service and emits the `end` event.\r\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\r\n * @returns {rpc.Service} `this`\r\n */\r\nService.prototype.end = function end(endedByRPC) {\r\n    if (this.rpcImpl) {\r\n        if (!endedByRPC) // signal end to rpcImpl\r\n            this.rpcImpl(null, null, null);\r\n        this.rpcImpl = null;\r\n        this.emit(\"end\").off();\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\nmodule.exports = BufferReader;\r\n\r\n// extends Reader\r\nvar Reader = require(\"./reader\");\r\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\n/**\r\n * Constructs a new buffer reader instance.\r\n * @classdesc Wire format reader using node buffers.\r\n * @extends Reader\r\n * @constructor\r\n * @param {Buffer} buffer Buffer to read from\r\n */\r\nfunction BufferReader(buffer) {\r\n    Reader.call(this, buffer);\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @name BufferReader#buf\r\n     * @type {Buffer}\r\n     */\r\n}\r\n\r\n/* istanbul ignore else */\r\nif (util.Buffer)\r\n    BufferReader.prototype._slice = util.Buffer.prototype.slice;\r\n\r\n/**\r\n * @override\r\n */\r\nBufferReader.prototype.string = function read_string_buffer() {\r\n    var len = this.uint32(); // modifies pos\r\n    return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @name BufferReader#bytes\r\n * @function\r\n * @returns {Buffer} Value read\r\n */\r\n","\"use strict\";\r\nmodule.exports = Reader;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferReader; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    utf8      = util.utf8;\r\n\r\n/* istanbul ignore next */\r\nfunction indexOutOfRange(reader, writeLength) {\r\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\r\n}\r\n\r\n/**\r\n * Constructs a new reader instance using the specified buffer.\r\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n * @param {Uint8Array} buffer Buffer to read from\r\n */\r\nfunction Reader(buffer) {\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @type {Uint8Array}\r\n     */\r\n    this.buf = buffer;\r\n\r\n    /**\r\n     * Read buffer position.\r\n     * @type {number}\r\n     */\r\n    this.pos = 0;\r\n\r\n    /**\r\n     * Read buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = buffer.length;\r\n}\r\n\r\nvar create_array = typeof Uint8Array !== \"undefined\"\r\n    ? function create_typed_array(buffer) {\r\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array(buffer) {\r\n        if (Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    };\r\n\r\n/**\r\n * Creates a new reader using the specified buffer.\r\n * @function\r\n * @param {Uint8Array|Buffer} buffer Buffer to read from\r\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\r\n * @throws {Error} If `buffer` is not a valid buffer\r\n */\r\nReader.create = util.Buffer\r\n    ? function create_buffer_setup(buffer) {\r\n        return (Reader.create = function create_buffer(buffer) {\r\n            return util.Buffer.isBuffer(buffer)\r\n                ? new BufferReader(buffer)\r\n                /* istanbul ignore next */\r\n                : create_array(buffer);\r\n        })(buffer);\r\n    }\r\n    /* istanbul ignore next */\r\n    : create_array;\r\n\r\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\r\n\r\n/**\r\n * Reads a varint as an unsigned 32 bit value.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.uint32 = (function read_uint32_setup() {\r\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\r\n    return function read_uint32() {\r\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n\r\n        /* istanbul ignore if */\r\n        if ((this.pos += 5) > this.len) {\r\n            this.pos = this.len;\r\n            throw indexOutOfRange(this, 10);\r\n        }\r\n        return value;\r\n    };\r\n})();\r\n\r\n/**\r\n * Reads a varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.int32 = function read_int32() {\r\n    return this.uint32() | 0;\r\n};\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sint32 = function read_sint32() {\r\n    var value = this.uint32();\r\n    return value >>> 1 ^ -(value & 1) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readLongVarint() {\r\n    // tends to deopt with local vars for octet etc.\r\n    var bits = new LongBits(0, 0);\r\n    var i = 0;\r\n    if (this.len - this.pos > 4) { // fast route (lo)\r\n        for (; i < 4; ++i) {\r\n            // 1st..4th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 5th\r\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\r\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\r\n        if (this.buf[this.pos++] < 128)\r\n            return bits;\r\n        i = 0;\r\n    } else {\r\n        for (; i < 3; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 1st..3th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 4th\r\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\r\n        return bits;\r\n    }\r\n    if (this.len - this.pos > 4) { // fast route (hi)\r\n        for (; i < 5; ++i) {\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    } else {\r\n        for (; i < 5; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    }\r\n    /* istanbul ignore next */\r\n    throw Error(\"invalid varint encoding\");\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads a varint as a signed 64 bit value.\r\n * @name Reader#int64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as an unsigned 64 bit value.\r\n * @name Reader#uint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 64 bit value.\r\n * @name Reader#sint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as a boolean.\r\n * @returns {boolean} Value read\r\n */\r\nReader.prototype.bool = function read_bool() {\r\n    return this.uint32() !== 0;\r\n};\r\n\r\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\r\n    return (buf[end - 4]\r\n          | buf[end - 3] << 8\r\n          | buf[end - 2] << 16\r\n          | buf[end - 1] << 24) >>> 0;\r\n}\r\n\r\n/**\r\n * Reads fixed 32 bits as an unsigned 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.fixed32 = function read_fixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4);\r\n};\r\n\r\n/**\r\n * Reads fixed 32 bits as a signed 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sfixed32 = function read_sfixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readFixed64(/* this: Reader */) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 8);\r\n\r\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads fixed 64 bits.\r\n * @name Reader#fixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads zig-zag encoded fixed 64 bits.\r\n * @name Reader#sfixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a float (32 bit) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.float = function read_float() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readFloatLE(this.buf, this.pos);\r\n    this.pos += 4;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a double (64 bit float) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.double = function read_double() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readDoubleLE(this.buf, this.pos);\r\n    this.pos += 8;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @returns {Uint8Array} Value read\r\n */\r\nReader.prototype.bytes = function read_bytes() {\r\n    var length = this.uint32(),\r\n        start  = this.pos,\r\n        end    = this.pos + length;\r\n\r\n    /* istanbul ignore if */\r\n    if (end > this.len)\r\n        throw indexOutOfRange(this, length);\r\n\r\n    this.pos += length;\r\n    if (Array.isArray(this.buf)) // plain array\r\n        return this.buf.slice(start, end);\r\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\r\n        ? new this.buf.constructor(0)\r\n        : this._slice.call(this.buf, start, end);\r\n};\r\n\r\n/**\r\n * Reads a string preceeded by its byte length as a varint.\r\n * @returns {string} Value read\r\n */\r\nReader.prototype.string = function read_string() {\r\n    var bytes = this.bytes();\r\n    return utf8.read(bytes, 0, bytes.length);\r\n};\r\n\r\n/**\r\n * Skips the specified number of bytes if specified, otherwise skips a varint.\r\n * @param {number} [length] Length if known, otherwise a varint is assumed\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skip = function skip(length) {\r\n    if (typeof length === \"number\") {\r\n        /* istanbul ignore if */\r\n        if (this.pos + length > this.len)\r\n            throw indexOutOfRange(this, length);\r\n        this.pos += length;\r\n    } else {\r\n        do {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n        } while (this.buf[this.pos++] & 128);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Skips the next element of the specified wire type.\r\n * @param {number} wireType Wire type received\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skipType = function(wireType) {\r\n    switch (wireType) {\r\n        case 0:\r\n            this.skip();\r\n            break;\r\n        case 1:\r\n            this.skip(8);\r\n            break;\r\n        case 2:\r\n            this.skip(this.uint32());\r\n            break;\r\n        case 3:\r\n            do { // eslint-disable-line no-constant-condition\r\n                if ((wireType = this.uint32() & 7) === 4)\r\n                    break;\r\n                this.skipType(wireType);\r\n            } while (true);\r\n            break;\r\n        case 5:\r\n            this.skip(4);\r\n            break;\r\n\r\n        /* istanbul ignore next */\r\n        default:\r\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\r\n    }\r\n    return this;\r\n};\r\n\r\nReader._configure = function(BufferReader_) {\r\n    BufferReader = BufferReader_;\r\n\r\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\r\n    util.merge(Reader.prototype, {\r\n\r\n        int64: function read_int64() {\r\n            return readLongVarint.call(this)[fn](false);\r\n        },\r\n\r\n        uint64: function read_uint64() {\r\n            return readLongVarint.call(this)[fn](true);\r\n        },\r\n\r\n        sint64: function read_sint64() {\r\n            return readLongVarint.call(this).zzDecode()[fn](false);\r\n        },\r\n\r\n        fixed64: function read_fixed64() {\r\n            return readFixed64.call(this)[fn](true);\r\n        },\r\n\r\n        sfixed64: function read_sfixed64() {\r\n            return readFixed64.call(this)[fn](false);\r\n        }\r\n\r\n    });\r\n};\r\n","\"use strict\";\r\nmodule.exports = BufferWriter;\r\n\r\n// extends Writer\r\nvar Writer = require(\"./writer\");\r\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\nvar Buffer = util.Buffer;\r\n\r\n/**\r\n * Constructs a new buffer writer instance.\r\n * @classdesc Wire format writer using node buffers.\r\n * @extends Writer\r\n * @constructor\r\n */\r\nfunction BufferWriter() {\r\n    Writer.call(this);\r\n}\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Buffer} Buffer\r\n */\r\nBufferWriter.alloc = function alloc_buffer(size) {\r\n    return (BufferWriter.alloc = util._Buffer_allocUnsafe)(size);\r\n};\r\n\r\nvar writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && Buffer.prototype.set.name === \"set\"\r\n    ? function writeBytesBuffer_set(val, buf, pos) {\r\n        buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\r\n                           // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytesBuffer_copy(val, buf, pos) {\r\n        if (val.copy) // Buffer values\r\n            val.copy(buf, pos, 0, val.length);\r\n        else for (var i = 0; i < val.length;) // plain array values\r\n            buf[pos++] = val[i++];\r\n    };\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\r\n    if (util.isString(value))\r\n        value = util._Buffer_from(value, \"base64\");\r\n    var len = value.length >>> 0;\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeBytesBuffer, len, value);\r\n    return this;\r\n};\r\n\r\nfunction writeStringBuffer(val, buf, pos) {\r\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\r\n        util.utf8.write(val, buf, pos);\r\n    else\r\n        buf.utf8Write(val, pos);\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.string = function write_string_buffer(value) {\r\n    var len = Buffer.byteLength(value);\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeStringBuffer, len, value);\r\n    return this;\r\n};\r\n\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @name BufferWriter#finish\r\n * @function\r\n * @returns {Buffer} Finished buffer\r\n */\r\n","\"use strict\";\r\nmodule.exports = Writer;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferWriter; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    base64    = util.base64,\r\n    utf8      = util.utf8;\r\n\r\n/**\r\n * Constructs a new writer operation instance.\r\n * @classdesc Scheduled writer operation.\r\n * @constructor\r\n * @param {function(*, Uint8Array, number)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {*} val Value to write\r\n * @ignore\r\n */\r\nfunction Op(fn, len, val) {\r\n\r\n    /**\r\n     * Function to call.\r\n     * @type {function(Uint8Array, number, *)}\r\n     */\r\n    this.fn = fn;\r\n\r\n    /**\r\n     * Value byte length.\r\n     * @type {number}\r\n     */\r\n    this.len = len;\r\n\r\n    /**\r\n     * Next operation.\r\n     * @type {Writer.Op|undefined}\r\n     */\r\n    this.next = undefined;\r\n\r\n    /**\r\n     * Value to write.\r\n     * @type {*}\r\n     */\r\n    this.val = val; // type varies\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction noop() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Constructs a new writer state instance.\r\n * @classdesc Copied writer state.\r\n * @memberof Writer\r\n * @constructor\r\n * @param {Writer} writer Writer to copy state from\r\n * @ignore\r\n */\r\nfunction State(writer) {\r\n\r\n    /**\r\n     * Current head.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.head = writer.head;\r\n\r\n    /**\r\n     * Current tail.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.tail = writer.tail;\r\n\r\n    /**\r\n     * Current buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = writer.len;\r\n\r\n    /**\r\n     * Next state.\r\n     * @type {State|null}\r\n     */\r\n    this.next = writer.states;\r\n}\r\n\r\n/**\r\n * Constructs a new writer instance.\r\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n */\r\nfunction Writer() {\r\n\r\n    /**\r\n     * Current length.\r\n     * @type {number}\r\n     */\r\n    this.len = 0;\r\n\r\n    /**\r\n     * Operations head.\r\n     * @type {Object}\r\n     */\r\n    this.head = new Op(noop, 0, 0);\r\n\r\n    /**\r\n     * Operations tail\r\n     * @type {Object}\r\n     */\r\n    this.tail = this.head;\r\n\r\n    /**\r\n     * Linked forked states.\r\n     * @type {Object|null}\r\n     */\r\n    this.states = null;\r\n\r\n    // When a value is written, the writer calculates its byte length and puts it into a linked\r\n    // list of operations to perform when finish() is called. This both allows us to allocate\r\n    // buffers of the exact required size and reduces the amount of work we have to do compared\r\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\r\n    // part is just a linked list walk calling operations with already prepared values.\r\n}\r\n\r\n/**\r\n * Creates a new writer.\r\n * @function\r\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\r\n */\r\nWriter.create = util.Buffer\r\n    ? function create_buffer_setup() {\r\n        return (Writer.create = function create_buffer() {\r\n            return new BufferWriter();\r\n        })();\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array() {\r\n        return new Writer();\r\n    };\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\nWriter.alloc = function alloc(size) {\r\n    return new util.Array(size);\r\n};\r\n\r\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\r\n/* istanbul ignore else */\r\nif (util.Array !== Array)\r\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\r\n\r\n/**\r\n * Pushes a new operation to the queue.\r\n * @param {function(Uint8Array, number, *)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @returns {Writer} `this`\r\n * @private\r\n */\r\nWriter.prototype._push = function push(fn, len, val) {\r\n    this.tail = this.tail.next = new Op(fn, len, val);\r\n    this.len += len;\r\n    return this;\r\n};\r\n\r\nfunction writeByte(val, buf, pos) {\r\n    buf[pos] = val & 255;\r\n}\r\n\r\nfunction writeVarint32(val, buf, pos) {\r\n    while (val > 127) {\r\n        buf[pos++] = val & 127 | 128;\r\n        val >>>= 7;\r\n    }\r\n    buf[pos] = val;\r\n}\r\n\r\n/**\r\n * Constructs a new varint writer operation instance.\r\n * @classdesc Scheduled varint writer operation.\r\n * @extends Op\r\n * @constructor\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @ignore\r\n */\r\nfunction VarintOp(len, val) {\r\n    this.len = len;\r\n    this.next = undefined;\r\n    this.val = val;\r\n}\r\n\r\nVarintOp.prototype = Object.create(Op.prototype);\r\nVarintOp.prototype.fn = writeVarint32;\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as a varint.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.uint32 = function write_uint32(value) {\r\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\r\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\r\n    this.len += (this.tail = this.tail.next = new VarintOp(\r\n        (value = value >>> 0)\r\n                < 128       ? 1\r\n        : value < 16384     ? 2\r\n        : value < 2097152   ? 3\r\n        : value < 268435456 ? 4\r\n        :                     5,\r\n    value)).len;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as a varint.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.int32 = function write_int32(value) {\r\n    return value < 0\r\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\r\n        : this.uint32(value);\r\n};\r\n\r\n/**\r\n * Writes a 32 bit value as a varint, zig-zag encoded.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sint32 = function write_sint32(value) {\r\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\r\n};\r\n\r\nfunction writeVarint64(val, buf, pos) {\r\n    while (val.hi) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\r\n        val.hi >>>= 7;\r\n    }\r\n    while (val.lo > 127) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = val.lo >>> 7;\r\n    }\r\n    buf[pos++] = val.lo;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as a varint.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.uint64 = function write_uint64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.int64 = Writer.prototype.uint64;\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sint64 = function write_sint64(value) {\r\n    var bits = LongBits.from(value).zzEncode();\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a boolish value as a varint.\r\n * @param {boolean} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bool = function write_bool(value) {\r\n    return this._push(writeByte, 1, value ? 1 : 0);\r\n};\r\n\r\nfunction writeFixed32(val, buf, pos) {\r\n    buf[pos    ] =  val         & 255;\r\n    buf[pos + 1] =  val >>> 8   & 255;\r\n    buf[pos + 2] =  val >>> 16  & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as fixed 32 bits.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fixed32 = function write_fixed32(value) {\r\n    return this._push(writeFixed32, 4, value >>> 0);\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as fixed 32 bits.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as fixed 64 bits.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.fixed64 = function write_fixed64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as fixed 64 bits.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\r\n\r\n/**\r\n * Writes a float (32 bit).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.float = function write_float(value) {\r\n    return this._push(util.float.writeFloatLE, 4, value);\r\n};\r\n\r\n/**\r\n * Writes a double (64 bit float).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.double = function write_double(value) {\r\n    return this._push(util.float.writeDoubleLE, 8, value);\r\n};\r\n\r\nvar writeBytes = util.Array.prototype.set\r\n    ? function writeBytes_set(val, buf, pos) {\r\n        buf.set(val, pos); // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytes_for(val, buf, pos) {\r\n        for (var i = 0; i < val.length; ++i)\r\n            buf[pos + i] = val[i];\r\n    };\r\n\r\n/**\r\n * Writes a sequence of bytes.\r\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bytes = function write_bytes(value) {\r\n    var len = value.length >>> 0;\r\n    if (!len)\r\n        return this._push(writeByte, 1, 0);\r\n    if (util.isString(value)) {\r\n        var buf = Writer.alloc(len = base64.length(value));\r\n        base64.decode(value, buf, 0);\r\n        value = buf;\r\n    }\r\n    return this.uint32(len)._push(writeBytes, len, value);\r\n};\r\n\r\n/**\r\n * Writes a string.\r\n * @param {string} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.string = function write_string(value) {\r\n    var len = utf8.length(value);\r\n    return len\r\n        ? this.uint32(len)._push(utf8.write, len, value)\r\n        : this._push(writeByte, 1, 0);\r\n};\r\n\r\n/**\r\n * Forks this writer's state by pushing it to a stack.\r\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fork = function fork() {\r\n    this.states = new State(this);\r\n    this.head = this.tail = new Op(noop, 0, 0);\r\n    this.len = 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets this instance to the last state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.reset = function reset() {\r\n    if (this.states) {\r\n        this.head   = this.states.head;\r\n        this.tail   = this.states.tail;\r\n        this.len    = this.states.len;\r\n        this.states = this.states.next;\r\n    } else {\r\n        this.head = this.tail = new Op(noop, 0, 0);\r\n        this.len  = 0;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.ldelim = function ldelim() {\r\n    var head = this.head,\r\n        tail = this.tail,\r\n        len  = this.len;\r\n    this.reset().uint32(len);\r\n    if (len) {\r\n        this.tail.next = head.next; // skip noop\r\n        this.tail = tail;\r\n        this.len += len;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @returns {Uint8Array} Finished buffer\r\n */\r\nWriter.prototype.finish = function finish() {\r\n    var head = this.head.next, // skip noop\r\n        buf  = this.constructor.alloc(this.len),\r\n        pos  = 0;\r\n    while (head) {\r\n        head.fn(head.val, buf, pos);\r\n        pos += head.len;\r\n        head = head.next;\r\n    }\r\n    // this.head = this.tail = null;\r\n    return buf;\r\n};\r\n\r\nWriter._configure = function(BufferWriter_) {\r\n    BufferWriter = BufferWriter_;\r\n};\r\n","\"use strict\";\r\nvar util = exports;\r\n\r\n// used to return a Promise where callback is omitted\r\nutil.asPromise = require(\"@protobufjs/aspromise\");\r\n\r\n// converts to / from base64 encoded strings\r\nutil.base64 = require(\"@protobufjs/base64\");\r\n\r\n// base class of rpc.Service\r\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\r\n\r\n// float handling accross browsers\r\nutil.float = require(\"@protobufjs/float\");\r\n\r\n// requires modules optionally and hides the call from bundlers\r\nutil.inquire = require(\"@protobufjs/inquire\");\r\n\r\n// converts to / from utf8 encoded strings\r\nutil.utf8 = require(\"@protobufjs/utf8\");\r\n\r\n// provides a node-like buffer pool in the browser\r\nutil.pool = require(\"@protobufjs/pool\");\r\n\r\n// utility to work with the low and high bits of a 64 bit value\r\nutil.LongBits = require(\"./longbits\");\r\n\r\n/**\r\n * An immuable empty array.\r\n * @memberof util\r\n * @type {Array.<*>}\r\n * @const\r\n */\r\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\r\n\r\n/**\r\n * An immutable empty object.\r\n * @type {Object}\r\n * @const\r\n */\r\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\r\n\r\n/**\r\n * Whether running within node or not.\r\n * @memberof util\r\n * @type {boolean}\r\n * @const\r\n */\r\nutil.isNode = Boolean(global.process && global.process.versions && global.process.versions.node);\r\n\r\n/**\r\n * Tests if the specified value is an integer.\r\n * @function\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is an integer\r\n */\r\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\r\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a string.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a string\r\n */\r\nutil.isString = function isString(value) {\r\n    return typeof value === \"string\" || value instanceof String;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a non-null object.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a non-null object\r\n */\r\nutil.isObject = function isObject(value) {\r\n    return value && typeof value === \"object\";\r\n};\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * This is an alias of {@link util.isSet}.\r\n * @function\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isset =\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isSet = function isSet(obj, prop) {\r\n    var value = obj[prop];\r\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\r\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Any compatible Buffer instance.\r\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\r\n * @interface Buffer\r\n * @extends Uint8Array\r\n */\r\n\r\n/**\r\n * Node's Buffer class if available.\r\n * @type {Constructor<Buffer>}\r\n */\r\nutil.Buffer = (function() {\r\n    try {\r\n        var Buffer = util.inquire(\"buffer\").Buffer;\r\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\r\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\r\n    } catch (e) {\r\n        /* istanbul ignore next */\r\n        return null;\r\n    }\r\n})();\r\n\r\n// Internal alias of or polyfull for Buffer.from.\r\nutil._Buffer_from = null;\r\n\r\n// Internal alias of or polyfill for Buffer.allocUnsafe.\r\nutil._Buffer_allocUnsafe = null;\r\n\r\n/**\r\n * Creates a new buffer of whatever type supported by the environment.\r\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\r\n * @returns {Uint8Array|Buffer} Buffer\r\n */\r\nutil.newBuffer = function newBuffer(sizeOrArray) {\r\n    /* istanbul ignore next */\r\n    return typeof sizeOrArray === \"number\"\r\n        ? util.Buffer\r\n            ? util._Buffer_allocUnsafe(sizeOrArray)\r\n            : new util.Array(sizeOrArray)\r\n        : util.Buffer\r\n            ? util._Buffer_from(sizeOrArray)\r\n            : typeof Uint8Array === \"undefined\"\r\n                ? sizeOrArray\r\n                : new Uint8Array(sizeOrArray);\r\n};\r\n\r\n/**\r\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\r\n * @type {Constructor<Uint8Array>}\r\n */\r\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\r\n\r\n/**\r\n * Any compatible Long instance.\r\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\r\n * @interface Long\r\n * @property {number} low Low bits\r\n * @property {number} high High bits\r\n * @property {boolean} unsigned Whether unsigned or not\r\n */\r\n\r\n/**\r\n * Long.js's Long class if available.\r\n * @type {Constructor<Long>}\r\n */\r\nutil.Long = /* istanbul ignore next */ global.dcodeIO && /* istanbul ignore next */ global.dcodeIO.Long || util.inquire(\"long\");\r\n\r\n/**\r\n * Regular expression used to verify 2 bit (`bool`) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key2Re = /^true|false|0|1$/;\r\n\r\n/**\r\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\r\n\r\n/**\r\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\r\n\r\n/**\r\n * Converts a number or long to an 8 characters long hash string.\r\n * @param {Long|number} value Value to convert\r\n * @returns {string} Hash\r\n */\r\nutil.longToHash = function longToHash(value) {\r\n    return value\r\n        ? util.LongBits.from(value).toHash()\r\n        : util.LongBits.zeroHash;\r\n};\r\n\r\n/**\r\n * Converts an 8 characters long hash string to a long or number.\r\n * @param {string} hash Hash\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long|number} Original value\r\n */\r\nutil.longFromHash = function longFromHash(hash, unsigned) {\r\n    var bits = util.LongBits.fromHash(hash);\r\n    if (util.Long)\r\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\r\n    return bits.toNumber(Boolean(unsigned));\r\n};\r\n\r\n/**\r\n * Merges the properties of the source object into the destination object.\r\n * @memberof util\r\n * @param {Object.<string,*>} dst Destination object\r\n * @param {Object.<string,*>} src Source object\r\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\r\n * @returns {Object.<string,*>} Destination object\r\n */\r\nfunction merge(dst, src, ifNotSet) { // used by converters\r\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\r\n        if (dst[keys[i]] === undefined || !ifNotSet)\r\n            dst[keys[i]] = src[keys[i]];\r\n    return dst;\r\n}\r\n\r\nutil.merge = merge;\r\n\r\n/**\r\n * Converts the first character of a string to lower case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.lcFirst = function lcFirst(str) {\r\n    return str.charAt(0).toLowerCase() + str.substring(1);\r\n};\r\n\r\n/**\r\n * Creates a custom error constructor.\r\n * @memberof util\r\n * @param {string} name Error name\r\n * @returns {Constructor<Error>} Custom error constructor\r\n */\r\nfunction newError(name) {\r\n\r\n    function CustomError(message, properties) {\r\n\r\n        if (!(this instanceof CustomError))\r\n            return new CustomError(message, properties);\r\n\r\n        // Error.call(this, message);\r\n        // ^ just returns a new error instance because the ctor can be called as a function\r\n\r\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\r\n\r\n        /* istanbul ignore next */\r\n        if (Error.captureStackTrace) // node\r\n            Error.captureStackTrace(this, CustomError);\r\n        else\r\n            Object.defineProperty(this, \"stack\", { value: (new Error()).stack || \"\" });\r\n\r\n        if (properties)\r\n            merge(this, properties);\r\n    }\r\n\r\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\r\n\r\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\r\n\r\n    CustomError.prototype.toString = function toString() {\r\n        return this.name + \": \" + this.message;\r\n    };\r\n\r\n    return CustomError;\r\n}\r\n\r\nutil.newError = newError;\r\n\r\n/**\r\n * Constructs a new protocol error.\r\n * @classdesc Error subclass indicating a protocol specifc error.\r\n * @memberof util\r\n * @extends Error\r\n * @template T extends Message<T>\r\n * @constructor\r\n * @param {string} message Error message\r\n * @param {Object.<string,*>} [properties] Additional properties\r\n * @example\r\n * try {\r\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\r\n * } catch (e) {\r\n *     if (e instanceof ProtocolError && e.instance)\r\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\r\n * }\r\n */\r\nutil.ProtocolError = newError(\"ProtocolError\");\r\n\r\n/**\r\n * So far decoded message instance.\r\n * @name util.ProtocolError#instance\r\n * @type {Message<T>}\r\n */\r\n\r\n/**\r\n * A OneOf getter as returned by {@link util.oneOfGetter}.\r\n * @typedef OneOfGetter\r\n * @type {function}\r\n * @returns {string|undefined} Set field name, if any\r\n */\r\n\r\n/**\r\n * Builds a getter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfGetter} Unbound getter\r\n */\r\nutil.oneOfGetter = function getOneOf(fieldNames) {\r\n    var fieldMap = {};\r\n    for (var i = 0; i < fieldNames.length; ++i)\r\n        fieldMap[fieldNames[i]] = 1;\r\n\r\n    /**\r\n     * @returns {string|undefined} Set field name, if any\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function() { // eslint-disable-line consistent-return\r\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\r\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\r\n                return keys[i];\r\n    };\r\n};\r\n\r\n/**\r\n * A OneOf setter as returned by {@link util.oneOfSetter}.\r\n * @typedef OneOfSetter\r\n * @type {function}\r\n * @param {string|undefined} value Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Builds a setter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfSetter} Unbound setter\r\n */\r\nutil.oneOfSetter = function setOneOf(fieldNames) {\r\n\r\n    /**\r\n     * @param {string} name Field name\r\n     * @returns {undefined}\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function(name) {\r\n        for (var i = 0; i < fieldNames.length; ++i)\r\n            if (fieldNames[i] !== name)\r\n                delete this[fieldNames[i]];\r\n    };\r\n};\r\n\r\n/**\r\n * Default conversion options used for {@link Message#toJSON} implementations.\r\n *\r\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\r\n *\r\n * - Longs become strings\r\n * - Enums become string keys\r\n * - Bytes become base64 encoded strings\r\n * - (Sub-)Messages become plain objects\r\n * - Maps become plain objects with all string keys\r\n * - Repeated fields become arrays\r\n * - NaN and Infinity for float and double fields become strings\r\n *\r\n * @type {IConversionOptions}\r\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\r\n */\r\nutil.toJSONOptions = {\r\n    longs: String,\r\n    enums: String,\r\n    bytes: String,\r\n    json: true\r\n};\r\n\r\nutil._configure = function() {\r\n    var Buffer = util.Buffer;\r\n    /* istanbul ignore if */\r\n    if (!Buffer) {\r\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\r\n        return;\r\n    }\r\n    // because node 4.x buffers are incompatible & immutable\r\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\r\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\r\n        /* istanbul ignore next */\r\n        function Buffer_from(value, encoding) {\r\n            return new Buffer(value, encoding);\r\n        };\r\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\r\n        /* istanbul ignore next */\r\n        function Buffer_allocUnsafe(size) {\r\n            return new Buffer(size);\r\n        };\r\n};\r\n","\"use strict\";\r\nmodule.exports = LongBits;\r\n\r\nvar util = require(\"../util/minimal\");\r\n\r\n/**\r\n * Constructs new long bits.\r\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\r\n * @memberof util\r\n * @constructor\r\n * @param {number} lo Low 32 bits, unsigned\r\n * @param {number} hi High 32 bits, unsigned\r\n */\r\nfunction LongBits(lo, hi) {\r\n\r\n    // note that the casts below are theoretically unnecessary as of today, but older statically\r\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\r\n\r\n    /**\r\n     * Low bits.\r\n     * @type {number}\r\n     */\r\n    this.lo = lo >>> 0;\r\n\r\n    /**\r\n     * High bits.\r\n     * @type {number}\r\n     */\r\n    this.hi = hi >>> 0;\r\n}\r\n\r\n/**\r\n * Zero bits.\r\n * @memberof util.LongBits\r\n * @type {util.LongBits}\r\n */\r\nvar zero = LongBits.zero = new LongBits(0, 0);\r\n\r\nzero.toNumber = function() { return 0; };\r\nzero.zzEncode = zero.zzDecode = function() { return this; };\r\nzero.length = function() { return 1; };\r\n\r\n/**\r\n * Zero hash.\r\n * @memberof util.LongBits\r\n * @type {string}\r\n */\r\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\r\n\r\n/**\r\n * Constructs new long bits from the specified number.\r\n * @param {number} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.fromNumber = function fromNumber(value) {\r\n    if (value === 0)\r\n        return zero;\r\n    var sign = value < 0;\r\n    if (sign)\r\n        value = -value;\r\n    var lo = value >>> 0,\r\n        hi = (value - lo) / 4294967296 >>> 0;\r\n    if (sign) {\r\n        hi = ~hi >>> 0;\r\n        lo = ~lo >>> 0;\r\n        if (++lo > 4294967295) {\r\n            lo = 0;\r\n            if (++hi > 4294967295)\r\n                hi = 0;\r\n        }\r\n    }\r\n    return new LongBits(lo, hi);\r\n};\r\n\r\n/**\r\n * Constructs new long bits from a number, long or string.\r\n * @param {Long|number|string} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.from = function from(value) {\r\n    if (typeof value === \"number\")\r\n        return LongBits.fromNumber(value);\r\n    if (util.isString(value)) {\r\n        /* istanbul ignore else */\r\n        if (util.Long)\r\n            value = util.Long.fromString(value);\r\n        else\r\n            return LongBits.fromNumber(parseInt(value, 10));\r\n    }\r\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a possibly unsafe JavaScript number.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {number} Possibly unsafe number\r\n */\r\nLongBits.prototype.toNumber = function toNumber(unsigned) {\r\n    if (!unsigned && this.hi >>> 31) {\r\n        var lo = ~this.lo + 1 >>> 0,\r\n            hi = ~this.hi     >>> 0;\r\n        if (!lo)\r\n            hi = hi + 1 >>> 0;\r\n        return -(lo + hi * 4294967296);\r\n    }\r\n    return this.lo + this.hi * 4294967296;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a long.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long} Long\r\n */\r\nLongBits.prototype.toLong = function toLong(unsigned) {\r\n    return util.Long\r\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\r\n        /* istanbul ignore next */\r\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\r\n};\r\n\r\nvar charCodeAt = String.prototype.charCodeAt;\r\n\r\n/**\r\n * Constructs new long bits from the specified 8 characters long hash.\r\n * @param {string} hash Hash\r\n * @returns {util.LongBits} Bits\r\n */\r\nLongBits.fromHash = function fromHash(hash) {\r\n    if (hash === zeroHash)\r\n        return zero;\r\n    return new LongBits(\r\n        ( charCodeAt.call(hash, 0)\r\n        | charCodeAt.call(hash, 1) << 8\r\n        | charCodeAt.call(hash, 2) << 16\r\n        | charCodeAt.call(hash, 3) << 24) >>> 0\r\n    ,\r\n        ( charCodeAt.call(hash, 4)\r\n        | charCodeAt.call(hash, 5) << 8\r\n        | charCodeAt.call(hash, 6) << 16\r\n        | charCodeAt.call(hash, 7) << 24) >>> 0\r\n    );\r\n};\r\n\r\n/**\r\n * Converts this long bits to a 8 characters long hash.\r\n * @returns {string} Hash\r\n */\r\nLongBits.prototype.toHash = function toHash() {\r\n    return String.fromCharCode(\r\n        this.lo        & 255,\r\n        this.lo >>> 8  & 255,\r\n        this.lo >>> 16 & 255,\r\n        this.lo >>> 24      ,\r\n        this.hi        & 255,\r\n        this.hi >>> 8  & 255,\r\n        this.hi >>> 16 & 255,\r\n        this.hi >>> 24\r\n    );\r\n};\r\n\r\n/**\r\n * Zig-zag encodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzEncode = function zzEncode() {\r\n    var mask =   this.hi >> 31;\r\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\r\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Zig-zag decodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzDecode = function zzDecode() {\r\n    var mask = -(this.lo & 1);\r\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\r\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Calculates the length of this longbits when encoded as a varint.\r\n * @returns {number} Length\r\n */\r\nLongBits.prototype.length = function length() {\r\n    var part0 =  this.lo,\r\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\r\n        part2 =  this.hi >>> 24;\r\n    return part2 === 0\r\n         ? part1 === 0\r\n           ? part0 < 16384\r\n             ? part0 < 128 ? 1 : 2\r\n             : part0 < 2097152 ? 3 : 4\r\n           : part1 < 16384\r\n             ? part1 < 128 ? 5 : 6\r\n             : part1 < 2097152 ? 7 : 8\r\n         : part2 < 128 ? 9 : 10;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// tslint:disable:no-any\n\n/**\n * Promise wrapper with exposed resolve and reject callbacks.\n */\nexport interface Deferred<T> extends Promise<T> {\n  readonly resolve: (value?: T|PromiseLike<T>) => void;\n  readonly reject: (reason?: any) => void;\n}\n\n/**\n * Create a promise with exposed resolve and reject callbacks.\n */\nexport function defer<T>(): Deferred<T> {\n  let resolve = null as any;\n  let reject = null as any;\n  const p = new Promise((res, rej) => [resolve, reject] = [res, rej]);\n  return Object.assign(p, {resolve, reject}) as any;\n}\n","// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {createEmptyState, State} from '../common/state';\n\n// TODO(hjd): Type check this better.\n// tslint:disable-next-line no-any\nexport function rootReducer(state: State, action: any): State {\n  switch (action.type) {\n    case 'NAVIGATE': {\n      const nextState = {...state};\n      nextState.route = action.route;\n      return nextState;\n    }\n\n    case 'OPEN_TRACE_FROM_FILE': {\n      const nextState = createEmptyState();\n      nextState.engines[action.id] = {\n        id: action.id,\n        ready: false,\n        source: action.file,\n      };\n      nextState.route = `/viewer`;\n\n      return nextState;\n    }\n\n    case 'OPEN_TRACE_FROM_URL': {\n      const nextState = createEmptyState();\n      nextState.engines[action.id] = {\n        id: action.id,\n        ready: false,\n        source: action.url,\n      };\n      nextState.route = `/viewer`;\n      return nextState;\n    }\n\n    case 'ADD_TRACK': {\n      const nextState = {...state};\n      nextState.tracks = {...state.tracks};\n      const id = `${nextState.nextId++}`;\n      nextState.tracks[id] = {\n        id,\n        engineId: action.engineId,\n        kind: action.trackKind,\n        name: `Cpu Track ${id}`,\n        maxDepth: 1,\n        cpu: action.cpu,\n      };\n      nextState.displayedTrackIds.push(id);\n      return nextState;\n    }\n\n    case 'REQ_TRACK_DATA': {\n      const nextState = {...state};\n      nextState.tracks = {...state.tracks};\n      nextState.tracks[action.trackId].dataReq = {\n        start: action.start,\n        end: action.end,\n        resolution: action.resolution\n      };\n      return nextState;\n    }\n\n    case 'CLEAR_TRACK_DATA_REQ': {\n      const nextState = {...state};\n      nextState.tracks = {...state.tracks};\n      nextState.tracks[action.trackId].dataReq = undefined;\n      return nextState;\n    }\n\n    // TODO: 'ADD_CHROME_TRACK' string should be a shared const.\n    case 'ADD_CHROME_TRACK': {\n      const nextState = {...state};\n      nextState.tracks = {...state.tracks};\n      const id = `${nextState.nextId++}`;\n      nextState.tracks[id] = {\n        id,\n        engineId: action.engineId,\n        kind: action.trackKind,\n        name: `${action.threadName}`,\n        // TODO(dproy): This should be part of published information.\n        maxDepth: action.maxDepth,\n        cpu: 0,  // TODO: Remove this after we have kind specific state.\n        upid: action.upid,\n        utid: action.utid,\n      };\n      nextState.displayedTrackIds.push(id);\n      return nextState;\n    }\n\n    case 'EXECUTE_QUERY': {\n      const nextState = {...state};\n      nextState.queries = {...state.queries};\n      nextState.queries[action.queryId] = {\n        id: action.queryId,\n        engineId: action.engineId,\n        query: action.query,\n      };\n      return nextState;\n    }\n\n    case 'DELETE_QUERY': {\n      const nextState = {...state};\n      nextState.queries = {...state.queries};\n      delete nextState.queries[action.queryId];\n      return nextState;\n    }\n\n    case 'MOVE_TRACK':\n      if (!state.displayedTrackIds.includes(action.trackId) ||\n          !action.direction) {\n        throw new Error(\n            'Trying to move a track that does not exist' +\n            ' or not providing a direction to move to.');\n      }\n      const nextState = {...state};  // Creates a shallow copy.\n      // Copy the displayedTrackIds to prevent side effects.\n      nextState.displayedTrackIds = state.displayedTrackIds.slice();\n\n      const oldIndex = state.displayedTrackIds.indexOf(action.trackId);\n      const newIndex = action.direction === 'up' ? oldIndex - 1 : oldIndex + 1;\n      const swappedTrackId = state.displayedTrackIds[newIndex];\n\n      if (!swappedTrackId) {\n        break;\n      }\n      nextState.displayedTrackIds[newIndex] = action.trackId;\n      nextState.displayedTrackIds[oldIndex] = swappedTrackId;\n\n      return nextState;\n\n    case 'SET_ENGINE_READY': {\n      const nextState = {...state};  // Creates a shallow copy.\n      nextState.engines = {...state.engines};\n      nextState.engines[action.engineId].ready = action.ready;\n      return nextState;\n    }\n\n    case 'CREATE_PERMALINK': {\n      const nextState = {...state};\n      nextState.permalink = {requestId: action.requestId, hash: undefined};\n      return nextState;\n    }\n\n    case 'SET_PERMALINK': {\n      // Drop any links for old requests.\n      if (state.permalink.requestId !== action.requestId) return state;\n\n      const nextState = {...state};\n      nextState.permalink = {requestId: action.requestId, hash: action.hash};\n      return nextState;\n    }\n\n    case 'LOAD_PERMALINK': {\n      const nextState = {...state};\n      nextState.permalink = {requestId: action.requestId, hash: action.hash};\n      return nextState;\n    }\n\n    case 'SET_STATE': {\n      return action.newState;\n    }\n\n    case 'SET_TRACE_TIME': {\n      const nextState = {...state};\n      nextState.traceTime.startSec = action.startSec;\n      nextState.traceTime.endSec = action.endSec;\n      nextState.traceTime.lastUpdate = action.lastUpdate;\n      return nextState;\n    }\n\n    case 'SET_VISIBLE_TRACE_TIME': {\n      const nextState = {...state};\n      nextState.visibleTraceTime.startSec = action.startSec;\n      nextState.visibleTraceTime.endSec = action.endSec;\n      nextState.visibleTraceTime.lastUpdate = action.lastUpdate;\n      return nextState;\n    }\n\n    case 'UPDATE_STATUS': {\n      const nextState = {...state};\n      nextState.status = {msg: action.msg, timestamp: action.timestamp};\n      return nextState;\n    }\n\n    default:\n      break;\n  }\n  return state;\n}\n","// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * A plain js object, holding objects of type |Class| keyed by string id.\n * We use this instead of using |Map| object since it is simpler and faster to\n * serialize for use in postMessage.\n */\nexport interface ObjectById<Class extends{id: string}> { [id: string]: Class; }\n\nexport interface TrackState {\n  id: string;\n  engineId: string;\n  maxDepth: number;\n  kind: string;\n  name: string;\n  // TODO: These need to be nested into track kind spesific state.\n  // cpu slice state:\n  cpu: number;\n  // chrome slice state:\n  upid?: number;\n  utid?: number;\n  dataReq?: TrackDataRequest;\n}\n\nexport interface TrackDataRequest {\n  start: number;\n  end: number;\n  resolution: number;\n}\n\nexport interface EngineConfig {\n  id: string;\n  ready: boolean;\n  source: string|File;\n}\n\nexport interface QueryConfig {\n  id: string;\n  engineId: string;\n  query: string;\n}\n\nexport interface PermalinkConfig {\n  requestId?: string;  // Set by the frontend to request a new permalink.\n  hash?: string;       // Set by the controller when the link has been created.\n}\n\nexport interface TraceTime {\n  startSec: number;\n  endSec: number;\n  lastUpdate: number;  // Epoch in seconds (Date.now() / 1000).\n}\n\nexport interface Status {\n  msg: string;\n  timestamp: number;  // Epoch in seconds (Date.now() / 1000).\n}\n\nexport interface State {\n  route: string|null;\n  nextId: number;\n\n  /**\n   * Open traces.\n   */\n  engines: ObjectById<EngineConfig>;\n  traceTime: TraceTime;\n  visibleTraceTime: TraceTime;\n  tracks: ObjectById<TrackState>;\n  displayedTrackIds: string[];\n  queries: ObjectById<QueryConfig>;\n  permalink: PermalinkConfig;\n  status: Status;\n}\n\nexport function createEmptyState(): State {\n  return {\n    route: null,\n    nextId: 0,\n    engines: {},\n    traceTime: {startSec: 0, endSec: 10, lastUpdate: 0},\n    visibleTraceTime: {startSec: 0, endSec: 10, lastUpdate: 0},\n    tracks: {},\n    displayedTrackIds: [],\n    queries: {},\n    permalink: {},\n    status: {msg: '', timestamp: 0},\n  };\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// tslint:disable-next-line no-any\nexport type ControllerAny = Controller</*StateType=*/any>;\n\nexport interface ControllerFactory<ConstructorArgs> {\n  new(args: ConstructorArgs): ControllerAny;\n}\n\ninterface ControllerInitializer<ConstructorArgs> {\n  id: string;\n  factory: ControllerFactory<ConstructorArgs>;\n  args: ConstructorArgs;\n}\n\n// tslint:disable-next-line no-any\nexport type ControllerInitializerAny = ControllerInitializer<any>;\n\nexport function Child<ConstructorArgs>(\n    id: string,\n    factory: ControllerFactory<ConstructorArgs>,\n    args: ConstructorArgs): ControllerInitializer<ConstructorArgs> {\n  return {id, factory, args};\n}\n\nexport type Children = ControllerInitializerAny[];\n\nexport abstract class Controller<StateType> {\n  // This is about the local FSM state, has nothing to do with the global\n  // app state.\n  private _stateChanged = false;\n  private _inRunner = false;\n  private _state: StateType;\n  private _children = new Map<string, ControllerAny>();\n\n  constructor(initialState: StateType) {\n    this._state = initialState;\n  }\n\n  abstract run(): Children|void;\n  onDestroy(): void {}\n\n  // Invokes the current controller subtree, recursing into children.\n  // While doing so handles lifecycle of child controllers.\n  // This method should be called only by the runControllers() method in\n  // globals.ts. Exposed publicly for testing.\n  invoke(): boolean {\n    if (this._inRunner) throw new Error('Reentrancy in Controller');\n    this._stateChanged = false;\n    this._inRunner = true;\n    const resArray = this.run();\n    let triggerAnotherRun = this._stateChanged;\n    this._stateChanged = false;\n\n    const nextChildren = new Map<string, ControllerInitializerAny>();\n    if (resArray !== undefined) {\n      for (const childConfig of resArray) {\n        if (nextChildren.has(childConfig.id)) {\n          throw new Error(`Duplicate children controller ${childConfig.id}`);\n        }\n        nextChildren.set(childConfig.id, childConfig);\n      }\n    }\n    const dtors = new Array<(() => void)>();\n    const runners = new Array<(() => boolean)>();\n    for (const key of this._children.keys()) {\n      if (nextChildren.has(key)) continue;\n      const instance = this._children.get(key)!;\n      this._children.delete(key);\n      dtors.push(() => instance.onDestroy());\n    }\n    for (const nextChild of nextChildren.values()) {\n      if (!this._children.has(nextChild.id)) {\n        const instance = new nextChild.factory(nextChild.args);\n        this._children.set(nextChild.id, instance);\n      }\n      const instance = this._children.get(nextChild.id)!;\n      runners.push(() => instance.invoke());\n    }\n\n    for (const dtor of dtors) dtor();  // Invoke all onDestroy()s.\n\n    // Invoke all runner()s.\n    for (const runner of runners) {\n      const recursiveRes = runner();\n      triggerAnotherRun = triggerAnotherRun || recursiveRes;\n    }\n\n    this._inRunner = false;\n    return triggerAnotherRun;\n  }\n\n  setState(state: StateType) {\n    if (!this._inRunner) {\n      throw new Error('Cannot setState() outside of the run() method');\n    }\n    this._stateChanged = state !== this._state;\n    this._state = state;\n  }\n\n  get state(): StateType {\n    return this._state;\n  }\n}","// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport interface HasKind { kind: string; }\n\nexport class Registry<T extends HasKind> {\n  private registry: Map<string, T>;\n\n  constructor() {\n    this.registry = new Map<string, T>();\n  }\n\n  register(registrant: T) {\n    const kind = registrant.kind;\n    if (this.registry.has(kind)) {\n      throw new Error(`Registrant ${kind} already exists in the registry`);\n    }\n    this.registry.set(kind, registrant);\n  }\n\n  has(kind: string): boolean {\n    return this.registry.has(kind);\n  }\n\n  get(kind: string): T {\n    const registrant = this.registry.get(kind);\n    if (registrant === undefined) {\n      throw new Error(`${kind} has not been registered.`);\n    }\n    return registrant;\n  }\n\n  unregisterAllForTesting(): void {\n    this.registry.clear();\n  }\n}\n","// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {State} from './state';\nimport {TimeSpan} from './time';\nexport interface Action { type: string; }\n\nexport function openTraceFromUrl(url: string) {\n  return {\n    type: 'OPEN_TRACE_FROM_URL',\n    id: new Date().toISOString(),\n    url,\n  };\n}\n\nexport function openTraceFromFile(file: File) {\n  return {\n    type: 'OPEN_TRACE_FROM_FILE',\n    id: new Date().toISOString(),\n    file,\n  };\n}\n\n// TODO(hjd): Remove CPU and add a generic way to handle track specific state.\nexport function addTrack(engineId: string, trackKind: string, cpu: number) {\n  return {\n    type: 'ADD_TRACK',\n    engineId,\n    trackKind,\n    cpu,\n  };\n}\n\nexport function requestTrackData(\n    trackId: string, start: number, end: number, resolution: number) {\n  return {type: 'REQ_TRACK_DATA', trackId, start, end, resolution};\n}\n\nexport function clearTrackDataRequest(trackId: string) {\n  return {type: 'CLEAR_TRACK_DATA_REQ', trackId};\n}\n\n// TODO: There should be merged with addTrack above.\nexport function addChromeSliceTrack(\n    engineId: string,\n    trackKind: string,\n    upid: number,\n    utid: number,\n    threadName: string,\n    maxDepth: number) {\n  return {\n    type: 'ADD_CHROME_TRACK',\n    engineId,\n    trackKind,\n    upid,\n    utid,\n    threadName,\n    maxDepth,\n  };\n}\n\nexport function executeQuery(engineId: string, queryId: string, query: string) {\n  return {\n    type: 'EXECUTE_QUERY',\n    engineId,\n    queryId,\n    query,\n  };\n}\n\nexport function deleteQuery(queryId: string) {\n  return {\n    type: 'DELETE_QUERY',\n    queryId,\n  };\n}\n\nexport function navigate(route: string) {\n  return {\n    type: 'NAVIGATE',\n    route,\n  };\n}\n\nexport function moveTrack(trackId: string, direction: 'up'|'down') {\n  return {\n    type: 'MOVE_TRACK',\n    trackId,\n    direction,\n  };\n}\n\nexport function setEngineReady(engineId: string, ready = true) {\n  return {type: 'SET_ENGINE_READY', engineId, ready};\n}\n\nexport function createPermalink() {\n  return {type: 'CREATE_PERMALINK', requestId: new Date().toISOString()};\n}\n\nexport function setPermalink(requestId: string, hash: string) {\n  return {type: 'SET_PERMALINK', requestId, hash};\n}\n\nexport function loadPermalink(hash: string) {\n  return {type: 'LOAD_PERMALINK', requestId: new Date().toISOString(), hash};\n}\n\nexport function setState(newState: State) {\n  return {\n    type: 'SET_STATE',\n    newState,\n  };\n}\n\nexport function setTraceTime(ts: TimeSpan) {\n  return {\n    type: 'SET_TRACE_TIME',\n    startSec: ts.start,\n    endSec: ts.end,\n    lastUpdate: Date.now() / 1000,\n  };\n}\n\nexport function setVisibleTraceTime(ts: TimeSpan) {\n  return {\n    type: 'SET_VISIBLE_TRACE_TIME',\n    startSec: ts.start,\n    endSec: ts.end,\n    lastUpdate: Date.now() / 1000,\n  };\n}\n\nexport function updateStatus(msg: string) {\n  return {type: 'UPDATE_STATUS', msg, timestamp: Date.now() / 1000};\n}\n","// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport function assertExists<A>(value: A | null | undefined): A {\n  if (value === null || value === undefined) {\n    throw new Error('Value doesn\\'t exist');\n  }\n  return value;\n}\n\nexport function assertTrue(value: boolean): boolean {\n  if (value !== true) {\n    throw new Error('Failed assertion');\n  }\n  return value;\n}\n"],"names":["globals_1","app_controller_1","remote_1","controller_1","trace_controller_1","permalink_controller_1","actions_1","logging_1","common_1","common_2","actions","query_controller_1","track_controller_1","uuidv4","bytesToUuid","rng","deferred_1","time_1","registry_1","state","wasm_engine_proxy_1","reducer_1","state_1","engine_1","$protobuf","require$$0","require$$6","require$$5","require$$4","require$$3","require$$2","require$$1","util","BufferReader","Reader","utf8","LongBits","BufferWriter","Writer","global","require$$7"],"mappings":"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"}